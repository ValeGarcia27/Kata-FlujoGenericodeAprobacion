"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@typespec";
exports.ids = ["vendor-chunks/@typespec"];
exports.modules = {

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbortError = void 0;\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2Fib3J0LWNvbnRyb2xsZXIvQWJvcnRFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxhQUFhO0FBQ3pCO0FBQ0EseUNBQXlDLDBCQUEwQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdDQUFnQztBQUNuRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxhYm9ydC1jb250cm9sbGVyXFxBYm9ydEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFib3J0RXJyb3IgPSB2b2lkIDA7XG4vKipcbiAqIFRoaXMgZXJyb3IgaXMgdGhyb3duIHdoZW4gYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbiBoYXMgYmVlbiBhYm9ydGVkLlxuICogQ2hlY2sgZm9yIHRoaXMgZXJyb3IgYnkgdGVzdGluZyB0aGUgYG5hbWVgIHRoYXQgdGhlIG5hbWUgcHJvcGVydHkgb2YgdGhlXG4gKiBlcnJvciBtYXRjaGVzIGBcIkFib3J0RXJyb3JcImAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzIHNuaXBwZXQ6UmVhZG1lU2FtcGxlQWJvcnRFcnJvclxuICogaW1wb3J0IHsgQWJvcnRFcnJvciB9IGZyb20gXCJAdHlwZXNwZWMvdHMtaHR0cC1ydW50aW1lXCI7XG4gKlxuICogYXN5bmMgZnVuY3Rpb24gZG9Bc3luY1dvcmsob3B0aW9uczogeyBhYm9ydFNpZ25hbDogQWJvcnRTaWduYWwgfSk6IFByb21pc2U8dm9pZD4ge1xuICogICBpZiAob3B0aW9ucy5hYm9ydFNpZ25hbC5hYm9ydGVkKSB7XG4gKiAgICAgdGhyb3cgbmV3IEFib3J0RXJyb3IoKTtcbiAqICAgfVxuICpcbiAqICAgLy8gZG8gYXN5bmMgd29ya1xuICogfVxuICpcbiAqIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gKiBjb250cm9sbGVyLmFib3J0KCk7XG4gKlxuICogdHJ5IHtcbiAqICAgZG9Bc3luY1dvcmsoeyBhYm9ydFNpZ25hbDogY29udHJvbGxlci5zaWduYWwgfSk7XG4gKiB9IGNhdGNoIChlKSB7XG4gKiAgIGlmIChlIGluc3RhbmNlb2YgRXJyb3IgJiYgZS5uYW1lID09PSBcIkFib3J0RXJyb3JcIikge1xuICogICAgIC8vIGhhbmRsZSBhYm9ydCBlcnJvciBoZXJlLlxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuY2xhc3MgQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkFib3J0RXJyb3JcIjtcbiAgICB9XG59XG5leHBvcnRzLkFib3J0RXJyb3IgPSBBYm9ydEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJvcnRFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/credentials.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/credentials.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isOAuth2TokenCredential = isOAuth2TokenCredential;\nexports.isBearerTokenCredential = isBearerTokenCredential;\nexports.isBasicCredential = isBasicCredential;\nexports.isApiKeyCredential = isApiKeyCredential;\n/**\n * Type guard to check if a credential is an OAuth2 token credential.\n */\nfunction isOAuth2TokenCredential(credential) {\n    return \"getOAuth2Token\" in credential;\n}\n/**\n * Type guard to check if a credential is a Bearer token credential.\n */\nfunction isBearerTokenCredential(credential) {\n    return \"getBearerToken\" in credential;\n}\n/**\n * Type guard to check if a credential is a Basic auth credential.\n */\nfunction isBasicCredential(credential) {\n    return \"username\" in credential && \"password\" in credential;\n}\n/**\n * Type guard to check if a credential is an API key credential.\n */\nfunction isApiKeyCredential(credential) {\n    return \"key\" in credential;\n}\n//# sourceMappingURL=credentials.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2F1dGgvY3JlZGVudGlhbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQiwrQkFBK0I7QUFDL0IseUJBQXlCO0FBQ3pCLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcYXV0aFxcY3JlZGVudGlhbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNPQXV0aDJUb2tlbkNyZWRlbnRpYWwgPSBpc09BdXRoMlRva2VuQ3JlZGVudGlhbDtcbmV4cG9ydHMuaXNCZWFyZXJUb2tlbkNyZWRlbnRpYWwgPSBpc0JlYXJlclRva2VuQ3JlZGVudGlhbDtcbmV4cG9ydHMuaXNCYXNpY0NyZWRlbnRpYWwgPSBpc0Jhc2ljQ3JlZGVudGlhbDtcbmV4cG9ydHMuaXNBcGlLZXlDcmVkZW50aWFsID0gaXNBcGlLZXlDcmVkZW50aWFsO1xuLyoqXG4gKiBUeXBlIGd1YXJkIHRvIGNoZWNrIGlmIGEgY3JlZGVudGlhbCBpcyBhbiBPQXV0aDIgdG9rZW4gY3JlZGVudGlhbC5cbiAqL1xuZnVuY3Rpb24gaXNPQXV0aDJUb2tlbkNyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIHJldHVybiBcImdldE9BdXRoMlRva2VuXCIgaW4gY3JlZGVudGlhbDtcbn1cbi8qKlxuICogVHlwZSBndWFyZCB0byBjaGVjayBpZiBhIGNyZWRlbnRpYWwgaXMgYSBCZWFyZXIgdG9rZW4gY3JlZGVudGlhbC5cbiAqL1xuZnVuY3Rpb24gaXNCZWFyZXJUb2tlbkNyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIHJldHVybiBcImdldEJlYXJlclRva2VuXCIgaW4gY3JlZGVudGlhbDtcbn1cbi8qKlxuICogVHlwZSBndWFyZCB0byBjaGVjayBpZiBhIGNyZWRlbnRpYWwgaXMgYSBCYXNpYyBhdXRoIGNyZWRlbnRpYWwuXG4gKi9cbmZ1bmN0aW9uIGlzQmFzaWNDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gXCJ1c2VybmFtZVwiIGluIGNyZWRlbnRpYWwgJiYgXCJwYXNzd29yZFwiIGluIGNyZWRlbnRpYWw7XG59XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gY2hlY2sgaWYgYSBjcmVkZW50aWFsIGlzIGFuIEFQSSBrZXkgY3JlZGVudGlhbC5cbiAqL1xuZnVuY3Rpb24gaXNBcGlLZXlDcmVkZW50aWFsKGNyZWRlbnRpYWwpIHtcbiAgICByZXR1cm4gXCJrZXlcIiBpbiBjcmVkZW50aWFsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlZGVudGlhbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/credentials.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/oauth2Flows.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/oauth2Flows.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=oauth2Flows.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2F1dGgvb2F1dGgyRmxvd3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxhdXRoXFxvYXV0aDJGbG93cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2F1dGgyRmxvd3MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/oauth2Flows.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/schemes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/schemes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=schemes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2F1dGgvc2NoZW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGF1dGhcXHNjaGVtZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVtZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/schemes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/apiVersionPolicy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/apiVersionPolicy.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.apiVersionPolicyName = void 0;\nexports.apiVersionPolicy = apiVersionPolicy;\nexports.apiVersionPolicyName = \"ApiVersionPolicy\";\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nfunction apiVersionPolicy(options) {\n    return {\n        name: exports.apiVersionPolicyName,\n        sendRequest: (req, next) => {\n            // Use the apiVesion defined in request url directly\n            // Append one if there is no apiVesion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${options.apiVersion}`;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=apiVersionPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NsaWVudC9hcGlWZXJzaW9uUG9saWN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsd0JBQXdCO0FBQ3hCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRLEVBQUUsMkRBQTJELGNBQWMsbUJBQW1CO0FBQ25JO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxjbGllbnRcXGFwaVZlcnNpb25Qb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXBpVmVyc2lvblBvbGljeU5hbWUgPSB2b2lkIDA7XG5leHBvcnRzLmFwaVZlcnNpb25Qb2xpY3kgPSBhcGlWZXJzaW9uUG9saWN5O1xuZXhwb3J0cy5hcGlWZXJzaW9uUG9saWN5TmFtZSA9IFwiQXBpVmVyc2lvblBvbGljeVwiO1xuLyoqXG4gKiBDcmVhdGVzIGEgcG9saWN5IHRoYXQgc2V0cyB0aGUgYXBpVmVyc2lvbiBhcyBhIHF1ZXJ5IHBhcmFtZXRlciBvbiBldmVyeSByZXF1ZXN0XG4gKiBAcGFyYW0gb3B0aW9ucyAtIENsaWVudCBvcHRpb25zXG4gKiBAcmV0dXJucyBQaXBlbGluZSBwb2xpY3kgdGhhdCBzZXRzIHRoZSBhcGlWZXJzaW9uIGFzIGEgcXVlcnkgcGFyYW1ldGVyIG9uIGV2ZXJ5IHJlcXVlc3RcbiAqL1xuZnVuY3Rpb24gYXBpVmVyc2lvblBvbGljeShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZXhwb3J0cy5hcGlWZXJzaW9uUG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IChyZXEsIG5leHQpID0+IHtcbiAgICAgICAgICAgIC8vIFVzZSB0aGUgYXBpVmVzaW9uIGRlZmluZWQgaW4gcmVxdWVzdCB1cmwgZGlyZWN0bHlcbiAgICAgICAgICAgIC8vIEFwcGVuZCBvbmUgaWYgdGhlcmUgaXMgbm8gYXBpVmVzaW9uIGFuZCB3ZSBoYXZlIG9uZSBhdCBjbGllbnQgb3B0aW9uc1xuICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChyZXEudXJsKTtcbiAgICAgICAgICAgIGlmICghdXJsLnNlYXJjaFBhcmFtcy5nZXQoXCJhcGktdmVyc2lvblwiKSAmJiBvcHRpb25zLmFwaVZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICByZXEudXJsID0gYCR7cmVxLnVybH0ke0FycmF5LmZyb20odXJsLnNlYXJjaFBhcmFtcy5rZXlzKCkpLmxlbmd0aCA+IDAgPyBcIiZcIiA6IFwiP1wifWFwaS12ZXJzaW9uPSR7b3B0aW9ucy5hcGlWZXJzaW9ufWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXEpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGlWZXJzaW9uUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/apiVersionPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/clientHelpers.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/clientHelpers.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDefaultPipeline = createDefaultPipeline;\nexports.getCachedDefaultHttpsClient = getCachedDefaultHttpsClient;\nconst defaultHttpClient_js_1 = __webpack_require__(/*! ../defaultHttpClient.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/defaultHttpClient.js\");\nconst createPipelineFromOptions_js_1 = __webpack_require__(/*! ../createPipelineFromOptions.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/createPipelineFromOptions.js\");\nconst apiVersionPolicy_js_1 = __webpack_require__(/*! ./apiVersionPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/apiVersionPolicy.js\");\nconst credentials_js_1 = __webpack_require__(/*! ../auth/credentials.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/credentials.js\");\nconst apiKeyAuthenticationPolicy_js_1 = __webpack_require__(/*! ../policies/auth/apiKeyAuthenticationPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/apiKeyAuthenticationPolicy.js\");\nconst basicAuthenticationPolicy_js_1 = __webpack_require__(/*! ../policies/auth/basicAuthenticationPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/basicAuthenticationPolicy.js\");\nconst bearerAuthenticationPolicy_js_1 = __webpack_require__(/*! ../policies/auth/bearerAuthenticationPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/bearerAuthenticationPolicy.js\");\nconst oauth2AuthenticationPolicy_js_1 = __webpack_require__(/*! ../policies/auth/oauth2AuthenticationPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/oauth2AuthenticationPolicy.js\");\nlet cachedHttpClient;\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nfunction createDefaultPipeline(options = {}) {\n    const pipeline = (0, createPipelineFromOptions_js_1.createPipelineFromOptions)(options);\n    pipeline.addPolicy((0, apiVersionPolicy_js_1.apiVersionPolicy)(options));\n    const { credential, authSchemes, allowInsecureConnection } = options;\n    if (credential) {\n        if ((0, credentials_js_1.isApiKeyCredential)(credential)) {\n            pipeline.addPolicy((0, apiKeyAuthenticationPolicy_js_1.apiKeyAuthenticationPolicy)({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if ((0, credentials_js_1.isBasicCredential)(credential)) {\n            pipeline.addPolicy((0, basicAuthenticationPolicy_js_1.basicAuthenticationPolicy)({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if ((0, credentials_js_1.isBearerTokenCredential)(credential)) {\n            pipeline.addPolicy((0, bearerAuthenticationPolicy_js_1.bearerAuthenticationPolicy)({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if ((0, credentials_js_1.isOAuth2TokenCredential)(credential)) {\n            pipeline.addPolicy((0, oauth2AuthenticationPolicy_js_1.oauth2AuthenticationPolicy)({ authSchemes, credential, allowInsecureConnection }));\n        }\n    }\n    return pipeline;\n}\nfunction getCachedDefaultHttpsClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0, defaultHttpClient_js_1.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=clientHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NsaWVudC9jbGllbnRIZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IsbUNBQW1DO0FBQ25DLCtCQUErQixtQkFBTyxDQUFDLGtIQUF5QjtBQUNoRSx1Q0FBdUMsbUJBQU8sQ0FBQyxrSUFBaUM7QUFDaEYsOEJBQThCLG1CQUFPLENBQUMsc0hBQXVCO0FBQzdELHlCQUF5QixtQkFBTyxDQUFDLGdIQUF3QjtBQUN6RCx3Q0FBd0MsbUJBQU8sQ0FBQyxnS0FBZ0Q7QUFDaEcsdUNBQXVDLG1CQUFPLENBQUMsOEpBQStDO0FBQzlGLHdDQUF3QyxtQkFBTyxDQUFDLGdLQUFnRDtBQUNoRyx3Q0FBd0MsbUJBQU8sQ0FBQyxnS0FBZ0Q7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBLFlBQVksbURBQW1EO0FBQy9EO0FBQ0E7QUFDQSxpR0FBaUcsa0RBQWtEO0FBQ25KO0FBQ0E7QUFDQSwrRkFBK0Ysa0RBQWtEO0FBQ2pKO0FBQ0E7QUFDQSxpR0FBaUcsa0RBQWtEO0FBQ25KO0FBQ0E7QUFDQSxpR0FBaUcsa0RBQWtEO0FBQ25KO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGNsaWVudFxcY2xpZW50SGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVEZWZhdWx0UGlwZWxpbmUgPSBjcmVhdGVEZWZhdWx0UGlwZWxpbmU7XG5leHBvcnRzLmdldENhY2hlZERlZmF1bHRIdHRwc0NsaWVudCA9IGdldENhY2hlZERlZmF1bHRIdHRwc0NsaWVudDtcbmNvbnN0IGRlZmF1bHRIdHRwQ2xpZW50X2pzXzEgPSByZXF1aXJlKFwiLi4vZGVmYXVsdEh0dHBDbGllbnQuanNcIik7XG5jb25zdCBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zX2pzXzEgPSByZXF1aXJlKFwiLi4vY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucy5qc1wiKTtcbmNvbnN0IGFwaVZlcnNpb25Qb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuL2FwaVZlcnNpb25Qb2xpY3kuanNcIik7XG5jb25zdCBjcmVkZW50aWFsc19qc18xID0gcmVxdWlyZShcIi4uL2F1dGgvY3JlZGVudGlhbHMuanNcIik7XG5jb25zdCBhcGlLZXlBdXRoZW50aWNhdGlvblBvbGljeV9qc18xID0gcmVxdWlyZShcIi4uL3BvbGljaWVzL2F1dGgvYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3kuanNcIik7XG5jb25zdCBiYXNpY0F1dGhlbnRpY2F0aW9uUG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi4vcG9saWNpZXMvYXV0aC9iYXNpY0F1dGhlbnRpY2F0aW9uUG9saWN5LmpzXCIpO1xuY29uc3QgYmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuLi9wb2xpY2llcy9hdXRoL2JlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5LmpzXCIpO1xuY29uc3Qgb2F1dGgyQXV0aGVudGljYXRpb25Qb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuLi9wb2xpY2llcy9hdXRoL29hdXRoMkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzXCIpO1xubGV0IGNhY2hlZEh0dHBDbGllbnQ7XG4vKipcbiAqIENyZWF0ZXMgYSBkZWZhdWx0IHJlc3QgcGlwZWxpbmUgdG8gcmUtdXNlIGFjY3Jvc3MgUmVzdCBMZXZlbCBDbGllbnRzXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRQaXBlbGluZShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBwaXBlbGluZSA9ICgwLCBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zX2pzXzEuY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucykob3B0aW9ucyk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCBhcGlWZXJzaW9uUG9saWN5X2pzXzEuYXBpVmVyc2lvblBvbGljeSkob3B0aW9ucykpO1xuICAgIGNvbnN0IHsgY3JlZGVudGlhbCwgYXV0aFNjaGVtZXMsIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uIH0gPSBvcHRpb25zO1xuICAgIGlmIChjcmVkZW50aWFsKSB7XG4gICAgICAgIGlmICgoMCwgY3JlZGVudGlhbHNfanNfMS5pc0FwaUtleUNyZWRlbnRpYWwpKGNyZWRlbnRpYWwpKSB7XG4gICAgICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3koKDAsIGFwaUtleUF1dGhlbnRpY2F0aW9uUG9saWN5X2pzXzEuYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3kpKHsgYXV0aFNjaGVtZXMsIGNyZWRlbnRpYWwsIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoMCwgY3JlZGVudGlhbHNfanNfMS5pc0Jhc2ljQ3JlZGVudGlhbCkoY3JlZGVudGlhbCkpIHtcbiAgICAgICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeSgoMCwgYmFzaWNBdXRoZW50aWNhdGlvblBvbGljeV9qc18xLmJhc2ljQXV0aGVudGljYXRpb25Qb2xpY3kpKHsgYXV0aFNjaGVtZXMsIGNyZWRlbnRpYWwsIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoMCwgY3JlZGVudGlhbHNfanNfMS5pc0JlYXJlclRva2VuQ3JlZGVudGlhbCkoY3JlZGVudGlhbCkpIHtcbiAgICAgICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeSgoMCwgYmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3lfanNfMS5iZWFyZXJBdXRoZW50aWNhdGlvblBvbGljeSkoeyBhdXRoU2NoZW1lcywgY3JlZGVudGlhbCwgYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gfSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCgwLCBjcmVkZW50aWFsc19qc18xLmlzT0F1dGgyVG9rZW5DcmVkZW50aWFsKShjcmVkZW50aWFsKSkge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCBvYXV0aDJBdXRoZW50aWNhdGlvblBvbGljeV9qc18xLm9hdXRoMkF1dGhlbnRpY2F0aW9uUG9saWN5KSh7IGF1dGhTY2hlbWVzLCBjcmVkZW50aWFsLCBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbiB9KSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBpcGVsaW5lO1xufVxuZnVuY3Rpb24gZ2V0Q2FjaGVkRGVmYXVsdEh0dHBzQ2xpZW50KCkge1xuICAgIGlmICghY2FjaGVkSHR0cENsaWVudCkge1xuICAgICAgICBjYWNoZWRIdHRwQ2xpZW50ID0gKDAsIGRlZmF1bHRIdHRwQ2xpZW50X2pzXzEuY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQpKCk7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWRIdHRwQ2xpZW50O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50SGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/clientHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/getClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/getClient.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getClient = getClient;\nconst clientHelpers_js_1 = __webpack_require__(/*! ./clientHelpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/clientHelpers.js\");\nconst sendRequest_js_1 = __webpack_require__(/*! ./sendRequest.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/sendRequest.js\");\nconst urlHelpers_js_1 = __webpack_require__(/*! ./urlHelpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/urlHelpers.js\");\nconst checkEnvironment_js_1 = __webpack_require__(/*! ../util/checkEnvironment.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js\");\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nfunction getClient(endpoint, clientOptions = {}) {\n    var _a, _b, _c;\n    const pipeline = (_a = clientOptions.pipeline) !== null && _a !== void 0 ? _a : (0, clientHelpers_js_1.createDefaultPipeline)(clientOptions);\n    if ((_b = clientOptions.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n        for (const { policy, position } of clientOptions.additionalPolicies) {\n            // Sign happens after Retry and is commonly needed to occur\n            // before policies that intercept post-retry.\n            const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n            pipeline.addPolicy(policy, {\n                afterPhase,\n            });\n        }\n    }\n    const { allowInsecureConnection, httpClient } = clientOptions;\n    const endpointUrl = (_c = clientOptions.endpoint) !== null && _c !== void 0 ? _c : endpoint;\n    const client = (path, ...args) => {\n        const getUrl = (requestOptions) => (0, urlHelpers_js_1.buildRequestUrl)(endpointUrl, path, args, Object.assign({ allowInsecureConnection }, requestOptions));\n        return {\n            get: (requestOptions = {}) => {\n                return buildOperation(\"GET\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            post: (requestOptions = {}) => {\n                return buildOperation(\"POST\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            put: (requestOptions = {}) => {\n                return buildOperation(\"PUT\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            patch: (requestOptions = {}) => {\n                return buildOperation(\"PATCH\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            delete: (requestOptions = {}) => {\n                return buildOperation(\"DELETE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            head: (requestOptions = {}) => {\n                return buildOperation(\"HEAD\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            options: (requestOptions = {}) => {\n                return buildOperation(\"OPTIONS\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            trace: (requestOptions = {}) => {\n                return buildOperation(\"TRACE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n        };\n    };\n    return {\n        path: client,\n        pathUnchecked: client,\n        pipeline,\n    };\n}\nfunction buildOperation(method, url, pipeline, options, allowInsecureConnection, httpClient) {\n    var _a;\n    allowInsecureConnection = (_a = options.allowInsecureConnection) !== null && _a !== void 0 ? _a : allowInsecureConnection;\n    return {\n        then: function (onFulfilled, onrejected) {\n            return (0, sendRequest_js_1.sendRequest)(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection }), httpClient).then(onFulfilled, onrejected);\n        },\n        async asBrowserStream() {\n            if (checkEnvironment_js_1.isNodeLike) {\n                throw new Error(\"`asBrowserStream` is supported only in the browser environment. Use `asNodeStream` instead to obtain the response body stream. If you require a Web stream of the response in Node, consider using `Readable.toWeb` on the result of `asNodeStream`.\");\n            }\n            else {\n                return (0, sendRequest_js_1.sendRequest)(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n        },\n        async asNodeStream() {\n            if (checkEnvironment_js_1.isNodeLike) {\n                return (0, sendRequest_js_1.sendRequest)(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n            else {\n                throw new Error(\"`isNodeStream` is not supported in the browser environment. Use `asBrowserStream` to obtain the response body stream.\");\n            }\n        },\n    };\n}\n//# sourceMappingURL=getClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/getClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/multipart.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/multipart.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildBodyPart = buildBodyPart;\nexports.buildMultipartBody = buildMultipartBody;\nconst restError_js_1 = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\");\nconst httpHeaders_js_1 = __webpack_require__(/*! ../httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nconst bytesEncoding_js_1 = __webpack_require__(/*! ../util/bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nconst typeGuards_js_1 = __webpack_require__(/*! ../util/typeGuards.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js\");\n/**\n * Get value of a header in the part descriptor ignoring case\n */\nfunction getHeaderValue(descriptor, headerName) {\n    if (descriptor.headers) {\n        const actualHeaderName = Object.keys(descriptor.headers).find((x) => x.toLowerCase() === headerName.toLowerCase());\n        if (actualHeaderName) {\n            return descriptor.headers[actualHeaderName];\n        }\n    }\n    return undefined;\n}\nfunction getPartContentType(descriptor) {\n    const contentTypeHeader = getHeaderValue(descriptor, \"content-type\");\n    if (contentTypeHeader) {\n        return contentTypeHeader;\n    }\n    // Special value of null means content type is to be omitted\n    if (descriptor.contentType === null) {\n        return undefined;\n    }\n    if (descriptor.contentType) {\n        return descriptor.contentType;\n    }\n    const { body } = descriptor;\n    if (body === null || body === undefined) {\n        return undefined;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return \"text/plain; charset=UTF-8\";\n    }\n    if (body instanceof Blob) {\n        return body.type || \"application/octet-stream\";\n    }\n    if ((0, typeGuards_js_1.isBinaryBody)(body)) {\n        return \"application/octet-stream\";\n    }\n    // arbitrary non-text object -> generic JSON content type by default. We will try to JSON.stringify the body.\n    return \"application/json\";\n}\n/**\n * Enclose value in quotes and escape special characters, for use in the Content-Disposition header\n */\nfunction escapeDispositionField(value) {\n    return JSON.stringify(value);\n}\nfunction getContentDisposition(descriptor) {\n    var _a;\n    const contentDispositionHeader = getHeaderValue(descriptor, \"content-disposition\");\n    if (contentDispositionHeader) {\n        return contentDispositionHeader;\n    }\n    if (descriptor.dispositionType === undefined &&\n        descriptor.name === undefined &&\n        descriptor.filename === undefined) {\n        return undefined;\n    }\n    const dispositionType = (_a = descriptor.dispositionType) !== null && _a !== void 0 ? _a : \"form-data\";\n    let disposition = dispositionType;\n    if (descriptor.name) {\n        disposition += `; name=${escapeDispositionField(descriptor.name)}`;\n    }\n    let filename = undefined;\n    if (descriptor.filename) {\n        filename = descriptor.filename;\n    }\n    else if (typeof File !== \"undefined\" && descriptor.body instanceof File) {\n        const filenameFromFile = descriptor.body.name;\n        if (filenameFromFile !== \"\") {\n            filename = filenameFromFile;\n        }\n    }\n    if (filename) {\n        disposition += `; filename=${escapeDispositionField(filename)}`;\n    }\n    return disposition;\n}\nfunction normalizeBody(body, contentType) {\n    if (body === undefined) {\n        // zero-length body\n        return new Uint8Array([]);\n    }\n    // binary and primitives should go straight on the wire regardless of content type\n    if ((0, typeGuards_js_1.isBinaryBody)(body)) {\n        return body;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return (0, bytesEncoding_js_1.stringToUint8Array)(String(body), \"utf-8\");\n    }\n    // stringify objects for JSON-ish content types e.g. application/json, application/merge-patch+json, application/vnd.oci.manifest.v1+json, application.json; charset=UTF-8\n    if (contentType && /application\\/(.+\\+)?json(;.+)?/i.test(String(contentType))) {\n        return (0, bytesEncoding_js_1.stringToUint8Array)(JSON.stringify(body), \"utf-8\");\n    }\n    throw new restError_js_1.RestError(`Unsupported body/content-type combination: ${body}, ${contentType}`);\n}\nfunction buildBodyPart(descriptor) {\n    var _a;\n    const contentType = getPartContentType(descriptor);\n    const contentDisposition = getContentDisposition(descriptor);\n    const headers = (0, httpHeaders_js_1.createHttpHeaders)((_a = descriptor.headers) !== null && _a !== void 0 ? _a : {});\n    if (contentType) {\n        headers.set(\"content-type\", contentType);\n    }\n    if (contentDisposition) {\n        headers.set(\"content-disposition\", contentDisposition);\n    }\n    const body = normalizeBody(descriptor.body, contentType);\n    return {\n        headers,\n        body,\n    };\n}\nfunction buildMultipartBody(parts) {\n    return { parts: parts.map(buildBodyPart) };\n}\n//# sourceMappingURL=multipart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/multipart.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/operationOptionHelpers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/operationOptionHelpers.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.operationOptionsToRequestParameters = operationOptionsToRequestParameters;\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nfunction operationOptionsToRequestParameters(options) {\n    var _a, _b, _c, _d, _e, _f;\n    return {\n        allowInsecureConnection: (_a = options.requestOptions) === null || _a === void 0 ? void 0 : _a.allowInsecureConnection,\n        timeout: (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.timeout,\n        skipUrlEncoding: (_c = options.requestOptions) === null || _c === void 0 ? void 0 : _c.skipUrlEncoding,\n        abortSignal: options.abortSignal,\n        onUploadProgress: (_d = options.requestOptions) === null || _d === void 0 ? void 0 : _d.onUploadProgress,\n        onDownloadProgress: (_e = options.requestOptions) === null || _e === void 0 ? void 0 : _e.onDownloadProgress,\n        headers: Object.assign({}, (_f = options.requestOptions) === null || _f === void 0 ? void 0 : _f.headers),\n        onResponse: options.onResponse,\n    };\n}\n//# sourceMappingURL=operationOptionHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NsaWVudC9vcGVyYXRpb25PcHRpb25IZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcY2xpZW50XFxvcGVyYXRpb25PcHRpb25IZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm9wZXJhdGlvbk9wdGlvbnNUb1JlcXVlc3RQYXJhbWV0ZXJzID0gb3BlcmF0aW9uT3B0aW9uc1RvUmVxdWVzdFBhcmFtZXRlcnM7XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBjb252ZXJ0IE9wZXJhdGlvbk9wdGlvbnMgdG8gUmVxdWVzdFBhcmFtZXRlcnNcbiAqIEBwYXJhbSBvcHRpb25zIC0gdGhlIG9wdGlvbnMgdGhhdCBhcmUgdXNlZCBieSBNb2R1bGFyIGxheWVyIHRvIHNlbmQgdGhlIHJlcXVlc3RcbiAqIEByZXR1cm5zIHRoZSByZXN1bHQgb2YgdGhlIGNvbnZlcnNpb24gaW4gUmVxdWVzdFBhcmFtZXRlcnMgb2YgUkxDIGxheWVyXG4gKi9cbmZ1bmN0aW9uIG9wZXJhdGlvbk9wdGlvbnNUb1JlcXVlc3RQYXJhbWV0ZXJzKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbjogKF9hID0gb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFsbG93SW5zZWN1cmVDb25uZWN0aW9uLFxuICAgICAgICB0aW1lb3V0OiAoX2IgPSBvcHRpb25zLnJlcXVlc3RPcHRpb25zKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudGltZW91dCxcbiAgICAgICAgc2tpcFVybEVuY29kaW5nOiAoX2MgPSBvcHRpb25zLnJlcXVlc3RPcHRpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Muc2tpcFVybEVuY29kaW5nLFxuICAgICAgICBhYm9ydFNpZ25hbDogb3B0aW9ucy5hYm9ydFNpZ25hbCxcbiAgICAgICAgb25VcGxvYWRQcm9ncmVzczogKF9kID0gb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLm9uVXBsb2FkUHJvZ3Jlc3MsXG4gICAgICAgIG9uRG93bmxvYWRQcm9ncmVzczogKF9lID0gb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucykgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLm9uRG93bmxvYWRQcm9ncmVzcyxcbiAgICAgICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbih7fSwgKF9mID0gb3B0aW9ucy5yZXF1ZXN0T3B0aW9ucykgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmhlYWRlcnMpLFxuICAgICAgICBvblJlc3BvbnNlOiBvcHRpb25zLm9uUmVzcG9uc2UsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wZXJhdGlvbk9wdGlvbkhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/operationOptionHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/restError.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/restError.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createRestError = createRestError;\nconst restError_js_1 = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\");\nconst httpHeaders_js_1 = __webpack_require__(/*! ../httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nfunction createRestError(messageOrResponse, response) {\n    var _a, _b, _c;\n    const resp = typeof messageOrResponse === \"string\" ? response : messageOrResponse;\n    const internalError = (_b = (_a = resp.body) === null || _a === void 0 ? void 0 : _a.error) !== null && _b !== void 0 ? _b : resp.body;\n    const message = typeof messageOrResponse === \"string\"\n        ? messageOrResponse\n        : ((_c = internalError === null || internalError === void 0 ? void 0 : internalError.message) !== null && _c !== void 0 ? _c : `Unexpected status code: ${resp.status}`);\n    return new restError_js_1.RestError(message, {\n        statusCode: statusCodeToNumber(resp.status),\n        code: internalError === null || internalError === void 0 ? void 0 : internalError.code,\n        request: resp.request,\n        response: toPipelineResponse(resp),\n    });\n}\nfunction toPipelineResponse(response) {\n    var _a;\n    return {\n        headers: (0, httpHeaders_js_1.createHttpHeaders)(response.headers),\n        request: response.request,\n        status: (_a = statusCodeToNumber(response.status)) !== null && _a !== void 0 ? _a : -1,\n    };\n}\nfunction statusCodeToNumber(statusCode) {\n    const status = Number.parseInt(statusCode);\n    return Number.isNaN(status) ? undefined : status;\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NsaWVudC9yZXN0RXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qix1QkFBdUIsbUJBQU8sQ0FBQyxrR0FBaUI7QUFDaEQseUJBQXlCLG1CQUFPLENBQUMsc0dBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtLQUFrSyxZQUFZO0FBQzlLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcY2xpZW50XFxyZXN0RXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUmVzdEVycm9yID0gY3JlYXRlUmVzdEVycm9yO1xuY29uc3QgcmVzdEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi4vcmVzdEVycm9yLmpzXCIpO1xuY29uc3QgaHR0cEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuLi9odHRwSGVhZGVycy5qc1wiKTtcbmZ1bmN0aW9uIGNyZWF0ZVJlc3RFcnJvcihtZXNzYWdlT3JSZXNwb25zZSwgcmVzcG9uc2UpIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBjb25zdCByZXNwID0gdHlwZW9mIG1lc3NhZ2VPclJlc3BvbnNlID09PSBcInN0cmluZ1wiID8gcmVzcG9uc2UgOiBtZXNzYWdlT3JSZXNwb25zZTtcbiAgICBjb25zdCBpbnRlcm5hbEVycm9yID0gKF9iID0gKF9hID0gcmVzcC5ib2R5KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZXJyb3IpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHJlc3AuYm9keTtcbiAgICBjb25zdCBtZXNzYWdlID0gdHlwZW9mIG1lc3NhZ2VPclJlc3BvbnNlID09PSBcInN0cmluZ1wiXG4gICAgICAgID8gbWVzc2FnZU9yUmVzcG9uc2VcbiAgICAgICAgOiAoKF9jID0gaW50ZXJuYWxFcnJvciA9PT0gbnVsbCB8fCBpbnRlcm5hbEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcm5hbEVycm9yLm1lc3NhZ2UpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IGBVbmV4cGVjdGVkIHN0YXR1cyBjb2RlOiAke3Jlc3Auc3RhdHVzfWApO1xuICAgIHJldHVybiBuZXcgcmVzdEVycm9yX2pzXzEuUmVzdEVycm9yKG1lc3NhZ2UsIHtcbiAgICAgICAgc3RhdHVzQ29kZTogc3RhdHVzQ29kZVRvTnVtYmVyKHJlc3Auc3RhdHVzKSxcbiAgICAgICAgY29kZTogaW50ZXJuYWxFcnJvciA9PT0gbnVsbCB8fCBpbnRlcm5hbEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcm5hbEVycm9yLmNvZGUsXG4gICAgICAgIHJlcXVlc3Q6IHJlc3AucmVxdWVzdCxcbiAgICAgICAgcmVzcG9uc2U6IHRvUGlwZWxpbmVSZXNwb25zZShyZXNwKSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHRvUGlwZWxpbmVSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4ge1xuICAgICAgICBoZWFkZXJzOiAoMCwgaHR0cEhlYWRlcnNfanNfMS5jcmVhdGVIdHRwSGVhZGVycykocmVzcG9uc2UuaGVhZGVycyksXG4gICAgICAgIHJlcXVlc3Q6IHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICAgIHN0YXR1czogKF9hID0gc3RhdHVzQ29kZVRvTnVtYmVyKHJlc3BvbnNlLnN0YXR1cykpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IC0xLFxuICAgIH07XG59XG5mdW5jdGlvbiBzdGF0dXNDb2RlVG9OdW1iZXIoc3RhdHVzQ29kZSkge1xuICAgIGNvbnN0IHN0YXR1cyA9IE51bWJlci5wYXJzZUludChzdGF0dXNDb2RlKTtcbiAgICByZXR1cm4gTnVtYmVyLmlzTmFOKHN0YXR1cykgPyB1bmRlZmluZWQgOiBzdGF0dXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXN0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/restError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/sendRequest.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/sendRequest.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sendRequest = sendRequest;\nconst restError_js_1 = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\");\nconst httpHeaders_js_1 = __webpack_require__(/*! ../httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nconst pipelineRequest_js_1 = __webpack_require__(/*! ../pipelineRequest.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipelineRequest.js\");\nconst clientHelpers_js_1 = __webpack_require__(/*! ./clientHelpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/clientHelpers.js\");\nconst typeGuards_js_1 = __webpack_require__(/*! ../util/typeGuards.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js\");\nconst multipart_js_1 = __webpack_require__(/*! ./multipart.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/multipart.js\");\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nasync function sendRequest(method, url, pipeline, options = {}, customHttpClient) {\n    var _a;\n    const httpClient = customHttpClient !== null && customHttpClient !== void 0 ? customHttpClient : (0, clientHelpers_js_1.getCachedDefaultHttpsClient)();\n    const request = buildPipelineRequest(method, url, options);\n    try {\n        const response = await pipeline.sendRequest(httpClient, request);\n        const headers = response.headers.toJSON();\n        const stream = (_a = response.readableStreamBody) !== null && _a !== void 0 ? _a : response.browserStreamBody;\n        const parsedBody = options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n        const body = stream !== null && stream !== void 0 ? stream : parsedBody;\n        if (options === null || options === void 0 ? void 0 : options.onResponse) {\n            options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders: headers, parsedBody }));\n        }\n        return {\n            request,\n            headers,\n            status: `${response.status}`,\n            body,\n        };\n    }\n    catch (e) {\n        if ((0, restError_js_1.isRestError)(e) && e.response && options.onResponse) {\n            const { response } = e;\n            const rawHeaders = response.headers.toJSON();\n            // UNBRANDED DIFFERENCE: onResponse callback does not have a second __legacyError property\n            options === null || options === void 0 ? void 0 : options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders }), e);\n        }\n        throw e;\n    }\n}\n/**\n * Function to determine the request content type\n * @param options - request options InternalRequestParameters\n * @returns returns the content-type\n */\nfunction getRequestContentType(options = {}) {\n    var _a, _b, _c;\n    return ((_c = (_a = options.contentType) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b[\"content-type\"]) !== null && _c !== void 0 ? _c : getContentType(options.body));\n}\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body) {\n    if (ArrayBuffer.isView(body)) {\n        return \"application/octet-stream\";\n    }\n    if (typeof body === \"string\") {\n        try {\n            JSON.parse(body);\n            return \"application/json\";\n        }\n        catch (error) {\n            // If we fail to parse the body, it is not json\n            return undefined;\n        }\n    }\n    // By default return json\n    return \"application/json\";\n}\nfunction buildPipelineRequest(method, url, options = {}) {\n    var _a, _b, _c;\n    const requestContentType = getRequestContentType(options);\n    const { body, multipartBody } = getRequestBody(options.body, requestContentType);\n    const hasContent = body !== undefined || multipartBody !== undefined;\n    const headers = (0, httpHeaders_js_1.createHttpHeaders)(Object.assign(Object.assign(Object.assign({}, (options.headers ? options.headers : {})), { accept: (_c = (_a = options.accept) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b.accept) !== null && _c !== void 0 ? _c : \"application/json\" }), (hasContent &&\n        requestContentType && {\n        \"content-type\": requestContentType,\n    })));\n    return (0, pipelineRequest_js_1.createPipelineRequest)({\n        url,\n        method,\n        body,\n        multipartBody,\n        headers,\n        allowInsecureConnection: options.allowInsecureConnection,\n        abortSignal: options.abortSignal,\n        onUploadProgress: options.onUploadProgress,\n        onDownloadProgress: options.onDownloadProgress,\n        timeout: options.timeout,\n        enableBrowserStreams: true,\n        streamResponseStatusCodes: options.responseAsStream\n            ? new Set([Number.POSITIVE_INFINITY])\n            : undefined,\n    });\n}\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body, contentType = \"\") {\n    if (body === undefined) {\n        return { body: undefined };\n    }\n    if (typeof FormData !== \"undefined\" && body instanceof FormData) {\n        return { body };\n    }\n    if ((0, typeGuards_js_1.isReadableStream)(body)) {\n        return { body };\n    }\n    if (ArrayBuffer.isView(body)) {\n        return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n    }\n    const firstType = contentType.split(\";\")[0];\n    switch (firstType) {\n        case \"application/json\":\n            return { body: JSON.stringify(body) };\n        case \"multipart/form-data\":\n            if (Array.isArray(body)) {\n                return { multipartBody: (0, multipart_js_1.buildMultipartBody)(body) };\n            }\n            return { body: JSON.stringify(body) };\n        case \"text/plain\":\n            return { body: String(body) };\n        default:\n            if (typeof body === \"string\") {\n                return { body };\n            }\n            return { body: JSON.stringify(body) };\n    }\n}\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response) {\n    var _a, _b;\n    // Set the default response type\n    const contentType = (_a = response.headers.get(\"content-type\")) !== null && _a !== void 0 ? _a : \"\";\n    const firstType = contentType.split(\";\")[0];\n    const bodyToParse = (_b = response.bodyAsText) !== null && _b !== void 0 ? _b : \"\";\n    if (firstType === \"text/plain\") {\n        return String(bodyToParse);\n    }\n    // Default to \"application/json\" and fallback to string;\n    try {\n        return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n    }\n    catch (error) {\n        // If we were supposed to get a JSON object and failed to\n        // parse, throw a parse error\n        if (firstType === \"application/json\") {\n            throw createParseError(response, error);\n        }\n        // We are not sure how to handle the response so we return it as\n        // plain text.\n        return String(bodyToParse);\n    }\n}\nfunction createParseError(response, err) {\n    var _a;\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n    const errCode = (_a = err.code) !== null && _a !== void 0 ? _a : restError_js_1.RestError.PARSE_ERROR;\n    return new restError_js_1.RestError(msg, {\n        code: errCode,\n        statusCode: response.status,\n        request: response.request,\n        response: response,\n    });\n}\n//# sourceMappingURL=sendRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/sendRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/urlHelpers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/urlHelpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildRequestUrl = buildRequestUrl;\nexports.buildBaseUrl = buildBaseUrl;\nexports.replaceAll = replaceAll;\nfunction isQueryParameterWithOptions(x) {\n    const value = x.value;\n    return (value !== undefined && value.toString !== undefined && typeof value.toString === \"function\");\n}\n/**\n * Builds the request url, filling in query and path parameters\n * @param endpoint - base url which can be a template url\n * @param routePath - path to append to the endpoint\n * @param pathParameters - values of the path parameters\n * @param options - request parameters including query parameters\n * @returns a full url with path and query parameters\n */\nfunction buildRequestUrl(endpoint, routePath, pathParameters, options = {}) {\n    if (routePath.startsWith(\"https://\") || routePath.startsWith(\"http://\")) {\n        return routePath;\n    }\n    endpoint = buildBaseUrl(endpoint, options);\n    routePath = buildRoutePath(routePath, pathParameters, options);\n    const requestUrl = appendQueryParams(`${endpoint}/${routePath}`, options);\n    const url = new URL(requestUrl);\n    return (url\n        .toString()\n        // Remove double forward slashes\n        .replace(/([^:]\\/)\\/+/g, \"$1\"));\n}\nfunction getQueryParamValue(key, allowReserved, style, param) {\n    let separator;\n    if (style === \"pipeDelimited\") {\n        separator = \"|\";\n    }\n    else if (style === \"spaceDelimited\") {\n        separator = \"%20\";\n    }\n    else {\n        separator = \",\";\n    }\n    let paramValues;\n    if (Array.isArray(param)) {\n        paramValues = param;\n    }\n    else if (typeof param === \"object\" && param.toString === Object.prototype.toString) {\n        // If the parameter is an object without a custom toString implementation (e.g. a Date),\n        // then we should deconstruct the object into an array [key1, value1, key2, value2, ...].\n        paramValues = Object.entries(param).flat();\n    }\n    else {\n        paramValues = [param];\n    }\n    const value = paramValues\n        .map((p) => {\n        if (p === null || p === undefined) {\n            return \"\";\n        }\n        if (!p.toString || typeof p.toString !== \"function\") {\n            throw new Error(`Query parameters must be able to be represented as string, ${key} can't`);\n        }\n        const rawValue = p.toISOString !== undefined ? p.toISOString() : p.toString();\n        return allowReserved ? rawValue : encodeURIComponent(rawValue);\n    })\n        .join(separator);\n    return `${allowReserved ? key : encodeURIComponent(key)}=${value}`;\n}\nfunction appendQueryParams(url, options = {}) {\n    var _a, _b, _c, _d;\n    if (!options.queryParameters) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    const queryParams = options.queryParameters;\n    const paramStrings = [];\n    for (const key of Object.keys(queryParams)) {\n        const param = queryParams[key];\n        if (param === undefined || param === null) {\n            continue;\n        }\n        const hasMetadata = isQueryParameterWithOptions(param);\n        const rawValue = hasMetadata ? param.value : param;\n        const explode = hasMetadata ? ((_a = param.explode) !== null && _a !== void 0 ? _a : false) : false;\n        const style = hasMetadata && param.style ? param.style : \"form\";\n        if (explode) {\n            if (Array.isArray(rawValue)) {\n                for (const item of rawValue) {\n                    paramStrings.push(getQueryParamValue(key, (_b = options.skipUrlEncoding) !== null && _b !== void 0 ? _b : false, style, item));\n                }\n            }\n            else if (typeof rawValue === \"object\") {\n                // For object explode, the name of the query parameter is ignored and we use the object key instead\n                for (const [actualKey, value] of Object.entries(rawValue)) {\n                    paramStrings.push(getQueryParamValue(actualKey, (_c = options.skipUrlEncoding) !== null && _c !== void 0 ? _c : false, style, value));\n                }\n            }\n            else {\n                // Explode doesn't really make sense for primitives\n                throw new Error(\"explode can only be set to true for objects and arrays\");\n            }\n        }\n        else {\n            paramStrings.push(getQueryParamValue(key, (_d = options.skipUrlEncoding) !== null && _d !== void 0 ? _d : false, style, rawValue));\n        }\n    }\n    if (parsedUrl.search !== \"\") {\n        parsedUrl.search += \"&\";\n    }\n    parsedUrl.search += paramStrings.join(\"&\");\n    return parsedUrl.toString();\n}\nfunction buildBaseUrl(endpoint, options) {\n    var _a;\n    if (!options.pathParameters) {\n        return endpoint;\n    }\n    const pathParams = options.pathParameters;\n    for (const [key, param] of Object.entries(pathParams)) {\n        if (param === undefined || param === null) {\n            throw new Error(`Path parameters ${key} must not be undefined or null`);\n        }\n        if (!param.toString || typeof param.toString !== \"function\") {\n            throw new Error(`Path parameters must be able to be represented as string, ${key} can't`);\n        }\n        let value = param.toISOString !== undefined ? param.toISOString() : String(param);\n        if (!options.skipUrlEncoding) {\n            value = encodeURIComponent(param);\n        }\n        endpoint = (_a = replaceAll(endpoint, `{${key}}`, value)) !== null && _a !== void 0 ? _a : \"\";\n    }\n    return endpoint;\n}\nfunction buildRoutePath(routePath, pathParameters, options = {}) {\n    var _a;\n    for (const pathParam of pathParameters) {\n        const allowReserved = typeof pathParam === \"object\" && ((_a = pathParam.allowReserved) !== null && _a !== void 0 ? _a : false);\n        let value = typeof pathParam === \"object\" ? pathParam.value : pathParam;\n        if (!options.skipUrlEncoding && !allowReserved) {\n            value = encodeURIComponent(value);\n        }\n        routePath = routePath.replace(/\\{[\\w-]+\\}/, String(value));\n    }\n    return routePath;\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nfunction replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n//# sourceMappingURL=urlHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/urlHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_RETRY_POLICY_COUNT = exports.SDK_VERSION = void 0;\nexports.SDK_VERSION = \"0.3.0\";\nexports.DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDLEdBQUcsbUJBQW1CO0FBQ3hELG1CQUFtQjtBQUNuQixrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCA9IGV4cG9ydHMuU0RLX1ZFUlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLlNES19WRVJTSU9OID0gXCIwLjMuMFwiO1xuZXhwb3J0cy5ERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCA9IDM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/createPipelineFromOptions.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/createPipelineFromOptions.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createPipelineFromOptions = createPipelineFromOptions;\nconst logPolicy_js_1 = __webpack_require__(/*! ./policies/logPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/logPolicy.js\");\nconst pipeline_js_1 = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipeline.js\");\nconst redirectPolicy_js_1 = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/redirectPolicy.js\");\nconst userAgentPolicy_js_1 = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/userAgentPolicy.js\");\nconst decompressResponsePolicy_js_1 = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/decompressResponsePolicy.js\");\nconst defaultRetryPolicy_js_1 = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/defaultRetryPolicy.js\");\nconst formDataPolicy_js_1 = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/formDataPolicy.js\");\nconst checkEnvironment_js_1 = __webpack_require__(/*! ./util/checkEnvironment.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js\");\nconst proxyPolicy_js_1 = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/proxyPolicy.js\");\nconst agentPolicy_js_1 = __webpack_require__(/*! ./policies/agentPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/agentPolicy.js\");\nconst tlsPolicy_js_1 = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/tlsPolicy.js\");\nconst multipartPolicy_js_1 = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/multipartPolicy.js\");\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    const pipeline = (0, pipeline_js_1.createEmptyPipeline)();\n    if (checkEnvironment_js_1.isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy((0, agentPolicy_js_1.agentPolicy)(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy((0, tlsPolicy_js_1.tlsPolicy)(options.tlsOptions));\n        }\n        pipeline.addPolicy((0, proxyPolicy_js_1.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0, decompressResponsePolicy_js_1.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0, formDataPolicy_js_1.formDataPolicy)(), { beforePolicies: [multipartPolicy_js_1.multipartPolicyName] });\n    pipeline.addPolicy((0, userAgentPolicy_js_1.userAgentPolicy)(options.userAgentOptions));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy((0, multipartPolicy_js_1.multipartPolicy)(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy((0, defaultRetryPolicy_js_1.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    if (checkEnvironment_js_1.isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy((0, redirectPolicy_js_1.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy((0, logPolicy_js_1.logPolicy)(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2NyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyx1QkFBdUIsbUJBQU8sQ0FBQyxtSEFBeUI7QUFDeEQsc0JBQXNCLG1CQUFPLENBQUMsK0ZBQWU7QUFDN0MsNEJBQTRCLG1CQUFPLENBQUMsNkhBQThCO0FBQ2xFLDZCQUE2QixtQkFBTyxDQUFDLCtIQUErQjtBQUNwRSxzQ0FBc0MsbUJBQU8sQ0FBQyxpSkFBd0M7QUFDdEYsZ0NBQWdDLG1CQUFPLENBQUMscUlBQWtDO0FBQzFFLDRCQUE0QixtQkFBTyxDQUFDLDZIQUE4QjtBQUNsRSw4QkFBOEIsbUJBQU8sQ0FBQyx5SEFBNEI7QUFDbEUseUJBQXlCLG1CQUFPLENBQUMsdUhBQTJCO0FBQzVELHlCQUF5QixtQkFBTyxDQUFDLHVIQUEyQjtBQUM1RCx1QkFBdUIsbUJBQU8sQ0FBQyxtSEFBeUI7QUFDeEQsNkJBQTZCLG1CQUFPLENBQUMsK0hBQStCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLDREQUE0RDtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSwyQkFBMkI7QUFDakcsZ0dBQWdHLGdCQUFnQjtBQUNoSDtBQUNBO0FBQ0E7QUFDQSwrRkFBK0YscUJBQXFCO0FBQ3BIO0FBQ0EsZ0ZBQWdGLG9CQUFvQjtBQUNwRztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucyA9IGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnM7XG5jb25zdCBsb2dQb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiKTtcbmNvbnN0IHBpcGVsaW5lX2pzXzEgPSByZXF1aXJlKFwiLi9waXBlbGluZS5qc1wiKTtcbmNvbnN0IHJlZGlyZWN0UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qc1wiKTtcbmNvbnN0IHVzZXJBZ2VudFBvbGljeV9qc18xID0gcmVxdWlyZShcIi4vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzXCIpO1xuY29uc3QgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanNcIik7XG5jb25zdCBkZWZhdWx0UmV0cnlQb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuL3BvbGljaWVzL2RlZmF1bHRSZXRyeVBvbGljeS5qc1wiKTtcbmNvbnN0IGZvcm1EYXRhUG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qc1wiKTtcbmNvbnN0IGNoZWNrRW52aXJvbm1lbnRfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWwvY2hlY2tFbnZpcm9ubWVudC5qc1wiKTtcbmNvbnN0IHByb3h5UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9wcm94eVBvbGljeS5qc1wiKTtcbmNvbnN0IGFnZW50UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9hZ2VudFBvbGljeS5qc1wiKTtcbmNvbnN0IHRsc1BvbGljeV9qc18xID0gcmVxdWlyZShcIi4vcG9saWNpZXMvdGxzUG9saWN5LmpzXCIpO1xuY29uc3QgbXVsdGlwYXJ0UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanNcIik7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBwaXBlbGluZSB3aXRoIGEgZGVmYXVsdCBzZXQgb2YgY3VzdG9taXphYmxlIHBvbGljaWVzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRvIGNvbmZpZ3VyZSBhIGN1c3RvbSBwaXBlbGluZS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgY29uc3QgcGlwZWxpbmUgPSAoMCwgcGlwZWxpbmVfanNfMS5jcmVhdGVFbXB0eVBpcGVsaW5lKSgpO1xuICAgIGlmIChjaGVja0Vudmlyb25tZW50X2pzXzEuaXNOb2RlTGlrZSkge1xuICAgICAgICBpZiAob3B0aW9ucy5hZ2VudCkge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCBhZ2VudFBvbGljeV9qc18xLmFnZW50UG9saWN5KShvcHRpb25zLmFnZW50KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMudGxzT3B0aW9ucykge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCB0bHNQb2xpY3lfanNfMS50bHNQb2xpY3kpKG9wdGlvbnMudGxzT3B0aW9ucykpO1xuICAgICAgICB9XG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeSgoMCwgcHJveHlQb2xpY3lfanNfMS5wcm94eVBvbGljeSkob3B0aW9ucy5wcm94eU9wdGlvbnMpKTtcbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3lfanNfMS5kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kpKCkpO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3koKDAsIGZvcm1EYXRhUG9saWN5X2pzXzEuZm9ybURhdGFQb2xpY3kpKCksIHsgYmVmb3JlUG9saWNpZXM6IFttdWx0aXBhcnRQb2xpY3lfanNfMS5tdWx0aXBhcnRQb2xpY3lOYW1lXSB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koKDAsIHVzZXJBZ2VudFBvbGljeV9qc18xLnVzZXJBZ2VudFBvbGljeSkob3B0aW9ucy51c2VyQWdlbnRPcHRpb25zKSk7XG4gICAgLy8gVGhlIG11bHRpcGFydCBwb2xpY3kgaXMgYWRkZWQgYWZ0ZXIgcG9saWNpZXMgd2l0aCBubyBwaGFzZSwgc28gdGhhdFxuICAgIC8vIHBvbGljaWVzIGNhbiBiZSBhZGRlZCBiZXR3ZWVuIGl0IGFuZCBmb3JtRGF0YVBvbGljeSB0byBtb2RpZnlcbiAgICAvLyBwcm9wZXJ0aWVzIChlLmcuLCBtYWtpbmcgdGhlIGJvdW5kYXJ5IGNvbnN0YW50IGluIHJlY29yZGVkIHRlc3RzKS5cbiAgICBwaXBlbGluZS5hZGRQb2xpY3koKDAsIG11bHRpcGFydFBvbGljeV9qc18xLm11bHRpcGFydFBvbGljeSkoKSwgeyBhZnRlclBoYXNlOiBcIkRlc2VyaWFsaXplXCIgfSk7XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCBkZWZhdWx0UmV0cnlQb2xpY3lfanNfMS5kZWZhdWx0UmV0cnlQb2xpY3kpKG9wdGlvbnMucmV0cnlPcHRpb25zKSwgeyBwaGFzZTogXCJSZXRyeVwiIH0pO1xuICAgIGlmIChjaGVja0Vudmlyb25tZW50X2pzXzEuaXNOb2RlTGlrZSkge1xuICAgICAgICAvLyBCb3RoIFhIUiBhbmQgRmV0Y2ggZXhwZWN0IHRvIGhhbmRsZSByZWRpcmVjdHMgYXV0b21hdGljYWxseSxcbiAgICAgICAgLy8gc28gb25seSBpbmNsdWRlIHRoaXMgcG9saWN5IHdoZW4gd2UncmUgaW4gTm9kZS5cbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KCgwLCByZWRpcmVjdFBvbGljeV9qc18xLnJlZGlyZWN0UG9saWN5KShvcHRpb25zLnJlZGlyZWN0T3B0aW9ucyksIHsgYWZ0ZXJQaGFzZTogXCJSZXRyeVwiIH0pO1xuICAgIH1cbiAgICBwaXBlbGluZS5hZGRQb2xpY3koKDAsIGxvZ1BvbGljeV9qc18xLmxvZ1BvbGljeSkob3B0aW9ucy5sb2dnaW5nT3B0aW9ucyksIHsgYWZ0ZXJQaGFzZTogXCJTaWduXCIgfSk7XG4gICAgcmV0dXJuIHBpcGVsaW5lO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/createPipelineFromOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/defaultHttpClient.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/defaultHttpClient.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDefaultHttpClient = createDefaultHttpClient;\nconst nodeHttpClient_js_1 = __webpack_require__(/*! ./nodeHttpClient.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/nodeHttpClient.js\");\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    return (0, nodeHttpClient_js_1.createNodeHttpClient)();\n}\n//# sourceMappingURL=defaultHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2RlZmF1bHRIdHRwQ2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsNEJBQTRCLG1CQUFPLENBQUMsMkdBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxkZWZhdWx0SHR0cENsaWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVEZWZhdWx0SHR0cENsaWVudCA9IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50O1xuY29uc3Qgbm9kZUh0dHBDbGllbnRfanNfMSA9IHJlcXVpcmUoXCIuL25vZGVIdHRwQ2xpZW50LmpzXCIpO1xuLyoqXG4gKiBDcmVhdGUgdGhlIGNvcnJlY3QgSHR0cENsaWVudCBmb3IgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50KCkge1xuICAgIHJldHVybiAoMCwgbm9kZUh0dHBDbGllbnRfanNfMS5jcmVhdGVOb2RlSHR0cENsaWVudCkoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRIdHRwQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/defaultHttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createHttpHeaders = createHttpHeaders;\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2h0dHBIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELG1DQUFtQztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxvQkFBb0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGh0dHBIZWFkZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUh0dHBIZWFkZXJzID0gY3JlYXRlSHR0cEhlYWRlcnM7XG5mdW5jdGlvbiBub3JtYWxpemVOYW1lKG5hbWUpIHtcbiAgICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpO1xufVxuZnVuY3Rpb24qIGhlYWRlckl0ZXJhdG9yKG1hcCkge1xuICAgIGZvciAoY29uc3QgZW50cnkgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgIHlpZWxkIFtlbnRyeS5uYW1lLCBlbnRyeS52YWx1ZV07XG4gICAgfVxufVxuY2xhc3MgSHR0cEhlYWRlcnNJbXBsIHtcbiAgICBjb25zdHJ1Y3RvcihyYXdIZWFkZXJzKSB7XG4gICAgICAgIHRoaXMuX2hlYWRlcnNNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIGlmIChyYXdIZWFkZXJzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMocmF3SGVhZGVycykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldChoZWFkZXJOYW1lLCByYXdIZWFkZXJzW2hlYWRlck5hbWVdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXQgYSBoZWFkZXIgaW4gdGhpcyBjb2xsZWN0aW9uIHdpdGggdGhlIHByb3ZpZGVkIG5hbWUgYW5kIHZhbHVlLiBUaGUgbmFtZSBpc1xuICAgICAqIGNhc2UtaW5zZW5zaXRpdmUuXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHNldC4gVGhpcyB2YWx1ZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSBvZiB0aGUgaGVhZGVyIHRvIHNldC5cbiAgICAgKi9cbiAgICBzZXQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5faGVhZGVyc01hcC5zZXQobm9ybWFsaXplTmFtZShuYW1lKSwgeyBuYW1lLCB2YWx1ZTogU3RyaW5nKHZhbHVlKS50cmltKCkgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgaGVhZGVyIHZhbHVlIGZvciB0aGUgcHJvdmlkZWQgaGVhZGVyIG5hbWUsIG9yIHVuZGVmaW5lZCBpZiBubyBoZWFkZXIgZXhpc3RzIGluIHRoaXNcbiAgICAgKiBjb2xsZWN0aW9uIHdpdGggdGhlIHByb3ZpZGVkIG5hbWUuXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyLiBUaGlzIHZhbHVlIGlzIGNhc2UtaW5zZW5zaXRpdmUuXG4gICAgICovXG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5faGVhZGVyc01hcC5nZXQobm9ybWFsaXplTmFtZShuYW1lKSkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS52YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHdoZXRoZXIgb3Igbm90IHRoaXMgaGVhZGVyIGNvbGxlY3Rpb24gY29udGFpbnMgYSBoZWFkZXIgZW50cnkgZm9yIHRoZSBwcm92aWRlZCBoZWFkZXIgbmFtZS5cbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIgdG8gc2V0LiBUaGlzIHZhbHVlIGlzIGNhc2UtaW5zZW5zaXRpdmUuXG4gICAgICovXG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hlYWRlcnNNYXAuaGFzKG5vcm1hbGl6ZU5hbWUobmFtZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGhlYWRlciB3aXRoIHRoZSBwcm92aWRlZCBoZWFkZXJOYW1lLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlciB0byByZW1vdmUuXG4gICAgICovXG4gICAgZGVsZXRlKG5hbWUpIHtcbiAgICAgICAgdGhpcy5faGVhZGVyc01hcC5kZWxldGUobm9ybWFsaXplTmFtZShuYW1lKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgSlNPTiBvYmplY3QgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBIVFRQIGhlYWRlciBjb2xsZWN0aW9uLlxuICAgICAqL1xuICAgIHRvSlNPTihvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgICAgIGlmIChvcHRpb25zLnByZXNlcnZlQ2FzZSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBlbnRyeSBvZiB0aGlzLl9oZWFkZXJzTWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2VudHJ5Lm5hbWVdID0gZW50cnkudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtub3JtYWxpemVkTmFtZSwgZW50cnldIG9mIHRoaXMuX2hlYWRlcnNNYXApIHtcbiAgICAgICAgICAgICAgICByZXN1bHRbbm9ybWFsaXplZE5hbWVdID0gZW50cnkudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBIVFRQIGhlYWRlciBjb2xsZWN0aW9uLlxuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy50b0pTT04oeyBwcmVzZXJ2ZUNhc2U6IHRydWUgfSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJdGVyYXRlIG92ZXIgdHVwbGVzIG9mIGhlYWRlciBbbmFtZSwgdmFsdWVdIHBhaXJzLlxuICAgICAqL1xuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gaGVhZGVySXRlcmF0b3IodGhpcy5faGVhZGVyc01hcCk7XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGFuIG9iamVjdCB0aGF0IHNhdGlzZmllcyB0aGUgYEh0dHBIZWFkZXJzYCBpbnRlcmZhY2UuXG4gKiBAcGFyYW0gcmF3SGVhZGVycyAtIEEgc2ltcGxlIG9iamVjdCByZXByZXNlbnRpbmcgaW5pdGlhbCBoZWFkZXJzXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUh0dHBIZWFkZXJzKHJhd0hlYWRlcnMpIHtcbiAgICByZXR1cm4gbmV3IEh0dHBIZWFkZXJzSW1wbChyYXdIZWFkZXJzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHBIZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createRestError = exports.operationOptionsToRequestParameters = exports.getClient = exports.createDefaultHttpClient = exports.uint8ArrayToString = exports.stringToUint8Array = exports.isRestError = exports.RestError = exports.createEmptyPipeline = exports.createPipelineRequest = exports.createHttpHeaders = exports.TypeSpecRuntimeLogger = exports.setLogLevel = exports.getLogLevel = exports.createClientLogger = exports.AbortError = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nvar AbortError_js_1 = __webpack_require__(/*! ./abort-controller/AbortError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js\");\nObject.defineProperty(exports, \"AbortError\", ({ enumerable: true, get: function () { return AbortError_js_1.AbortError; } }));\nvar logger_js_1 = __webpack_require__(/*! ./logger/logger.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js\");\nObject.defineProperty(exports, \"createClientLogger\", ({ enumerable: true, get: function () { return logger_js_1.createClientLogger; } }));\nObject.defineProperty(exports, \"getLogLevel\", ({ enumerable: true, get: function () { return logger_js_1.getLogLevel; } }));\nObject.defineProperty(exports, \"setLogLevel\", ({ enumerable: true, get: function () { return logger_js_1.setLogLevel; } }));\nObject.defineProperty(exports, \"TypeSpecRuntimeLogger\", ({ enumerable: true, get: function () { return logger_js_1.TypeSpecRuntimeLogger; } }));\nvar httpHeaders_js_1 = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nObject.defineProperty(exports, \"createHttpHeaders\", ({ enumerable: true, get: function () { return httpHeaders_js_1.createHttpHeaders; } }));\ntslib_1.__exportStar(__webpack_require__(/*! ./auth/schemes.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/schemes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./auth/oauth2Flows.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/auth/oauth2Flows.js\"), exports);\nvar pipelineRequest_js_1 = __webpack_require__(/*! ./pipelineRequest.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipelineRequest.js\");\nObject.defineProperty(exports, \"createPipelineRequest\", ({ enumerable: true, get: function () { return pipelineRequest_js_1.createPipelineRequest; } }));\nvar pipeline_js_1 = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipeline.js\");\nObject.defineProperty(exports, \"createEmptyPipeline\", ({ enumerable: true, get: function () { return pipeline_js_1.createEmptyPipeline; } }));\nvar restError_js_1 = __webpack_require__(/*! ./restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\");\nObject.defineProperty(exports, \"RestError\", ({ enumerable: true, get: function () { return restError_js_1.RestError; } }));\nObject.defineProperty(exports, \"isRestError\", ({ enumerable: true, get: function () { return restError_js_1.isRestError; } }));\nvar bytesEncoding_js_1 = __webpack_require__(/*! ./util/bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nObject.defineProperty(exports, \"stringToUint8Array\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.stringToUint8Array; } }));\nObject.defineProperty(exports, \"uint8ArrayToString\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.uint8ArrayToString; } }));\nvar defaultHttpClient_js_1 = __webpack_require__(/*! ./defaultHttpClient.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/defaultHttpClient.js\");\nObject.defineProperty(exports, \"createDefaultHttpClient\", ({ enumerable: true, get: function () { return defaultHttpClient_js_1.createDefaultHttpClient; } }));\nvar getClient_js_1 = __webpack_require__(/*! ./client/getClient.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/getClient.js\");\nObject.defineProperty(exports, \"getClient\", ({ enumerable: true, get: function () { return getClient_js_1.getClient; } }));\nvar operationOptionHelpers_js_1 = __webpack_require__(/*! ./client/operationOptionHelpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/operationOptionHelpers.js\");\nObject.defineProperty(exports, \"operationOptionsToRequestParameters\", ({ enumerable: true, get: function () { return operationOptionHelpers_js_1.operationOptionsToRequestParameters; } }));\nvar restError_js_2 = __webpack_require__(/*! ./client/restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/client/restError.js\");\nObject.defineProperty(exports, \"createRestError\", ({ enumerable: true, get: function () { return restError_js_2.createRestError; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRywyQ0FBMkMsR0FBRyxpQkFBaUIsR0FBRywrQkFBK0IsR0FBRywwQkFBMEIsR0FBRywwQkFBMEIsR0FBRyxtQkFBbUIsR0FBRyxpQkFBaUIsR0FBRywyQkFBMkIsR0FBRyw2QkFBNkIsR0FBRyx5QkFBeUIsR0FBRyw2QkFBNkIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRywwQkFBMEIsR0FBRyxrQkFBa0I7QUFDdmIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMscUlBQWtDO0FBQ2hFLDhDQUE2QyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUMzSCxrQkFBa0IsbUJBQU8sQ0FBQyx5R0FBb0I7QUFDOUMsc0RBQXFELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3ZJLCtDQUE4QyxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUN6SCwrQ0FBOEMsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDekgseURBQXdELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQzdJLHVCQUF1QixtQkFBTyxDQUFDLHFHQUFrQjtBQUNqRCxxREFBb0QsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDMUkscUJBQXFCLG1CQUFPLENBQUMsdUdBQW1CO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLCtHQUF1QjtBQUNwRCwyQkFBMkIsbUJBQU8sQ0FBQyw2R0FBc0I7QUFDekQseURBQXdELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ3RKLG9CQUFvQixtQkFBTyxDQUFDLCtGQUFlO0FBQzNDLHVEQUFzRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUMzSSxxQkFBcUIsbUJBQU8sQ0FBQyxpR0FBZ0I7QUFDN0MsNkNBQTRDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQ3hILCtDQUE4QyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUM1SCx5QkFBeUIsbUJBQU8sQ0FBQyxtSEFBeUI7QUFDMUQsc0RBQXFELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQzlJLHNEQUFxRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUM5SSw2QkFBNkIsbUJBQU8sQ0FBQyxpSEFBd0I7QUFDN0QsMkRBQTBELEVBQUUscUNBQXFDLDBEQUEwRCxFQUFDO0FBQzVKLHFCQUFxQixtQkFBTyxDQUFDLCtHQUF1QjtBQUNwRCw2Q0FBNEMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDeEgsa0NBQWtDLG1CQUFPLENBQUMseUlBQW9DO0FBQzlFLHVFQUFzRSxFQUFFLHFDQUFxQywyRUFBMkUsRUFBQztBQUN6TCxxQkFBcUIsbUJBQU8sQ0FBQywrR0FBdUI7QUFDcEQsbURBQWtELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3BJIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVSZXN0RXJyb3IgPSBleHBvcnRzLm9wZXJhdGlvbk9wdGlvbnNUb1JlcXVlc3RQYXJhbWV0ZXJzID0gZXhwb3J0cy5nZXRDbGllbnQgPSBleHBvcnRzLmNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50ID0gZXhwb3J0cy51aW50OEFycmF5VG9TdHJpbmcgPSBleHBvcnRzLnN0cmluZ1RvVWludDhBcnJheSA9IGV4cG9ydHMuaXNSZXN0RXJyb3IgPSBleHBvcnRzLlJlc3RFcnJvciA9IGV4cG9ydHMuY3JlYXRlRW1wdHlQaXBlbGluZSA9IGV4cG9ydHMuY3JlYXRlUGlwZWxpbmVSZXF1ZXN0ID0gZXhwb3J0cy5jcmVhdGVIdHRwSGVhZGVycyA9IGV4cG9ydHMuVHlwZVNwZWNSdW50aW1lTG9nZ2VyID0gZXhwb3J0cy5zZXRMb2dMZXZlbCA9IGV4cG9ydHMuZ2V0TG9nTGV2ZWwgPSBleHBvcnRzLmNyZWF0ZUNsaWVudExvZ2dlciA9IGV4cG9ydHMuQWJvcnRFcnJvciA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG52YXIgQWJvcnRFcnJvcl9qc18xID0gcmVxdWlyZShcIi4vYWJvcnQtY29udHJvbGxlci9BYm9ydEVycm9yLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWJvcnRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQWJvcnRFcnJvcl9qc18xLkFib3J0RXJyb3I7IH0gfSk7XG52YXIgbG9nZ2VyX2pzXzEgPSByZXF1aXJlKFwiLi9sb2dnZXIvbG9nZ2VyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQ2xpZW50TG9nZ2VyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsb2dnZXJfanNfMS5jcmVhdGVDbGllbnRMb2dnZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRMb2dMZXZlbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyX2pzXzEuZ2V0TG9nTGV2ZWw7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzZXRMb2dMZXZlbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyX2pzXzEuc2V0TG9nTGV2ZWw7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUeXBlU3BlY1J1bnRpbWVMb2dnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxvZ2dlcl9qc18xLlR5cGVTcGVjUnVudGltZUxvZ2dlcjsgfSB9KTtcbnZhciBodHRwSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vaHR0cEhlYWRlcnMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVIdHRwSGVhZGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaHR0cEhlYWRlcnNfanNfMS5jcmVhdGVIdHRwSGVhZGVyczsgfSB9KTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2F1dGgvc2NoZW1lcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdXRoL29hdXRoMkZsb3dzLmpzXCIpLCBleHBvcnRzKTtcbnZhciBwaXBlbGluZVJlcXVlc3RfanNfMSA9IHJlcXVpcmUoXCIuL3BpcGVsaW5lUmVxdWVzdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZVBpcGVsaW5lUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGlwZWxpbmVSZXF1ZXN0X2pzXzEuY3JlYXRlUGlwZWxpbmVSZXF1ZXN0OyB9IH0pO1xudmFyIHBpcGVsaW5lX2pzXzEgPSByZXF1aXJlKFwiLi9waXBlbGluZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUVtcHR5UGlwZWxpbmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBpcGVsaW5lX2pzXzEuY3JlYXRlRW1wdHlQaXBlbGluZTsgfSB9KTtcbnZhciByZXN0RXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL3Jlc3RFcnJvci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3RFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzdEVycm9yX2pzXzEuUmVzdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNSZXN0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3RFcnJvcl9qc18xLmlzUmVzdEVycm9yOyB9IH0pO1xudmFyIGJ5dGVzRW5jb2RpbmdfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWwvYnl0ZXNFbmNvZGluZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0cmluZ1RvVWludDhBcnJheVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnl0ZXNFbmNvZGluZ19qc18xLnN0cmluZ1RvVWludDhBcnJheTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInVpbnQ4QXJyYXlUb1N0cmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnl0ZXNFbmNvZGluZ19qc18xLnVpbnQ4QXJyYXlUb1N0cmluZzsgfSB9KTtcbnZhciBkZWZhdWx0SHR0cENsaWVudF9qc18xID0gcmVxdWlyZShcIi4vZGVmYXVsdEh0dHBDbGllbnQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVEZWZhdWx0SHR0cENsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVmYXVsdEh0dHBDbGllbnRfanNfMS5jcmVhdGVEZWZhdWx0SHR0cENsaWVudDsgfSB9KTtcbnZhciBnZXRDbGllbnRfanNfMSA9IHJlcXVpcmUoXCIuL2NsaWVudC9nZXRDbGllbnQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdldENsaWVudF9qc18xLmdldENsaWVudDsgfSB9KTtcbnZhciBvcGVyYXRpb25PcHRpb25IZWxwZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9jbGllbnQvb3BlcmF0aW9uT3B0aW9uSGVscGVycy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm9wZXJhdGlvbk9wdGlvbnNUb1JlcXVlc3RQYXJhbWV0ZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBvcGVyYXRpb25PcHRpb25IZWxwZXJzX2pzXzEub3BlcmF0aW9uT3B0aW9uc1RvUmVxdWVzdFBhcmFtZXRlcnM7IH0gfSk7XG52YXIgcmVzdEVycm9yX2pzXzIgPSByZXF1aXJlKFwiLi9jbGllbnQvcmVzdEVycm9yLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlUmVzdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXN0RXJyb3JfanNfMi5jcmVhdGVSZXN0RXJyb3I7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logger = void 0;\nconst logger_js_1 = __webpack_require__(/*! ./logger/logger.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js\");\nexports.logger = (0, logger_js_1.createClientLogger)(\"ts-http-runtime\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2xvZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLG9CQUFvQixtQkFBTyxDQUFDLHlHQUFvQjtBQUNoRCxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2dnZXIgPSB2b2lkIDA7XG5jb25zdCBsb2dnZXJfanNfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlci9sb2dnZXIuanNcIik7XG5leHBvcnRzLmxvZ2dlciA9ICgwLCBsb2dnZXJfanNfMS5jcmVhdGVDbGllbnRMb2dnZXIpKFwidHMtaHR0cC1ydW50aW1lXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/debug.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/debug.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst log_js_1 = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/log.js\");\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: log_js_1.log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\nexports[\"default\"] = debugObj;\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2xvZ2dlci9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMsNEZBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxhQUFhO0FBQy9EO0FBQ0E7QUFDQSxrREFBa0QsR0FBRztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFdBQVcsRUFBRSxRQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxlQUFlLEdBQUcsVUFBVTtBQUN0RTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxsb2dnZXJcXGRlYnVnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBsb2dfanNfMSA9IHJlcXVpcmUoXCIuL2xvZy5qc1wiKTtcbmNvbnN0IGRlYnVnRW52VmFyaWFibGUgPSAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2Vzcy5lbnYgJiYgcHJvY2Vzcy5lbnYuREVCVUcpIHx8IHVuZGVmaW5lZDtcbmxldCBlbmFibGVkU3RyaW5nO1xubGV0IGVuYWJsZWROYW1lc3BhY2VzID0gW107XG5sZXQgc2tpcHBlZE5hbWVzcGFjZXMgPSBbXTtcbmNvbnN0IGRlYnVnZ2VycyA9IFtdO1xuaWYgKGRlYnVnRW52VmFyaWFibGUpIHtcbiAgICBlbmFibGUoZGVidWdFbnZWYXJpYWJsZSk7XG59XG5jb25zdCBkZWJ1Z09iaiA9IE9iamVjdC5hc3NpZ24oKG5hbWVzcGFjZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVEZWJ1Z2dlcihuYW1lc3BhY2UpO1xufSwge1xuICAgIGVuYWJsZSxcbiAgICBlbmFibGVkLFxuICAgIGRpc2FibGUsXG4gICAgbG9nOiBsb2dfanNfMS5sb2csXG59KTtcbmZ1bmN0aW9uIGVuYWJsZShuYW1lc3BhY2VzKSB7XG4gICAgZW5hYmxlZFN0cmluZyA9IG5hbWVzcGFjZXM7XG4gICAgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbiAgICBza2lwcGVkTmFtZXNwYWNlcyA9IFtdO1xuICAgIGNvbnN0IHdpbGRjYXJkID0gL1xcKi9nO1xuICAgIGNvbnN0IG5hbWVzcGFjZUxpc3QgPSBuYW1lc3BhY2VzLnNwbGl0KFwiLFwiKS5tYXAoKG5zKSA9PiBucy50cmltKCkucmVwbGFjZSh3aWxkY2FyZCwgXCIuKj9cIikpO1xuICAgIGZvciAoY29uc3QgbnMgb2YgbmFtZXNwYWNlTGlzdCkge1xuICAgICAgICBpZiAobnMuc3RhcnRzV2l0aChcIi1cIikpIHtcbiAgICAgICAgICAgIHNraXBwZWROYW1lc3BhY2VzLnB1c2gobmV3IFJlZ0V4cChgXiR7bnMuc3Vic3RyKDEpfSRgKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlbmFibGVkTmFtZXNwYWNlcy5wdXNoKG5ldyBSZWdFeHAoYF4ke25zfSRgKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBpbnN0YW5jZSBvZiBkZWJ1Z2dlcnMpIHtcbiAgICAgICAgaW5zdGFuY2UuZW5hYmxlZCA9IGVuYWJsZWQoaW5zdGFuY2UubmFtZXNwYWNlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbmFibGVkKG5hbWVzcGFjZSkge1xuICAgIGlmIChuYW1lc3BhY2UuZW5kc1dpdGgoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNraXBwZWQgb2Ygc2tpcHBlZE5hbWVzcGFjZXMpIHtcbiAgICAgICAgaWYgKHNraXBwZWQudGVzdChuYW1lc3BhY2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBlbmFibGVkTmFtZXNwYWNlIG9mIGVuYWJsZWROYW1lc3BhY2VzKSB7XG4gICAgICAgIGlmIChlbmFibGVkTmFtZXNwYWNlLnRlc3QobmFtZXNwYWNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICBjb25zdCByZXN1bHQgPSBlbmFibGVkU3RyaW5nIHx8IFwiXCI7XG4gICAgZW5hYmxlKFwiXCIpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWJ1Z2dlcihuYW1lc3BhY2UpIHtcbiAgICBjb25zdCBuZXdEZWJ1Z2dlciA9IE9iamVjdC5hc3NpZ24oZGVidWcsIHtcbiAgICAgICAgZW5hYmxlZDogZW5hYmxlZChuYW1lc3BhY2UpLFxuICAgICAgICBkZXN0cm95LFxuICAgICAgICBsb2c6IGRlYnVnT2JqLmxvZyxcbiAgICAgICAgbmFtZXNwYWNlLFxuICAgICAgICBleHRlbmQsXG4gICAgfSk7XG4gICAgZnVuY3Rpb24gZGVidWcoLi4uYXJncykge1xuICAgICAgICBpZiAoIW5ld0RlYnVnZ2VyLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJncy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhcmdzWzBdID0gYCR7bmFtZXNwYWNlfSAke2FyZ3NbMF19YDtcbiAgICAgICAgfVxuICAgICAgICBuZXdEZWJ1Z2dlci5sb2coLi4uYXJncyk7XG4gICAgfVxuICAgIGRlYnVnZ2Vycy5wdXNoKG5ld0RlYnVnZ2VyKTtcbiAgICByZXR1cm4gbmV3RGVidWdnZXI7XG59XG5mdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGNvbnN0IGluZGV4ID0gZGVidWdnZXJzLmluZGV4T2YodGhpcyk7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgZGVidWdnZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBleHRlbmQobmFtZXNwYWNlKSB7XG4gICAgY29uc3QgbmV3RGVidWdnZXIgPSBjcmVhdGVEZWJ1Z2dlcihgJHt0aGlzLm5hbWVzcGFjZX06JHtuYW1lc3BhY2V9YCk7XG4gICAgbmV3RGVidWdnZXIubG9nID0gdGhpcy5sb2c7XG4gICAgcmV0dXJuIG5ld0RlYnVnZ2VyO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZGVidWdPYmo7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/debug.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/internal.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/internal.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createLoggerContext = void 0;\nvar logger_js_1 = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js\");\nObject.defineProperty(exports, \"createLoggerContext\", ({ enumerable: true, get: function () { return logger_js_1.createLoggerContext; } }));\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2xvZ2dlci9pbnRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGtCQUFrQixtQkFBTyxDQUFDLGtHQUFhO0FBQ3ZDLHVEQUFzRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUN6SSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcbG9nZ2VyXFxpbnRlcm5hbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVMb2dnZXJDb250ZXh0ID0gdm9pZCAwO1xudmFyIGxvZ2dlcl9qc18xID0gcmVxdWlyZShcIi4vbG9nZ2VyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlTG9nZ2VyQ29udGV4dFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyX2pzXzEuY3JlYXRlTG9nZ2VyQ29udGV4dDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/internal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/log.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/log.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.log = log;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst node_os_1 = __webpack_require__(/*! node:os */ \"node:os\");\nconst node_util_1 = tslib_1.__importDefault(__webpack_require__(/*! node:util */ \"node:util\"));\nconst process = tslib_1.__importStar(__webpack_require__(/*! node:process */ \"node:process\"));\nfunction log(message, ...args) {\n    process.stderr.write(`${node_util_1.default.format(message, ...args)}${node_os_1.EOL}`);\n}\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL2xvZ2dlci9sb2cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFdBQVc7QUFDWCxnQkFBZ0IsbUJBQU8sQ0FBQyx1REFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyx3QkFBUztBQUNuQyw0Q0FBNEMsbUJBQU8sQ0FBQyw0QkFBVztBQUMvRCxxQ0FBcUMsbUJBQU8sQ0FBQyxrQ0FBYztBQUMzRDtBQUNBLDRCQUE0Qiw2Q0FBNkMsRUFBRSxjQUFjO0FBQ3pGO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXGxvZ2dlclxcbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBub2RlX29zXzEgPSByZXF1aXJlKFwibm9kZTpvc1wiKTtcbmNvbnN0IG5vZGVfdXRpbF8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm5vZGU6dXRpbFwiKSk7XG5jb25zdCBwcm9jZXNzID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIm5vZGU6cHJvY2Vzc1wiKSk7XG5mdW5jdGlvbiBsb2cobWVzc2FnZSwgLi4uYXJncykge1xuICAgIHByb2Nlc3Muc3RkZXJyLndyaXRlKGAke25vZGVfdXRpbF8xLmRlZmF1bHQuZm9ybWF0KG1lc3NhZ2UsIC4uLmFyZ3MpfSR7bm9kZV9vc18xLkVPTH1gKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypeSpecRuntimeLogger = void 0;\nexports.createLoggerContext = createLoggerContext;\nexports.setLogLevel = setLogLevel;\nexports.getLogLevel = getLogLevel;\nexports.createClientLogger = createClientLogger;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst debug_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ./debug.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/debug.js\"));\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction isTypeSpecRuntimeLogLevel(level) {\n    return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level);\n}\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nfunction createLoggerContext(options) {\n    const registeredLoggers = new Set();\n    const logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n        undefined;\n    let logLevel;\n    const clientLogger = (0, debug_js_1.default)(options.namespace);\n    clientLogger.log = (...args) => {\n        debug_js_1.default.log(...args);\n    };\n    function contextSetLogLevel(level) {\n        if (level && !isTypeSpecRuntimeLogLevel(level)) {\n            throw new Error(`Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`);\n        }\n        logLevel = level;\n        const enabledNamespaces = [];\n        for (const logger of registeredLoggers) {\n            if (shouldEnable(logger)) {\n                enabledNamespaces.push(logger.namespace);\n            }\n        }\n        debug_js_1.default.enable(enabledNamespaces.join(\",\"));\n    }\n    if (logLevelFromEnv) {\n        // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n        if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n            contextSetLogLevel(logLevelFromEnv);\n        }\n        else {\n            console.error(`${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\", \")}.`);\n        }\n    }\n    function shouldEnable(logger) {\n        return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n    }\n    function createLogger(parent, level) {\n        const logger = Object.assign(parent.extend(level), {\n            level,\n        });\n        patchLogMethod(parent, logger);\n        if (shouldEnable(logger)) {\n            const enabledNamespaces = debug_js_1.default.disable();\n            debug_js_1.default.enable(enabledNamespaces + \",\" + logger.namespace);\n        }\n        registeredLoggers.add(logger);\n        return logger;\n    }\n    function contextGetLogLevel() {\n        return logLevel;\n    }\n    function contextCreateClientLogger(namespace) {\n        const clientRootLogger = clientLogger.extend(namespace);\n        patchLogMethod(clientLogger, clientRootLogger);\n        return {\n            error: createLogger(clientRootLogger, \"error\"),\n            warning: createLogger(clientRootLogger, \"warning\"),\n            info: createLogger(clientRootLogger, \"info\"),\n            verbose: createLogger(clientRootLogger, \"verbose\"),\n        };\n    }\n    return {\n        setLogLevel: contextSetLogLevel,\n        getLogLevel: contextGetLogLevel,\n        createClientLogger: contextCreateClientLogger,\n        logger: clientLogger,\n    };\n}\nconst context = createLoggerContext({\n    logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n    namespace: \"typeSpecRuntime\",\n});\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexports.TypeSpecRuntimeLogger = context.logger;\n/**\n * Retrieves the currently specified log level.\n */\nfunction setLogLevel(logLevel) {\n    context.setLogLevel(logLevel);\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return context.getLogLevel();\n}\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    return context.createClientLogger(namespace);\n}\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/nodeHttpClient.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/nodeHttpClient.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBodyLength = getBodyLength;\nexports.createNodeHttpClient = createNodeHttpClient;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst http = tslib_1.__importStar(__webpack_require__(/*! node:http */ \"node:http\"));\nconst https = tslib_1.__importStar(__webpack_require__(/*! node:https */ \"node:https\"));\nconst zlib = tslib_1.__importStar(__webpack_require__(/*! node:zlib */ \"node:zlib\"));\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst AbortError_js_1 = __webpack_require__(/*! ./abort-controller/AbortError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js\");\nconst httpHeaders_js_1 = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nconst restError_js_1 = __webpack_require__(/*! ./restError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\");\nconst log_js_1 = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js\");\nconst sanitizer_js_1 = __webpack_require__(/*! ./util/sanitizer.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js\");\nconst DEFAULT_TLS_SETTINGS = {};\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction isStreamComplete(stream) {\n    if (stream.readable === false) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n        const handler = () => {\n            resolve();\n            stream.removeListener(\"close\", handler);\n            stream.removeListener(\"end\", handler);\n            stream.removeListener(\"error\", handler);\n        };\n        stream.on(\"close\", handler);\n        stream.on(\"end\", handler);\n        stream.on(\"error\", handler);\n    });\n}\nfunction isArrayBuffer(body) {\n    return body && typeof body.byteLength === \"number\";\n}\nclass ReportTransform extends node_stream_1.Transform {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    _transform(chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        try {\n            this.progressCallback({ loadedBytes: this.loadedBytes });\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    constructor(progressCallback) {\n        super();\n        this.loadedBytes = 0;\n        this.progressCallback = progressCallback;\n    }\n}\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient {\n    constructor() {\n        this.cachedHttpsAgents = new WeakMap();\n    }\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a, _b, _c;\n        const abortController = new AbortController();\n        let abortListener;\n        if (request.abortSignal) {\n            if (request.abortSignal.aborted) {\n                throw new AbortError_js_1.AbortError(\"The operation was aborted. Request has already been canceled.\");\n            }\n            abortListener = (event) => {\n                if (event.type === \"abort\") {\n                    abortController.abort();\n                }\n            };\n            request.abortSignal.addEventListener(\"abort\", abortListener);\n        }\n        let timeoutId;\n        if (request.timeout > 0) {\n            timeoutId = setTimeout(() => {\n                const sanitizer = new sanitizer_js_1.Sanitizer();\n                log_js_1.logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n                abortController.abort();\n            }, request.timeout);\n        }\n        const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n        const shouldDecompress = (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"gzip\")) || (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"deflate\"));\n        let body = typeof request.body === \"function\" ? request.body() : request.body;\n        if (body && !request.headers.has(\"Content-Length\")) {\n            const bodyLength = getBodyLength(body);\n            if (bodyLength !== null) {\n                request.headers.set(\"Content-Length\", bodyLength);\n            }\n        }\n        let responseStream;\n        try {\n            if (body && request.onUploadProgress) {\n                const onUploadProgress = request.onUploadProgress;\n                const uploadReportStream = new ReportTransform(onUploadProgress);\n                uploadReportStream.on(\"error\", (e) => {\n                    log_js_1.logger.error(\"Error in upload progress\", e);\n                });\n                if (isReadableStream(body)) {\n                    body.pipe(uploadReportStream);\n                }\n                else {\n                    uploadReportStream.end(body);\n                }\n                body = uploadReportStream;\n            }\n            const res = await this.makeRequest(request, abortController, body);\n            if (timeoutId !== undefined) {\n                clearTimeout(timeoutId);\n            }\n            const headers = getResponseHeaders(res);\n            const status = (_a = res.statusCode) !== null && _a !== void 0 ? _a : 0;\n            const response = {\n                status,\n                headers,\n                request,\n            };\n            // Responses to HEAD must not have a body.\n            // If they do return a body, that body must be ignored.\n            if (request.method === \"HEAD\") {\n                // call resume() and not destroy() to avoid closing the socket\n                // and losing keep alive\n                res.resume();\n                return response;\n            }\n            responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n            const onDownloadProgress = request.onDownloadProgress;\n            if (onDownloadProgress) {\n                const downloadReportStream = new ReportTransform(onDownloadProgress);\n                downloadReportStream.on(\"error\", (e) => {\n                    log_js_1.logger.error(\"Error in download progress\", e);\n                });\n                responseStream.pipe(downloadReportStream);\n                responseStream = downloadReportStream;\n            }\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(Number.POSITIVE_INFINITY)) ||\n                ((_c = request.streamResponseStatusCodes) === null || _c === void 0 ? void 0 : _c.has(response.status))) {\n                response.readableStreamBody = responseStream;\n            }\n            else {\n                response.bodyAsText = await streamToText(responseStream);\n            }\n            return response;\n        }\n        finally {\n            // clean up event listener\n            if (request.abortSignal && abortListener) {\n                let uploadStreamDone = Promise.resolve();\n                if (isReadableStream(body)) {\n                    uploadStreamDone = isStreamComplete(body);\n                }\n                let downloadStreamDone = Promise.resolve();\n                if (isReadableStream(responseStream)) {\n                    downloadStreamDone = isStreamComplete(responseStream);\n                }\n                Promise.all([uploadStreamDone, downloadStreamDone])\n                    .then(() => {\n                    var _a;\n                    // eslint-disable-next-line promise/always-return\n                    if (abortListener) {\n                        (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n                    }\n                })\n                    .catch((e) => {\n                    log_js_1.logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n                });\n            }\n        }\n    }\n    makeRequest(request, abortController, body) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const agent = (_a = request.agent) !== null && _a !== void 0 ? _a : this.getOrCreateAgent(request, isInsecure);\n        const options = Object.assign({ agent, hostname: url.hostname, path: `${url.pathname}${url.search}`, port: url.port, method: request.method, headers: request.headers.toJSON({ preserveCase: true }) }, request.requestOverrides);\n        return new Promise((resolve, reject) => {\n            const req = isInsecure ? http.request(options, resolve) : https.request(options, resolve);\n            req.once(\"error\", (err) => {\n                var _a;\n                reject(new restError_js_1.RestError(err.message, { code: (_a = err.code) !== null && _a !== void 0 ? _a : restError_js_1.RestError.REQUEST_SEND_ERROR, request }));\n            });\n            abortController.signal.addEventListener(\"abort\", () => {\n                const abortError = new AbortError_js_1.AbortError(\"The operation was aborted. Rejecting from abort signal callback while making request.\");\n                req.destroy(abortError);\n                reject(abortError);\n            });\n            if (body && isReadableStream(body)) {\n                body.pipe(req);\n            }\n            else if (body) {\n                if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n                    req.end(body);\n                }\n                else if (isArrayBuffer(body)) {\n                    req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n                }\n                else {\n                    log_js_1.logger.error(\"Unrecognized body type\", body);\n                    reject(new restError_js_1.RestError(\"Unrecognized body type\"));\n                }\n            }\n            else {\n                // streams don't like \"undefined\" being passed as data\n                req.end();\n            }\n        });\n    }\n    getOrCreateAgent(request, isInsecure) {\n        var _a;\n        const disableKeepAlive = request.disableKeepAlive;\n        // Handle Insecure requests first\n        if (isInsecure) {\n            if (disableKeepAlive) {\n                // keepAlive:false is the default so we don't need a custom Agent\n                return http.globalAgent;\n            }\n            if (!this.cachedHttpAgent) {\n                // If there is no cached agent create a new one and cache it.\n                this.cachedHttpAgent = new http.Agent({ keepAlive: true });\n            }\n            return this.cachedHttpAgent;\n        }\n        else {\n            if (disableKeepAlive && !request.tlsSettings) {\n                // When there are no tlsSettings and keepAlive is false\n                // we don't need a custom agent\n                return https.globalAgent;\n            }\n            // We use the tlsSettings to index cached clients\n            const tlsSettings = (_a = request.tlsSettings) !== null && _a !== void 0 ? _a : DEFAULT_TLS_SETTINGS;\n            // Get the cached agent or create a new one with the\n            // provided values for keepAlive and tlsSettings\n            let agent = this.cachedHttpsAgents.get(tlsSettings);\n            if (agent && agent.options.keepAlive === !disableKeepAlive) {\n                return agent;\n            }\n            log_js_1.logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n            agent = new https.Agent(Object.assign({ \n                // keepAlive is true if disableKeepAlive is false.\n                keepAlive: !disableKeepAlive }, tlsSettings));\n            this.cachedHttpsAgents.set(tlsSettings, agent);\n            return agent;\n        }\n    }\n}\nfunction getResponseHeaders(res) {\n    const headers = (0, httpHeaders_js_1.createHttpHeaders)();\n    for (const header of Object.keys(res.headers)) {\n        const value = res.headers[header];\n        if (Array.isArray(value)) {\n            if (value.length > 0) {\n                headers.set(header, value[0]);\n            }\n        }\n        else if (value) {\n            headers.set(header, value);\n        }\n    }\n    return headers;\n}\nfunction getDecodedResponseStream(stream, headers) {\n    const contentEncoding = headers.get(\"Content-Encoding\");\n    if (contentEncoding === \"gzip\") {\n        const unzip = zlib.createGunzip();\n        stream.pipe(unzip);\n        return unzip;\n    }\n    else if (contentEncoding === \"deflate\") {\n        const inflate = zlib.createInflate();\n        stream.pipe(inflate);\n        return inflate;\n    }\n    return stream;\n}\nfunction streamToText(stream) {\n    return new Promise((resolve, reject) => {\n        const buffer = [];\n        stream.on(\"data\", (chunk) => {\n            if (Buffer.isBuffer(chunk)) {\n                buffer.push(chunk);\n            }\n            else {\n                buffer.push(Buffer.from(chunk));\n            }\n        });\n        stream.on(\"end\", () => {\n            resolve(Buffer.concat(buffer).toString(\"utf8\"));\n        });\n        stream.on(\"error\", (e) => {\n            if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n                reject(e);\n            }\n            else {\n                reject(new restError_js_1.RestError(`Error reading response as text: ${e.message}`, {\n                    code: restError_js_1.RestError.PARSE_ERROR,\n                }));\n            }\n        });\n    });\n}\n/** @internal */\nfunction getBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    else if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    else if (isReadableStream(body)) {\n        return null;\n    }\n    else if (isArrayBuffer(body)) {\n        return body.byteLength;\n    }\n    else if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nfunction createNodeHttpClient() {\n    return new NodeHttpClient();\n}\n//# sourceMappingURL=nodeHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/nodeHttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipeline.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipeline.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createEmptyPipeline = createEmptyPipeline;\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipelineRequest.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipelineRequest.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createPipelineRequest = createPipelineRequest;\nconst httpHeaders_js_1 = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\nconst uuidUtils_js_1 = __webpack_require__(/*! ./util/uuidUtils.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js\");\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : (0, httpHeaders_js_1.createHttpHeaders)();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || (0, uuidUtils_js_1.randomUUID)();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n        this.requestOverrides = options.requestOverrides;\n        this.authSchemes = options.authSchemes;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BpcGVsaW5lUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLHlCQUF5QixtQkFBTyxDQUFDLHFHQUFrQjtBQUNuRCx1QkFBdUIsbUJBQU8sQ0FBQywyR0FBcUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwaXBlbGluZVJlcXVlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUGlwZWxpbmVSZXF1ZXN0ID0gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0O1xuY29uc3QgaHR0cEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL2h0dHBIZWFkZXJzLmpzXCIpO1xuY29uc3QgdXVpZFV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlsL3V1aWRVdGlscy5qc1wiKTtcbmNsYXNzIFBpcGVsaW5lUmVxdWVzdEltcGwge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nO1xuICAgICAgICB0aGlzLnVybCA9IG9wdGlvbnMudXJsO1xuICAgICAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IChfYSA9IG9wdGlvbnMuaGVhZGVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKDAsIGh0dHBIZWFkZXJzX2pzXzEuY3JlYXRlSHR0cEhlYWRlcnMpKCk7XG4gICAgICAgIHRoaXMubWV0aG9kID0gKF9iID0gb3B0aW9ucy5tZXRob2QpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFwiR0VUXCI7XG4gICAgICAgIHRoaXMudGltZW91dCA9IChfYyA9IG9wdGlvbnMudGltZW91dCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogMDtcbiAgICAgICAgdGhpcy5tdWx0aXBhcnRCb2R5ID0gb3B0aW9ucy5tdWx0aXBhcnRCb2R5O1xuICAgICAgICB0aGlzLmZvcm1EYXRhID0gb3B0aW9ucy5mb3JtRGF0YTtcbiAgICAgICAgdGhpcy5kaXNhYmxlS2VlcEFsaXZlID0gKF9kID0gb3B0aW9ucy5kaXNhYmxlS2VlcEFsaXZlKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5wcm94eVNldHRpbmdzID0gb3B0aW9ucy5wcm94eVNldHRpbmdzO1xuICAgICAgICB0aGlzLnN0cmVhbVJlc3BvbnNlU3RhdHVzQ29kZXMgPSBvcHRpb25zLnN0cmVhbVJlc3BvbnNlU3RhdHVzQ29kZXM7XG4gICAgICAgIHRoaXMud2l0aENyZWRlbnRpYWxzID0gKF9lID0gb3B0aW9ucy53aXRoQ3JlZGVudGlhbHMpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IGZhbHNlO1xuICAgICAgICB0aGlzLmFib3J0U2lnbmFsID0gb3B0aW9ucy5hYm9ydFNpZ25hbDtcbiAgICAgICAgdGhpcy5vblVwbG9hZFByb2dyZXNzID0gb3B0aW9ucy5vblVwbG9hZFByb2dyZXNzO1xuICAgICAgICB0aGlzLm9uRG93bmxvYWRQcm9ncmVzcyA9IG9wdGlvbnMub25Eb3dubG9hZFByb2dyZXNzO1xuICAgICAgICB0aGlzLnJlcXVlc3RJZCA9IG9wdGlvbnMucmVxdWVzdElkIHx8ICgwLCB1dWlkVXRpbHNfanNfMS5yYW5kb21VVUlEKSgpO1xuICAgICAgICB0aGlzLmFsbG93SW5zZWN1cmVDb25uZWN0aW9uID0gKF9mID0gb3B0aW9ucy5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbikgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogZmFsc2U7XG4gICAgICAgIHRoaXMuZW5hYmxlQnJvd3NlclN0cmVhbXMgPSAoX2cgPSBvcHRpb25zLmVuYWJsZUJyb3dzZXJTdHJlYW1zKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5yZXF1ZXN0T3ZlcnJpZGVzID0gb3B0aW9ucy5yZXF1ZXN0T3ZlcnJpZGVzO1xuICAgICAgICB0aGlzLmF1dGhTY2hlbWVzID0gb3B0aW9ucy5hdXRoU2NoZW1lcztcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgcGlwZWxpbmUgcmVxdWVzdCB3aXRoIHRoZSBnaXZlbiBvcHRpb25zLlxuICogVGhpcyBtZXRob2QgaXMgdG8gYWxsb3cgZm9yIHRoZSBlYXN5IHNldHRpbmcgb2YgZGVmYXVsdCB2YWx1ZXMgYW5kIG5vdCByZXF1aXJlZC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdG8gY3JlYXRlIHRoZSByZXF1ZXN0IHdpdGguXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBpcGVsaW5lUmVxdWVzdChvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBQaXBlbGluZVJlcXVlc3RJbXBsKG9wdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwZWxpbmVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/pipelineRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/agentPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/agentPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.agentPolicyName = void 0;\nexports.agentPolicy = agentPolicy;\n/**\n * Name of the Agent Policy\n */\nexports.agentPolicyName = \"agentPolicy\";\n/**\n * Gets a pipeline policy that sets http.agent\n */\nfunction agentPolicy(agent) {\n    return {\n        name: exports.agentPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define an agent on the request, honor it over the client level one\n            if (!req.agent) {\n                req.agent = agent;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=agentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2FnZW50UG9saWN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcYWdlbnRQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWdlbnRQb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy5hZ2VudFBvbGljeSA9IGFnZW50UG9saWN5O1xuLyoqXG4gKiBOYW1lIG9mIHRoZSBBZ2VudCBQb2xpY3lcbiAqL1xuZXhwb3J0cy5hZ2VudFBvbGljeU5hbWUgPSBcImFnZW50UG9saWN5XCI7XG4vKipcbiAqIEdldHMgYSBwaXBlbGluZSBwb2xpY3kgdGhhdCBzZXRzIGh0dHAuYWdlbnRcbiAqL1xuZnVuY3Rpb24gYWdlbnRQb2xpY3koYWdlbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBleHBvcnRzLmFnZW50UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IGFzeW5jIChyZXEsIG5leHQpID0+IHtcbiAgICAgICAgICAgIC8vIFVzZXJzIG1heSBkZWZpbmUgYW4gYWdlbnQgb24gdGhlIHJlcXVlc3QsIGhvbm9yIGl0IG92ZXIgdGhlIGNsaWVudCBsZXZlbCBvbmVcbiAgICAgICAgICAgIGlmICghcmVxLmFnZW50KSB7XG4gICAgICAgICAgICAgICAgcmVxLmFnZW50ID0gYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXEpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2VudFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/agentPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/apiKeyAuthenticationPolicy.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/apiKeyAuthenticationPolicy.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.apiKeyAuthenticationPolicyName = void 0;\nexports.apiKeyAuthenticationPolicy = apiKeyAuthenticationPolicy;\nconst checkInsecureConnection_js_1 = __webpack_require__(/*! ./checkInsecureConnection.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js\");\n/**\n * Name of the API Key Authentication Policy\n */\nexports.apiKeyAuthenticationPolicyName = \"apiKeyAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds API key authentication to requests\n */\nfunction apiKeyAuthenticationPolicy(options) {\n    return {\n        name: exports.apiKeyAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            (0, checkInsecureConnection_js_1.ensureSecureConnection)(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"apiKey\");\n            // Skip adding authentication header if no API key authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            if (scheme.apiKeyLocation !== \"header\") {\n                throw new Error(`Unsupported API key location: ${scheme.apiKeyLocation}`);\n            }\n            request.headers.set(scheme.name, options.credential.key);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=apiKeyAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2F1dGgvYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0QyxrQ0FBa0M7QUFDbEMscUNBQXFDLG1CQUFPLENBQUMsMklBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxzQkFBc0I7QUFDdkY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXGF1dGhcXGFwaUtleUF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFwaUtleUF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMuYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3kgPSBhcGlLZXlBdXRoZW50aWNhdGlvblBvbGljeTtcbmNvbnN0IGNoZWNrSW5zZWN1cmVDb25uZWN0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi9jaGVja0luc2VjdXJlQ29ubmVjdGlvbi5qc1wiKTtcbi8qKlxuICogTmFtZSBvZiB0aGUgQVBJIEtleSBBdXRoZW50aWNhdGlvbiBQb2xpY3lcbiAqL1xuZXhwb3J0cy5hcGlLZXlBdXRoZW50aWNhdGlvblBvbGljeU5hbWUgPSBcImFwaUtleUF1dGhlbnRpY2F0aW9uUG9saWN5XCI7XG4vKipcbiAqIEdldHMgYSBwaXBlbGluZSBwb2xpY3kgdGhhdCBhZGRzIEFQSSBrZXkgYXV0aGVudGljYXRpb24gdG8gcmVxdWVzdHNcbiAqL1xuZnVuY3Rpb24gYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3kob3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMuYXBpS2V5QXV0aGVudGljYXRpb25Qb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgLy8gRW5zdXJlIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uIGlzIGV4cGxpY2l0bHkgc2V0IHdoZW4gc2VuZGluZyByZXF1ZXN0IHRvIG5vbi1odHRwcyBVUkxzXG4gICAgICAgICAgICAoMCwgY2hlY2tJbnNlY3VyZUNvbm5lY3Rpb25fanNfMS5lbnN1cmVTZWN1cmVDb25uZWN0aW9uKShyZXF1ZXN0LCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHNjaGVtZSA9IChfYiA9ICgoX2EgPSByZXF1ZXN0LmF1dGhTY2hlbWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBvcHRpb25zLmF1dGhTY2hlbWVzKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZpbmQoKHgpID0+IHgua2luZCA9PT0gXCJhcGlLZXlcIik7XG4gICAgICAgICAgICAvLyBTa2lwIGFkZGluZyBhdXRoZW50aWNhdGlvbiBoZWFkZXIgaWYgbm8gQVBJIGtleSBhdXRoZW50aWNhdGlvbiBzY2hlbWUgaXMgZm91bmRcbiAgICAgICAgICAgIGlmICghc2NoZW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2NoZW1lLmFwaUtleUxvY2F0aW9uICE9PSBcImhlYWRlclwiKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBBUEkga2V5IGxvY2F0aW9uOiAke3NjaGVtZS5hcGlLZXlMb2NhdGlvbn1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoc2NoZW1lLm5hbWUsIG9wdGlvbnMuY3JlZGVudGlhbC5rZXkpO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaUtleUF1dGhlbnRpY2F0aW9uUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/apiKeyAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/basicAuthenticationPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/basicAuthenticationPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.basicAuthenticationPolicyName = void 0;\nexports.basicAuthenticationPolicy = basicAuthenticationPolicy;\nconst bytesEncoding_js_1 = __webpack_require__(/*! ../../util/bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nconst checkInsecureConnection_js_1 = __webpack_require__(/*! ./checkInsecureConnection.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js\");\n/**\n * Name of the Basic Authentication Policy\n */\nexports.basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nfunction basicAuthenticationPolicy(options) {\n    return {\n        name: exports.basicAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            (0, checkInsecureConnection_js_1.ensureSecureConnection)(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"basic\");\n            // Skip adding authentication header if no basic authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const { username, password } = options.credential;\n            const headerValue = (0, bytesEncoding_js_1.uint8ArrayToString)((0, bytesEncoding_js_1.stringToUint8Array)(`${username}:${password}`, \"utf-8\"), \"base64\");\n            request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=basicAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2F1dGgvYmFzaWNBdXRoZW50aWNhdGlvblBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDO0FBQ3JDLGlDQUFpQztBQUNqQywyQkFBMkIsbUJBQU8sQ0FBQyx1SEFBNkI7QUFDaEUscUNBQXFDLG1CQUFPLENBQUMsMklBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCO0FBQ3pDLHlIQUF5SCxTQUFTLEdBQUcsU0FBUztBQUM5SSwwREFBMEQsWUFBWTtBQUN0RTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHBvbGljaWVzXFxhdXRoXFxiYXNpY0F1dGhlbnRpY2F0aW9uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJhc2ljQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy5iYXNpY0F1dGhlbnRpY2F0aW9uUG9saWN5ID0gYmFzaWNBdXRoZW50aWNhdGlvblBvbGljeTtcbmNvbnN0IGJ5dGVzRW5jb2RpbmdfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL2J5dGVzRW5jb2RpbmcuanNcIik7XG5jb25zdCBjaGVja0luc2VjdXJlQ29ubmVjdGlvbl9qc18xID0gcmVxdWlyZShcIi4vY2hlY2tJbnNlY3VyZUNvbm5lY3Rpb24uanNcIik7XG4vKipcbiAqIE5hbWUgb2YgdGhlIEJhc2ljIEF1dGhlbnRpY2F0aW9uIFBvbGljeVxuICovXG5leHBvcnRzLmJhc2ljQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lID0gXCJiZWFyZXJBdXRoZW50aWNhdGlvblBvbGljeVwiO1xuLyoqXG4gKiBHZXRzIGEgcGlwZWxpbmUgcG9saWN5IHRoYXQgYWRkcyBiYXNpYyBhdXRoZW50aWNhdGlvbiB0byByZXF1ZXN0c1xuICovXG5mdW5jdGlvbiBiYXNpY0F1dGhlbnRpY2F0aW9uUG9saWN5KG9wdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBleHBvcnRzLmJhc2ljQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgLy8gRW5zdXJlIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uIGlzIGV4cGxpY2l0bHkgc2V0IHdoZW4gc2VuZGluZyByZXF1ZXN0IHRvIG5vbi1odHRwcyBVUkxzXG4gICAgICAgICAgICAoMCwgY2hlY2tJbnNlY3VyZUNvbm5lY3Rpb25fanNfMS5lbnN1cmVTZWN1cmVDb25uZWN0aW9uKShyZXF1ZXN0LCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHNjaGVtZSA9IChfYiA9ICgoX2EgPSByZXF1ZXN0LmF1dGhTY2hlbWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBvcHRpb25zLmF1dGhTY2hlbWVzKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmZpbmQoKHgpID0+IHgua2luZCA9PT0gXCJodHRwXCIgJiYgeC5zY2hlbWUgPT09IFwiYmFzaWNcIik7XG4gICAgICAgICAgICAvLyBTa2lwIGFkZGluZyBhdXRoZW50aWNhdGlvbiBoZWFkZXIgaWYgbm8gYmFzaWMgYXV0aGVudGljYXRpb24gc2NoZW1lIGlzIGZvdW5kXG4gICAgICAgICAgICBpZiAoIXNjaGVtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IG9wdGlvbnMuY3JlZGVudGlhbDtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlclZhbHVlID0gKDAsIGJ5dGVzRW5jb2RpbmdfanNfMS51aW50OEFycmF5VG9TdHJpbmcpKCgwLCBieXRlc0VuY29kaW5nX2pzXzEuc3RyaW5nVG9VaW50OEFycmF5KShgJHt1c2VybmFtZX06JHtwYXNzd29yZH1gLCBcInV0Zi04XCIpLCBcImJhc2U2NFwiKTtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGBCYXNpYyAke2hlYWRlclZhbHVlfWApO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2ljQXV0aGVudGljYXRpb25Qb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/basicAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/bearerAuthenticationPolicy.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/bearerAuthenticationPolicy.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bearerAuthenticationPolicyName = void 0;\nexports.bearerAuthenticationPolicy = bearerAuthenticationPolicy;\nconst checkInsecureConnection_js_1 = __webpack_require__(/*! ./checkInsecureConnection.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js\");\n/**\n * Name of the Bearer Authentication Policy\n */\nexports.bearerAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds bearer token authentication to requests\n */\nfunction bearerAuthenticationPolicy(options) {\n    return {\n        name: exports.bearerAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            (0, checkInsecureConnection_js_1.ensureSecureConnection)(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"bearer\");\n            // Skip adding authentication header if no bearer authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getBearerToken({\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=bearerAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2F1dGgvYmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0QyxrQ0FBa0M7QUFDbEMscUNBQXFDLG1CQUFPLENBQUMsMklBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDJEQUEyRCxNQUFNO0FBQ2pFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXGF1dGhcXGJlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMuYmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3kgPSBiZWFyZXJBdXRoZW50aWNhdGlvblBvbGljeTtcbmNvbnN0IGNoZWNrSW5zZWN1cmVDb25uZWN0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi9jaGVja0luc2VjdXJlQ29ubmVjdGlvbi5qc1wiKTtcbi8qKlxuICogTmFtZSBvZiB0aGUgQmVhcmVyIEF1dGhlbnRpY2F0aW9uIFBvbGljeVxuICovXG5leHBvcnRzLmJlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSA9IFwiYmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3lcIjtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IGFkZHMgYmVhcmVyIHRva2VuIGF1dGhlbnRpY2F0aW9uIHRvIHJlcXVlc3RzXG4gKi9cbmZ1bmN0aW9uIGJlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5KG9wdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBleHBvcnRzLmJlYXJlckF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIC8vIEVuc3VyZSBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbiBpcyBleHBsaWNpdGx5IHNldCB3aGVuIHNlbmRpbmcgcmVxdWVzdCB0byBub24taHR0cHMgVVJMc1xuICAgICAgICAgICAgKDAsIGNoZWNrSW5zZWN1cmVDb25uZWN0aW9uX2pzXzEuZW5zdXJlU2VjdXJlQ29ubmVjdGlvbikocmVxdWVzdCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCBzY2hlbWUgPSAoX2IgPSAoKF9hID0gcmVxdWVzdC5hdXRoU2NoZW1lcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogb3B0aW9ucy5hdXRoU2NoZW1lcykpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5maW5kKCh4KSA9PiB4LmtpbmQgPT09IFwiaHR0cFwiICYmIHguc2NoZW1lID09PSBcImJlYXJlclwiKTtcbiAgICAgICAgICAgIC8vIFNraXAgYWRkaW5nIGF1dGhlbnRpY2F0aW9uIGhlYWRlciBpZiBubyBiZWFyZXIgYXV0aGVudGljYXRpb24gc2NoZW1lIGlzIGZvdW5kXG4gICAgICAgICAgICBpZiAoIXNjaGVtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBvcHRpb25zLmNyZWRlbnRpYWwuZ2V0QmVhcmVyVG9rZW4oe1xuICAgICAgICAgICAgICAgIGFib3J0U2lnbmFsOiByZXF1ZXN0LmFib3J0U2lnbmFsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQXV0aG9yaXphdGlvblwiLCBgQmVhcmVyICR7dG9rZW59YCk7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmVhcmVyQXV0aGVudGljYXRpb25Qb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/bearerAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ensureSecureConnection = ensureSecureConnection;\nconst log_js_1 = __webpack_require__(/*! ../../log.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js\");\n// Ensure the warining is only emitted once\nlet insecureConnectionWarningEmmitted = false;\n/**\n * Checks if the request is allowed to be sent over an insecure connection.\n *\n * A request is allowed to be sent over an insecure connection when:\n * - The `allowInsecureConnection` option is set to `true`.\n * - The request has the `allowInsecureConnection` property set to `true`.\n * - The request is being sent to `localhost` or `127.0.0.1`\n */\nfunction allowInsecureConnection(request, options) {\n    if (options.allowInsecureConnection && request.allowInsecureConnection) {\n        const url = new URL(request.url);\n        if (url.hostname === \"localhost\" || url.hostname === \"127.0.0.1\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Logs a warning about sending a token over an insecure connection.\n *\n * This function will emit a node warning once, but log the warning every time.\n */\nfunction emitInsecureConnectionWarning() {\n    const warning = \"Sending token over insecure transport. Assume any token issued is compromised.\";\n    log_js_1.logger.warning(warning);\n    if (typeof (process === null || process === void 0 ? void 0 : process.emitWarning) === \"function\" && !insecureConnectionWarningEmmitted) {\n        insecureConnectionWarningEmmitted = true;\n        process.emitWarning(warning);\n    }\n}\n/**\n * Ensures that authentication is only allowed over HTTPS unless explicitly allowed.\n * Throws an error if the connection is not secure and not explicitly allowed.\n */\nfunction ensureSecureConnection(request, options) {\n    if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        if (allowInsecureConnection(request, options)) {\n            emitInsecureConnectionWarning();\n        }\n        else {\n            throw new Error(\"Authentication is not permitted for non-TLS protected (non-https) URLs when allowInsecureConnection is false.\");\n        }\n    }\n}\n//# sourceMappingURL=checkInsecureConnection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2F1dGgvY2hlY2tJbnNlY3VyZUNvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixpQkFBaUIsbUJBQU8sQ0FBQyx5RkFBYztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcYXV0aFxcY2hlY2tJbnNlY3VyZUNvbm5lY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW5zdXJlU2VjdXJlQ29ubmVjdGlvbiA9IGVuc3VyZVNlY3VyZUNvbm5lY3Rpb247XG5jb25zdCBsb2dfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9sb2cuanNcIik7XG4vLyBFbnN1cmUgdGhlIHdhcmluaW5nIGlzIG9ubHkgZW1pdHRlZCBvbmNlXG5sZXQgaW5zZWN1cmVDb25uZWN0aW9uV2FybmluZ0VtbWl0dGVkID0gZmFsc2U7XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcmVxdWVzdCBpcyBhbGxvd2VkIHRvIGJlIHNlbnQgb3ZlciBhbiBpbnNlY3VyZSBjb25uZWN0aW9uLlxuICpcbiAqIEEgcmVxdWVzdCBpcyBhbGxvd2VkIHRvIGJlIHNlbnQgb3ZlciBhbiBpbnNlY3VyZSBjb25uZWN0aW9uIHdoZW46XG4gKiAtIFRoZSBgYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb25gIG9wdGlvbiBpcyBzZXQgdG8gYHRydWVgLlxuICogLSBUaGUgcmVxdWVzdCBoYXMgdGhlIGBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbmAgcHJvcGVydHkgc2V0IHRvIGB0cnVlYC5cbiAqIC0gVGhlIHJlcXVlc3QgaXMgYmVpbmcgc2VudCB0byBgbG9jYWxob3N0YCBvciBgMTI3LjAuMC4xYFxuICovXG5mdW5jdGlvbiBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbihyZXF1ZXN0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMuYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gJiYgcmVxdWVzdC5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbikge1xuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICAgICAgaWYgKHVybC5ob3N0bmFtZSA9PT0gXCJsb2NhbGhvc3RcIiB8fCB1cmwuaG9zdG5hbWUgPT09IFwiMTI3LjAuMC4xXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogTG9ncyBhIHdhcm5pbmcgYWJvdXQgc2VuZGluZyBhIHRva2VuIG92ZXIgYW4gaW5zZWN1cmUgY29ubmVjdGlvbi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHdpbGwgZW1pdCBhIG5vZGUgd2FybmluZyBvbmNlLCBidXQgbG9nIHRoZSB3YXJuaW5nIGV2ZXJ5IHRpbWUuXG4gKi9cbmZ1bmN0aW9uIGVtaXRJbnNlY3VyZUNvbm5lY3Rpb25XYXJuaW5nKCkge1xuICAgIGNvbnN0IHdhcm5pbmcgPSBcIlNlbmRpbmcgdG9rZW4gb3ZlciBpbnNlY3VyZSB0cmFuc3BvcnQuIEFzc3VtZSBhbnkgdG9rZW4gaXNzdWVkIGlzIGNvbXByb21pc2VkLlwiO1xuICAgIGxvZ19qc18xLmxvZ2dlci53YXJuaW5nKHdhcm5pbmcpO1xuICAgIGlmICh0eXBlb2YgKHByb2Nlc3MgPT09IG51bGwgfHwgcHJvY2VzcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvY2Vzcy5lbWl0V2FybmluZykgPT09IFwiZnVuY3Rpb25cIiAmJiAhaW5zZWN1cmVDb25uZWN0aW9uV2FybmluZ0VtbWl0dGVkKSB7XG4gICAgICAgIGluc2VjdXJlQ29ubmVjdGlvbldhcm5pbmdFbW1pdHRlZCA9IHRydWU7XG4gICAgICAgIHByb2Nlc3MuZW1pdFdhcm5pbmcod2FybmluZyk7XG4gICAgfVxufVxuLyoqXG4gKiBFbnN1cmVzIHRoYXQgYXV0aGVudGljYXRpb24gaXMgb25seSBhbGxvd2VkIG92ZXIgSFRUUFMgdW5sZXNzIGV4cGxpY2l0bHkgYWxsb3dlZC5cbiAqIFRocm93cyBhbiBlcnJvciBpZiB0aGUgY29ubmVjdGlvbiBpcyBub3Qgc2VjdXJlIGFuZCBub3QgZXhwbGljaXRseSBhbGxvd2VkLlxuICovXG5mdW5jdGlvbiBlbnN1cmVTZWN1cmVDb25uZWN0aW9uKHJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgICBpZiAoIXJlcXVlc3QudXJsLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpKSB7XG4gICAgICAgIGlmIChhbGxvd0luc2VjdXJlQ29ubmVjdGlvbihyZXF1ZXN0LCBvcHRpb25zKSkge1xuICAgICAgICAgICAgZW1pdEluc2VjdXJlQ29ubmVjdGlvbldhcm5pbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkF1dGhlbnRpY2F0aW9uIGlzIG5vdCBwZXJtaXR0ZWQgZm9yIG5vbi1UTFMgcHJvdGVjdGVkIChub24taHR0cHMpIFVSTHMgd2hlbiBhbGxvd0luc2VjdXJlQ29ubmVjdGlvbiBpcyBmYWxzZS5cIik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVja0luc2VjdXJlQ29ubmVjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/oauth2AuthenticationPolicy.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/oauth2AuthenticationPolicy.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.oauth2AuthenticationPolicyName = void 0;\nexports.oauth2AuthenticationPolicy = oauth2AuthenticationPolicy;\nconst checkInsecureConnection_js_1 = __webpack_require__(/*! ./checkInsecureConnection.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/checkInsecureConnection.js\");\n/**\n * Name of the OAuth2 Authentication Policy\n */\nexports.oauth2AuthenticationPolicyName = \"oauth2AuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds authorization header from OAuth2 schemes\n */\nfunction oauth2AuthenticationPolicy(options) {\n    return {\n        name: exports.oauth2AuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            (0, checkInsecureConnection_js_1.ensureSecureConnection)(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"oauth2\");\n            // Skip adding authentication header if no OAuth2 authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getOAuth2Token(scheme.flows, {\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=oauth2AuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2F1dGgvb2F1dGgyQXV0aGVudGljYXRpb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0QyxrQ0FBa0M7QUFDbEMscUNBQXFDLG1CQUFPLENBQUMsMklBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDJEQUEyRCxNQUFNO0FBQ2pFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXGF1dGhcXG9hdXRoMkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm9hdXRoMkF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMub2F1dGgyQXV0aGVudGljYXRpb25Qb2xpY3kgPSBvYXV0aDJBdXRoZW50aWNhdGlvblBvbGljeTtcbmNvbnN0IGNoZWNrSW5zZWN1cmVDb25uZWN0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi9jaGVja0luc2VjdXJlQ29ubmVjdGlvbi5qc1wiKTtcbi8qKlxuICogTmFtZSBvZiB0aGUgT0F1dGgyIEF1dGhlbnRpY2F0aW9uIFBvbGljeVxuICovXG5leHBvcnRzLm9hdXRoMkF1dGhlbnRpY2F0aW9uUG9saWN5TmFtZSA9IFwib2F1dGgyQXV0aGVudGljYXRpb25Qb2xpY3lcIjtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IGFkZHMgYXV0aG9yaXphdGlvbiBoZWFkZXIgZnJvbSBPQXV0aDIgc2NoZW1lc1xuICovXG5mdW5jdGlvbiBvYXV0aDJBdXRoZW50aWNhdGlvblBvbGljeShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZXhwb3J0cy5vYXV0aDJBdXRoZW50aWNhdGlvblBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAvLyBFbnN1cmUgYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24gaXMgZXhwbGljaXRseSBzZXQgd2hlbiBzZW5kaW5nIHJlcXVlc3QgdG8gbm9uLWh0dHBzIFVSTHNcbiAgICAgICAgICAgICgwLCBjaGVja0luc2VjdXJlQ29ubmVjdGlvbl9qc18xLmVuc3VyZVNlY3VyZUNvbm5lY3Rpb24pKHJlcXVlc3QsIG9wdGlvbnMpO1xuICAgICAgICAgICAgY29uc3Qgc2NoZW1lID0gKF9iID0gKChfYSA9IHJlcXVlc3QuYXV0aFNjaGVtZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG9wdGlvbnMuYXV0aFNjaGVtZXMpKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZmluZCgoeCkgPT4geC5raW5kID09PSBcIm9hdXRoMlwiKTtcbiAgICAgICAgICAgIC8vIFNraXAgYWRkaW5nIGF1dGhlbnRpY2F0aW9uIGhlYWRlciBpZiBubyBPQXV0aDIgYXV0aGVudGljYXRpb24gc2NoZW1lIGlzIGZvdW5kXG4gICAgICAgICAgICBpZiAoIXNjaGVtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBvcHRpb25zLmNyZWRlbnRpYWwuZ2V0T0F1dGgyVG9rZW4oc2NoZW1lLmZsb3dzLCB7XG4gICAgICAgICAgICAgICAgYWJvcnRTaWduYWw6IHJlcXVlc3QuYWJvcnRTaWduYWwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGBCZWFyZXIgJHt0b2tlbn1gKTtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYXV0aDJBdXRoZW50aWNhdGlvblBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/auth/oauth2AuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/decompressResponsePolicy.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/decompressResponsePolicy.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decompressResponsePolicyName = void 0;\nexports.decompressResponsePolicy = decompressResponsePolicy;\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexports.decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nfunction decompressResponsePolicy() {\n    return {\n        name: exports.decompressResponsePolicyName,\n        async sendRequest(request, next) {\n            // HEAD requests have no body\n            if (request.method !== \"HEAD\") {\n                request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2RlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUgPSB2b2lkIDA7XG5leHBvcnRzLmRlY29tcHJlc3NSZXNwb25zZVBvbGljeSA9IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBkZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuXG4gKi9cbmV4cG9ydHMuZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSA9IFwiZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRvIGVuYWJsZSByZXNwb25zZSBkZWNvbXByZXNzaW9uIGFjY29yZGluZyB0byBBY2NlcHQtRW5jb2RpbmcgaGVhZGVyXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXB0LUVuY29kaW5nXG4gKi9cbmZ1bmN0aW9uIGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBleHBvcnRzLmRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIC8vIEhFQUQgcmVxdWVzdHMgaGF2ZSBubyBib2R5XG4gICAgICAgICAgICBpZiAocmVxdWVzdC5tZXRob2QgIT09IFwiSEVBRFwiKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkFjY2VwdC1FbmNvZGluZ1wiLCBcImd6aXAsZGVmbGF0ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/decompressResponsePolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/defaultRetryPolicy.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/defaultRetryPolicy.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultRetryPolicyName = void 0;\nexports.defaultRetryPolicy = defaultRetryPolicy;\nconst exponentialRetryStrategy_js_1 = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js\");\nconst throttlingRetryStrategy_js_1 = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js\");\nconst retryPolicy_js_1 = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexports.defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: exports.defaultRetryPolicyName,\n        sendRequest: (0, retryPolicy_js_1.retryPolicy)([(0, throttlingRetryStrategy_js_1.throttlingRetryStrategy)(), (0, exponentialRetryStrategy_js_1.exponentialRetryStrategy)(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : constants_js_1.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2RlZmF1bHRSZXRyeVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLDBCQUEwQjtBQUMxQixzQ0FBc0MsbUJBQU8sQ0FBQyxnS0FBZ0Q7QUFDOUYscUNBQXFDLG1CQUFPLENBQUMsOEpBQStDO0FBQzVGLHlCQUF5QixtQkFBTyxDQUFDLDhHQUFrQjtBQUNuRCx1QkFBdUIsbUJBQU8sQ0FBQyxrR0FBaUI7QUFDaEQ7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcZGVmYXVsdFJldHJ5UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRSZXRyeVBvbGljeU5hbWUgPSB2b2lkIDA7XG5leHBvcnRzLmRlZmF1bHRSZXRyeVBvbGljeSA9IGRlZmF1bHRSZXRyeVBvbGljeTtcbmNvbnN0IGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneV9qc18xID0gcmVxdWlyZShcIi4uL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanNcIik7XG5jb25zdCB0aHJvdHRsaW5nUmV0cnlTdHJhdGVneV9qc18xID0gcmVxdWlyZShcIi4uL3JldHJ5U3RyYXRlZ2llcy90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qc1wiKTtcbmNvbnN0IHJldHJ5UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9yZXRyeVBvbGljeS5qc1wiKTtcbmNvbnN0IGNvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50cy5qc1wiKTtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIGRlZmF1bHRSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0cy5kZWZhdWx0UmV0cnlQb2xpY3lOYW1lID0gXCJkZWZhdWx0UmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCByZXRyaWVzIGFjY29yZGluZyB0byB0aHJlZSBzdHJhdGVnaWVzOlxuICogLSBXaGVuIHRoZSBzZXJ2ZXIgc2VuZHMgYSA0MjkgcmVzcG9uc2Ugd2l0aCBhIFJldHJ5LUFmdGVyIGhlYWRlci5cbiAqIC0gV2hlbiB0aGVyZSBhcmUgZXJyb3JzIGluIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKS5cbiAqIC0gT3Igb3RoZXJ3aXNlIGlmIHRoZSBvdXRnb2luZyByZXF1ZXN0IGZhaWxzLCBpdCB3aWxsIHJldHJ5IHdpdGggYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5LlxuICovXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMuZGVmYXVsdFJldHJ5UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6ICgwLCByZXRyeVBvbGljeV9qc18xLnJldHJ5UG9saWN5KShbKDAsIHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5X2pzXzEudGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kpKCksICgwLCBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3lfanNfMS5leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kpKG9wdGlvbnMpXSwge1xuICAgICAgICAgICAgbWF4UmV0cmllczogKF9hID0gb3B0aW9ucy5tYXhSZXRyaWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBjb25zdGFudHNfanNfMS5ERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCxcbiAgICAgICAgfSkuc2VuZFJlcXVlc3QsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/exponentialRetryPolicy.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/exponentialRetryPolicy.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialRetryPolicyName = void 0;\nexports.exponentialRetryPolicy = exponentialRetryPolicy;\nconst exponentialRetryStrategy_js_1 = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js\");\nconst retryPolicy_js_1 = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nexports.exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nfunction exponentialRetryPolicy(options = {}) {\n    var _a;\n    return (0, retryPolicy_js_1.retryPolicy)([\n        (0, exponentialRetryStrategy_js_1.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : constants_js_1.DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2V4cG9uZW50aWFsUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQztBQUNsQyw4QkFBOEI7QUFDOUIsc0NBQXNDLG1CQUFPLENBQUMsZ0tBQWdEO0FBQzlGLHlCQUF5QixtQkFBTyxDQUFDLDhHQUFrQjtBQUNuRCx1QkFBdUIsbUJBQU8sQ0FBQyxrR0FBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQSxrR0FBa0csY0FBYywwQkFBMEI7QUFDMUk7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcZXhwb25lbnRpYWxSZXRyeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5leHBvbmVudGlhbFJldHJ5UG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMuZXhwb25lbnRpYWxSZXRyeVBvbGljeSA9IGV4cG9uZW50aWFsUmV0cnlQb2xpY3k7XG5jb25zdCBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3lfanNfMSA9IHJlcXVpcmUoXCIuLi9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzXCIpO1xuY29uc3QgcmV0cnlQb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuL3JldHJ5UG9saWN5LmpzXCIpO1xuY29uc3QgY29uc3RhbnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzLmpzXCIpO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGV4cG9uZW50aWFsUmV0cnlQb2xpY3kuXG4gKi9cbmV4cG9ydHMuZXhwb25lbnRpYWxSZXRyeVBvbGljeU5hbWUgPSBcImV4cG9uZW50aWFsUmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBhdHRlbXB0cyB0byByZXRyeSByZXF1ZXN0cyB3aGlsZSBpbnRyb2R1Y2luZyBhbiBleHBvbmVudGlhbGx5IGluY3JlYXNpbmcgZGVsYXkuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdGhhdCBjb25maWd1cmUgcmV0cnkgbG9naWMuXG4gKi9cbmZ1bmN0aW9uIGV4cG9uZW50aWFsUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoMCwgcmV0cnlQb2xpY3lfanNfMS5yZXRyeVBvbGljeSkoW1xuICAgICAgICAoMCwgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5X2pzXzEuZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5KShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGlnbm9yZVN5c3RlbUVycm9yczogdHJ1ZSB9KSksXG4gICAgXSwge1xuICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvbnN0YW50c19qc18xLkRFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhwb25lbnRpYWxSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/exponentialRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/formDataPolicy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/formDataPolicy.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.formDataPolicyName = void 0;\nexports.formDataPolicy = formDataPolicy;\nconst bytesEncoding_js_1 = __webpack_require__(/*! ../util/bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nconst checkEnvironment_js_1 = __webpack_require__(/*! ../util/checkEnvironment.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js\");\nconst httpHeaders_js_1 = __webpack_require__(/*! ../httpHeaders.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/httpHeaders.js\");\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexports.formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return {\n        name: exports.formDataPolicyName,\n        async sendRequest(request, next) {\n            if (checkEnvironment_js_1.isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: (0, httpHeaders_js_1.createHttpHeaders)({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: (0, bytesEncoding_js_1.stringToUint8Array)(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = (0, httpHeaders_js_1.createHttpHeaders)();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2Zvcm1EYXRhUG9saWN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsc0JBQXNCO0FBQ3RCLDJCQUEyQixtQkFBTyxDQUFDLG9IQUEwQjtBQUM3RCw4QkFBOEIsbUJBQU8sQ0FBQywwSEFBNkI7QUFDbkUseUJBQXlCLG1CQUFPLENBQUMsc0dBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxRQUFRLFVBQVU7QUFDN0UscUJBQXFCO0FBQ3JCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0REFBNEQsVUFBVSxJQUFJLE1BQU07QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxRQUFRLFVBQVUsR0FBRyxZQUFZLFNBQVM7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXGZvcm1EYXRhUG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZvcm1EYXRhUG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMuZm9ybURhdGFQb2xpY3kgPSBmb3JtRGF0YVBvbGljeTtcbmNvbnN0IGJ5dGVzRW5jb2RpbmdfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2J5dGVzRW5jb2RpbmcuanNcIik7XG5jb25zdCBjaGVja0Vudmlyb25tZW50X2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9jaGVja0Vudmlyb25tZW50LmpzXCIpO1xuY29uc3QgaHR0cEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuLi9odHRwSGVhZGVycy5qc1wiKTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBmb3JtRGF0YVBvbGljeS5cbiAqL1xuZXhwb3J0cy5mb3JtRGF0YVBvbGljeU5hbWUgPSBcImZvcm1EYXRhUG9saWN5XCI7XG5mdW5jdGlvbiBmb3JtRGF0YVRvRm9ybURhdGFNYXAoZm9ybURhdGEpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZm9ybURhdGFNYXAgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBmb3JtRGF0YS5lbnRyaWVzKCkpIHtcbiAgICAgICAgKF9hID0gZm9ybURhdGFNYXBba2V5XSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKGZvcm1EYXRhTWFwW2tleV0gPSBbXSk7XG4gICAgICAgIGZvcm1EYXRhTWFwW2tleV0ucHVzaCh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBmb3JtRGF0YU1hcDtcbn1cbi8qKlxuICogQSBwb2xpY3kgdGhhdCBlbmNvZGVzIEZvcm1EYXRhIG9uIHRoZSByZXF1ZXN0IGludG8gdGhlIGJvZHkuXG4gKi9cbmZ1bmN0aW9uIGZvcm1EYXRhUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMuZm9ybURhdGFQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoY2hlY2tFbnZpcm9ubWVudF9qc18xLmlzTm9kZUxpa2UgJiYgdHlwZW9mIEZvcm1EYXRhICE9PSBcInVuZGVmaW5lZFwiICYmIHJlcXVlc3QuYm9keSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5mb3JtRGF0YSA9IGZvcm1EYXRhVG9Gb3JtRGF0YU1hcChyZXF1ZXN0LmJvZHkpO1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuYm9keSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXF1ZXN0LmZvcm1EYXRhKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudFR5cGUgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50VHlwZSAmJiBjb250ZW50VHlwZS5pbmRleE9mKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmJvZHkgPSB3d3dGb3JtVXJsRW5jb2RlKHJlcXVlc3QuZm9ybURhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgcHJlcGFyZUZvcm1EYXRhKHJlcXVlc3QuZm9ybURhdGEsIHJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXF1ZXN0LmZvcm1EYXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHd3d0Zvcm1VcmxFbmNvZGUoZm9ybURhdGEpIHtcbiAgICBjb25zdCB1cmxTZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZm9ybURhdGEpKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBzdWJWYWx1ZSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHVybFNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCBzdWJWYWx1ZS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVybFNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdXJsU2VhcmNoUGFyYW1zLnRvU3RyaW5nKCk7XG59XG5hc3luYyBmdW5jdGlvbiBwcmVwYXJlRm9ybURhdGEoZm9ybURhdGEsIHJlcXVlc3QpIHtcbiAgICAvLyB2YWxpZGF0ZSBjb250ZW50IHR5cGUgKG11bHRpcGFydC9mb3JtLWRhdGEpXG4gICAgY29uc3QgY29udGVudFR5cGUgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpO1xuICAgIGlmIChjb250ZW50VHlwZSAmJiAhY29udGVudFR5cGUuc3RhcnRzV2l0aChcIm11bHRpcGFydC9mb3JtLWRhdGFcIikpIHtcbiAgICAgICAgLy8gY29udGVudCB0eXBlIGlzIHNwZWNpZmllZCBhbmQgaXMgbm90IG11bHRpcGFydC9mb3JtLWRhdGEuIEV4aXQuXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBjb250ZW50VHlwZSAhPT0gbnVsbCAmJiBjb250ZW50VHlwZSAhPT0gdm9pZCAwID8gY29udGVudFR5cGUgOiBcIm11bHRpcGFydC9mb3JtLWRhdGFcIik7XG4gICAgLy8gc2V0IGJvZHkgdG8gTXVsdGlwYXJ0UmVxdWVzdEJvZHkgdXNpbmcgY29udGVudCBmcm9tIEZvcm1EYXRhTWFwXG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtmaWVsZE5hbWUsIHZhbHVlc10gb2YgT2JqZWN0LmVudHJpZXMoZm9ybURhdGEpKSB7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgQXJyYXkuaXNBcnJheSh2YWx1ZXMpID8gdmFsdWVzIDogW3ZhbHVlc10pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogKDAsIGh0dHBIZWFkZXJzX2pzXzEuY3JlYXRlSHR0cEhlYWRlcnMpKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1EaXNwb3NpdGlvblwiOiBgZm9ybS1kYXRhOyBuYW1lPVwiJHtmaWVsZE5hbWV9XCJgLFxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogKDAsIGJ5dGVzRW5jb2RpbmdfanNfMS5zdHJpbmdUb1VpbnQ4QXJyYXkpKHZhbHVlLCBcInV0Zi04XCIpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdmFsdWUgZm9yIGtleSAke2ZpZWxkTmFtZX06ICR7dmFsdWV9LiBWYWx1ZSBzaG91bGQgYmUgc2VyaWFsaXplZCB0byBzdHJpbmcgZmlyc3QuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyB1c2luZyB8fCBpbnN0ZWFkIG9mID8/IGhlcmUgc2luY2UgaWYgdmFsdWUubmFtZSBpcyBlbXB0eSB3ZSBzaG91bGQgY3JlYXRlIGEgZmlsZSBuYW1lXG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSB2YWx1ZS5uYW1lIHx8IFwiYmxvYlwiO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSAoMCwgaHR0cEhlYWRlcnNfanNfMS5jcmVhdGVIdHRwSGVhZGVycykoKTtcbiAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtRGlzcG9zaXRpb25cIiwgYGZvcm0tZGF0YTsgbmFtZT1cIiR7ZmllbGROYW1lfVwiOyBmaWxlbmFtZT1cIiR7ZmlsZU5hbWV9XCJgKTtcbiAgICAgICAgICAgICAgICAvLyBhZ2FpbiwgfHwgaXMgdXNlZCBzaW5jZSBhbiBlbXB0eSB2YWx1ZS50eXBlIG1lYW5zIHRoZSBjb250ZW50IHR5cGUgaXMgdW5zZXRcbiAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCB2YWx1ZS50eXBlIHx8IFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCIpO1xuICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXF1ZXN0Lm11bHRpcGFydEJvZHkgPSB7IHBhcnRzIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtRGF0YVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/formDataPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/internal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/internal.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.userAgentPolicyName = exports.userAgentPolicy = exports.tlsPolicyName = exports.tlsPolicy = exports.redirectPolicyName = exports.redirectPolicy = exports.getDefaultProxySettings = exports.proxyPolicyName = exports.proxyPolicy = exports.multipartPolicyName = exports.multipartPolicy = exports.logPolicyName = exports.logPolicy = exports.formDataPolicyName = exports.formDataPolicy = exports.throttlingRetryPolicyName = exports.throttlingRetryPolicy = exports.systemErrorRetryPolicyName = exports.systemErrorRetryPolicy = exports.retryPolicy = exports.exponentialRetryPolicyName = exports.exponentialRetryPolicy = exports.defaultRetryPolicyName = exports.defaultRetryPolicy = exports.decompressResponsePolicyName = exports.decompressResponsePolicy = exports.agentPolicyName = exports.agentPolicy = void 0;\nvar agentPolicy_js_1 = __webpack_require__(/*! ./agentPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/agentPolicy.js\");\nObject.defineProperty(exports, \"agentPolicy\", ({ enumerable: true, get: function () { return agentPolicy_js_1.agentPolicy; } }));\nObject.defineProperty(exports, \"agentPolicyName\", ({ enumerable: true, get: function () { return agentPolicy_js_1.agentPolicyName; } }));\nvar decompressResponsePolicy_js_1 = __webpack_require__(/*! ./decompressResponsePolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/decompressResponsePolicy.js\");\nObject.defineProperty(exports, \"decompressResponsePolicy\", ({ enumerable: true, get: function () { return decompressResponsePolicy_js_1.decompressResponsePolicy; } }));\nObject.defineProperty(exports, \"decompressResponsePolicyName\", ({ enumerable: true, get: function () { return decompressResponsePolicy_js_1.decompressResponsePolicyName; } }));\nvar defaultRetryPolicy_js_1 = __webpack_require__(/*! ./defaultRetryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/defaultRetryPolicy.js\");\nObject.defineProperty(exports, \"defaultRetryPolicy\", ({ enumerable: true, get: function () { return defaultRetryPolicy_js_1.defaultRetryPolicy; } }));\nObject.defineProperty(exports, \"defaultRetryPolicyName\", ({ enumerable: true, get: function () { return defaultRetryPolicy_js_1.defaultRetryPolicyName; } }));\nvar exponentialRetryPolicy_js_1 = __webpack_require__(/*! ./exponentialRetryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/exponentialRetryPolicy.js\");\nObject.defineProperty(exports, \"exponentialRetryPolicy\", ({ enumerable: true, get: function () { return exponentialRetryPolicy_js_1.exponentialRetryPolicy; } }));\nObject.defineProperty(exports, \"exponentialRetryPolicyName\", ({ enumerable: true, get: function () { return exponentialRetryPolicy_js_1.exponentialRetryPolicyName; } }));\nvar retryPolicy_js_1 = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\");\nObject.defineProperty(exports, \"retryPolicy\", ({ enumerable: true, get: function () { return retryPolicy_js_1.retryPolicy; } }));\nvar systemErrorRetryPolicy_js_1 = __webpack_require__(/*! ./systemErrorRetryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/systemErrorRetryPolicy.js\");\nObject.defineProperty(exports, \"systemErrorRetryPolicy\", ({ enumerable: true, get: function () { return systemErrorRetryPolicy_js_1.systemErrorRetryPolicy; } }));\nObject.defineProperty(exports, \"systemErrorRetryPolicyName\", ({ enumerable: true, get: function () { return systemErrorRetryPolicy_js_1.systemErrorRetryPolicyName; } }));\nvar throttlingRetryPolicy_js_1 = __webpack_require__(/*! ./throttlingRetryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/throttlingRetryPolicy.js\");\nObject.defineProperty(exports, \"throttlingRetryPolicy\", ({ enumerable: true, get: function () { return throttlingRetryPolicy_js_1.throttlingRetryPolicy; } }));\nObject.defineProperty(exports, \"throttlingRetryPolicyName\", ({ enumerable: true, get: function () { return throttlingRetryPolicy_js_1.throttlingRetryPolicyName; } }));\nvar formDataPolicy_js_1 = __webpack_require__(/*! ./formDataPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/formDataPolicy.js\");\nObject.defineProperty(exports, \"formDataPolicy\", ({ enumerable: true, get: function () { return formDataPolicy_js_1.formDataPolicy; } }));\nObject.defineProperty(exports, \"formDataPolicyName\", ({ enumerable: true, get: function () { return formDataPolicy_js_1.formDataPolicyName; } }));\nvar logPolicy_js_1 = __webpack_require__(/*! ./logPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/logPolicy.js\");\nObject.defineProperty(exports, \"logPolicy\", ({ enumerable: true, get: function () { return logPolicy_js_1.logPolicy; } }));\nObject.defineProperty(exports, \"logPolicyName\", ({ enumerable: true, get: function () { return logPolicy_js_1.logPolicyName; } }));\nvar multipartPolicy_js_1 = __webpack_require__(/*! ./multipartPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/multipartPolicy.js\");\nObject.defineProperty(exports, \"multipartPolicy\", ({ enumerable: true, get: function () { return multipartPolicy_js_1.multipartPolicy; } }));\nObject.defineProperty(exports, \"multipartPolicyName\", ({ enumerable: true, get: function () { return multipartPolicy_js_1.multipartPolicyName; } }));\nvar proxyPolicy_js_1 = __webpack_require__(/*! ./proxyPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/proxyPolicy.js\");\nObject.defineProperty(exports, \"proxyPolicy\", ({ enumerable: true, get: function () { return proxyPolicy_js_1.proxyPolicy; } }));\nObject.defineProperty(exports, \"proxyPolicyName\", ({ enumerable: true, get: function () { return proxyPolicy_js_1.proxyPolicyName; } }));\nObject.defineProperty(exports, \"getDefaultProxySettings\", ({ enumerable: true, get: function () { return proxyPolicy_js_1.getDefaultProxySettings; } }));\nvar redirectPolicy_js_1 = __webpack_require__(/*! ./redirectPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/redirectPolicy.js\");\nObject.defineProperty(exports, \"redirectPolicy\", ({ enumerable: true, get: function () { return redirectPolicy_js_1.redirectPolicy; } }));\nObject.defineProperty(exports, \"redirectPolicyName\", ({ enumerable: true, get: function () { return redirectPolicy_js_1.redirectPolicyName; } }));\nvar tlsPolicy_js_1 = __webpack_require__(/*! ./tlsPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/tlsPolicy.js\");\nObject.defineProperty(exports, \"tlsPolicy\", ({ enumerable: true, get: function () { return tlsPolicy_js_1.tlsPolicy; } }));\nObject.defineProperty(exports, \"tlsPolicyName\", ({ enumerable: true, get: function () { return tlsPolicy_js_1.tlsPolicyName; } }));\nvar userAgentPolicy_js_1 = __webpack_require__(/*! ./userAgentPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/userAgentPolicy.js\");\nObject.defineProperty(exports, \"userAgentPolicy\", ({ enumerable: true, get: function () { return userAgentPolicy_js_1.userAgentPolicy; } }));\nObject.defineProperty(exports, \"userAgentPolicyName\", ({ enumerable: true, get: function () { return userAgentPolicy_js_1.userAgentPolicyName; } }));\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/internal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/logPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/logPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logPolicyName = void 0;\nexports.logPolicy = logPolicy;\nconst log_js_1 = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js\");\nconst sanitizer_js_1 = __webpack_require__(/*! ../util/sanitizer.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js\");\n/**\n * The programmatic identifier of the logPolicy.\n */\nexports.logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : log_js_1.logger.info;\n    const sanitizer = new sanitizer_js_1.Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: exports.logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL2xvZ1BvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyxzRkFBVztBQUNwQyx1QkFBdUIsbUJBQU8sQ0FBQyw0R0FBc0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDRCQUE0QjtBQUMzRDtBQUNBLDRDQUE0QyxnQkFBZ0I7QUFDNUQsK0JBQStCLHFDQUFxQztBQUNwRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHBvbGljaWVzXFxsb2dQb2xpY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nUG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMubG9nUG9saWN5ID0gbG9nUG9saWN5O1xuY29uc3QgbG9nX2pzXzEgPSByZXF1aXJlKFwiLi4vbG9nLmpzXCIpO1xuY29uc3Qgc2FuaXRpemVyX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9zYW5pdGl6ZXIuanNcIik7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgbG9nUG9saWN5LlxuICovXG5leHBvcnRzLmxvZ1BvbGljeU5hbWUgPSBcImxvZ1BvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGxvZ3MgYWxsIHJlcXVlc3RzIGFuZCByZXNwb25zZXMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY29uZmlndXJlIGxvZ1BvbGljeS5cbiAqL1xuZnVuY3Rpb24gbG9nUG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBsb2dnZXIgPSAoX2EgPSBvcHRpb25zLmxvZ2dlcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbG9nX2pzXzEubG9nZ2VyLmluZm87XG4gICAgY29uc3Qgc2FuaXRpemVyID0gbmV3IHNhbml0aXplcl9qc18xLlNhbml0aXplcih7XG4gICAgICAgIGFkZGl0aW9uYWxBbGxvd2VkSGVhZGVyTmFtZXM6IG9wdGlvbnMuYWRkaXRpb25hbEFsbG93ZWRIZWFkZXJOYW1lcyxcbiAgICAgICAgYWRkaXRpb25hbEFsbG93ZWRRdWVyeVBhcmFtZXRlcnM6IG9wdGlvbnMuYWRkaXRpb25hbEFsbG93ZWRRdWVyeVBhcmFtZXRlcnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZXhwb3J0cy5sb2dQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIWxvZ2dlci5lbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsb2dnZXIoYFJlcXVlc3Q6ICR7c2FuaXRpemVyLnNhbml0aXplKHJlcXVlc3QpfWApO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgbG9nZ2VyKGBSZXNwb25zZSBzdGF0dXMgY29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgICAgICBsb2dnZXIoYEhlYWRlcnM6ICR7c2FuaXRpemVyLnNhbml0aXplKHJlc3BvbnNlLmhlYWRlcnMpfWApO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/logPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/multipartPolicy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/multipartPolicy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.multipartPolicyName = void 0;\nexports.multipartPolicy = multipartPolicy;\nconst bytesEncoding_js_1 = __webpack_require__(/*! ../util/bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nconst typeGuards_js_1 = __webpack_require__(/*! ../util/typeGuards.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js\");\nconst uuidUtils_js_1 = __webpack_require__(/*! ../util/uuidUtils.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js\");\nconst concat_js_1 = __webpack_require__(/*! ../util/concat.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/concat.js\");\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${(0, uuidUtils_js_1.randomUUID)()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if ((0, typeGuards_js_1.isBlob)(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        (0, bytesEncoding_js_1.stringToUint8Array)(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            (0, bytesEncoding_js_1.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            (0, bytesEncoding_js_1.stringToUint8Array)(encodeHeaders(part.headers), \"utf-8\"),\n            (0, bytesEncoding_js_1.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            (0, bytesEncoding_js_1.stringToUint8Array)(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        (0, bytesEncoding_js_1.stringToUint8Array)(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await (0, concat_js_1.concat)(sources);\n}\n/**\n * Name of multipart policy\n */\nexports.multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nfunction multipartPolicy() {\n    return {\n        name: exports.multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL211bHRpcGFydFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLHVCQUF1QjtBQUN2QiwyQkFBMkIsbUJBQU8sQ0FBQyxvSEFBMEI7QUFDN0Qsd0JBQXdCLG1CQUFPLENBQUMsOEdBQXVCO0FBQ3ZELHVCQUF1QixtQkFBTyxDQUFDLDRHQUFzQjtBQUNyRCxvQkFBb0IsbUJBQU8sQ0FBQyxzR0FBbUI7QUFDL0M7QUFDQSxtQ0FBbUMsaUNBQWlDO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLElBQUksSUFBSSxNQUFNO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxTQUFTO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsU0FBUztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsU0FBUztBQUN4RDtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLFFBQVE7QUFDbkY7QUFDQSwwR0FBMEcsa0JBQWtCO0FBQzVIO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxnQkFBZ0IseUJBQXlCLFVBQVU7QUFDMUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxjQUFjLFdBQVcsU0FBUztBQUNyRjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcbXVsdGlwYXJ0UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm11bHRpcGFydFBvbGljeU5hbWUgPSB2b2lkIDA7XG5leHBvcnRzLm11bHRpcGFydFBvbGljeSA9IG11bHRpcGFydFBvbGljeTtcbmNvbnN0IGJ5dGVzRW5jb2RpbmdfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2J5dGVzRW5jb2RpbmcuanNcIik7XG5jb25zdCB0eXBlR3VhcmRzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC90eXBlR3VhcmRzLmpzXCIpO1xuY29uc3QgdXVpZFV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC91dWlkVXRpbHMuanNcIik7XG5jb25zdCBjb25jYXRfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2NvbmNhdC5qc1wiKTtcbmZ1bmN0aW9uIGdlbmVyYXRlQm91bmRhcnkoKSB7XG4gICAgcmV0dXJuIGAtLS0tQXpTREtGb3JtQm91bmRhcnkkeygwLCB1dWlkVXRpbHNfanNfMS5yYW5kb21VVUlEKSgpfWA7XG59XG5mdW5jdGlvbiBlbmNvZGVIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBoZWFkZXJzKSB7XG4gICAgICAgIHJlc3VsdCArPSBgJHtrZXl9OiAke3ZhbHVlfVxcclxcbmA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBnZXRMZW5ndGgoc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIHNvdXJjZS5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgdHlwZUd1YXJkc19qc18xLmlzQmxvYikoc291cmNlKSkge1xuICAgICAgICAvLyBpZiB3YXMgY3JlYXRlZCB1c2luZyBjcmVhdGVGaWxlIHRoZW4gLTEgbWVhbnMgd2UgaGF2ZSBhbiB1bmtub3duIHNpemVcbiAgICAgICAgcmV0dXJuIHNvdXJjZS5zaXplID09PSAtMSA/IHVuZGVmaW5lZCA6IHNvdXJjZS5zaXplO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRUb3RhbExlbmd0aChzb3VyY2VzKSB7XG4gICAgbGV0IHRvdGFsID0gMDtcbiAgICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGNvbnN0IHBhcnRMZW5ndGggPSBnZXRMZW5ndGgoc291cmNlKTtcbiAgICAgICAgaWYgKHBhcnRMZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRvdGFsICs9IHBhcnRMZW5ndGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvdGFsO1xufVxuYXN5bmMgZnVuY3Rpb24gYnVpbGRSZXF1ZXN0Qm9keShyZXF1ZXN0LCBwYXJ0cywgYm91bmRhcnkpIHtcbiAgICBjb25zdCBzb3VyY2VzID0gW1xuICAgICAgICAoMCwgYnl0ZXNFbmNvZGluZ19qc18xLnN0cmluZ1RvVWludDhBcnJheSkoYC0tJHtib3VuZGFyeX1gLCBcInV0Zi04XCIpLFxuICAgICAgICAuLi5wYXJ0cy5mbGF0TWFwKChwYXJ0KSA9PiBbXG4gICAgICAgICAgICAoMCwgYnl0ZXNFbmNvZGluZ19qc18xLnN0cmluZ1RvVWludDhBcnJheSkoXCJcXHJcXG5cIiwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgICgwLCBieXRlc0VuY29kaW5nX2pzXzEuc3RyaW5nVG9VaW50OEFycmF5KShlbmNvZGVIZWFkZXJzKHBhcnQuaGVhZGVycyksIFwidXRmLThcIiksXG4gICAgICAgICAgICAoMCwgYnl0ZXNFbmNvZGluZ19qc18xLnN0cmluZ1RvVWludDhBcnJheSkoXCJcXHJcXG5cIiwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgIHBhcnQuYm9keSxcbiAgICAgICAgICAgICgwLCBieXRlc0VuY29kaW5nX2pzXzEuc3RyaW5nVG9VaW50OEFycmF5KShgXFxyXFxuLS0ke2JvdW5kYXJ5fWAsIFwidXRmLThcIiksXG4gICAgICAgIF0pLFxuICAgICAgICAoMCwgYnl0ZXNFbmNvZGluZ19qc18xLnN0cmluZ1RvVWludDhBcnJheSkoXCItLVxcclxcblxcclxcblwiLCBcInV0Zi04XCIpLFxuICAgIF07XG4gICAgY29uc3QgY29udGVudExlbmd0aCA9IGdldFRvdGFsTGVuZ3RoKHNvdXJjZXMpO1xuICAgIGlmIChjb250ZW50TGVuZ3RoKSB7XG4gICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJDb250ZW50LUxlbmd0aFwiLCBjb250ZW50TGVuZ3RoKTtcbiAgICB9XG4gICAgcmVxdWVzdC5ib2R5ID0gYXdhaXQgKDAsIGNvbmNhdF9qc18xLmNvbmNhdCkoc291cmNlcyk7XG59XG4vKipcbiAqIE5hbWUgb2YgbXVsdGlwYXJ0IHBvbGljeVxuICovXG5leHBvcnRzLm11bHRpcGFydFBvbGljeU5hbWUgPSBcIm11bHRpcGFydFBvbGljeVwiO1xuY29uc3QgbWF4Qm91bmRhcnlMZW5ndGggPSA3MDtcbmNvbnN0IHZhbGlkQm91bmRhcnlDaGFyYWN0ZXJzID0gbmV3IFNldChgYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjAxMjM0NTY3ODknKCkrLC0uLzo9P2ApO1xuZnVuY3Rpb24gYXNzZXJ0VmFsaWRCb3VuZGFyeShib3VuZGFyeSkge1xuICAgIGlmIChib3VuZGFyeS5sZW5ndGggPiBtYXhCb3VuZGFyeUxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGFydCBib3VuZGFyeSBcIiR7Ym91bmRhcnl9XCIgZXhjZWVkcyBtYXhpbXVtIGxlbmd0aCBvZiA3MCBjaGFyYWN0ZXJzYCk7XG4gICAgfVxuICAgIGlmIChBcnJheS5mcm9tKGJvdW5kYXJ5KS5zb21lKCh4KSA9PiAhdmFsaWRCb3VuZGFyeUNoYXJhY3RlcnMuaGFzKHgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE11bHRpcGFydCBib3VuZGFyeSBcIiR7Ym91bmRhcnl9XCIgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzYCk7XG4gICAgfVxufVxuLyoqXG4gKiBQaXBlbGluZSBwb2xpY3kgZm9yIG11bHRpcGFydCByZXF1ZXN0c1xuICovXG5mdW5jdGlvbiBtdWx0aXBhcnRQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZXhwb3J0cy5tdWx0aXBhcnRQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QubXVsdGlwYXJ0Qm9keSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcXVlc3QuYm9keSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIm11bHRpcGFydEJvZHkgYW5kIHJlZ3VsYXIgYm9keSBjYW5ub3QgYmUgc2V0IGF0IHRoZSBzYW1lIHRpbWVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgYm91bmRhcnkgPSByZXF1ZXN0Lm11bHRpcGFydEJvZHkuYm91bmRhcnk7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50VHlwZUhlYWRlciA9IChfYSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIikpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwibXVsdGlwYXJ0L21peGVkXCI7XG4gICAgICAgICAgICBjb25zdCBwYXJzZWRIZWFkZXIgPSBjb250ZW50VHlwZUhlYWRlci5tYXRjaCgvXihtdWx0aXBhcnRcXC9bXiA7XSspKD86OyAqYm91bmRhcnk9KC4rKSk/JC8pO1xuICAgICAgICAgICAgaWYgKCFwYXJzZWRIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEdvdCBtdWx0aXBhcnQgcmVxdWVzdCBib2R5LCBidXQgY29udGVudC10eXBlIGhlYWRlciB3YXMgbm90IG11bHRpcGFydDogJHtjb250ZW50VHlwZUhlYWRlcn1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IFssIGNvbnRlbnRUeXBlLCBwYXJzZWRCb3VuZGFyeV0gPSBwYXJzZWRIZWFkZXI7XG4gICAgICAgICAgICBpZiAocGFyc2VkQm91bmRhcnkgJiYgYm91bmRhcnkgJiYgcGFyc2VkQm91bmRhcnkgIT09IGJvdW5kYXJ5KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdWx0aXBhcnQgYm91bmRhcnkgd2FzIHNwZWNpZmllZCBhcyAke3BhcnNlZEJvdW5kYXJ5fSBpbiB0aGUgaGVhZGVyLCBidXQgZ290ICR7Ym91bmRhcnl9IGluIHRoZSByZXF1ZXN0IGJvZHlgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJvdW5kYXJ5ICE9PSBudWxsICYmIGJvdW5kYXJ5ICE9PSB2b2lkIDAgPyBib3VuZGFyeSA6IChib3VuZGFyeSA9IHBhcnNlZEJvdW5kYXJ5KTtcbiAgICAgICAgICAgIGlmIChib3VuZGFyeSkge1xuICAgICAgICAgICAgICAgIGFzc2VydFZhbGlkQm91bmRhcnkoYm91bmRhcnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYm91bmRhcnkgPSBnZW5lcmF0ZUJvdW5kYXJ5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIGAke2NvbnRlbnRUeXBlfTsgYm91bmRhcnk9JHtib3VuZGFyeX1gKTtcbiAgICAgICAgICAgIGF3YWl0IGJ1aWxkUmVxdWVzdEJvZHkocmVxdWVzdCwgcmVxdWVzdC5tdWx0aXBhcnRCb2R5LnBhcnRzLCBib3VuZGFyeSk7XG4gICAgICAgICAgICByZXF1ZXN0Lm11bHRpcGFydEJvZHkgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGlwYXJ0UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/multipartPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/proxyPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/proxyPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.globalNoProxyList = exports.proxyPolicyName = void 0;\nexports.loadNoProxy = loadNoProxy;\nexports.getDefaultProxySettings = getDefaultProxySettings;\nexports.proxyPolicy = proxyPolicy;\nconst https_proxy_agent_1 = __webpack_require__(/*! https-proxy-agent */ \"(rsc)/./node_modules/https-proxy-agent/dist/index.js\");\nconst http_proxy_agent_1 = __webpack_require__(/*! http-proxy-agent */ \"(rsc)/./node_modules/http-proxy-agent/dist/index.js\");\nconst log_js_1 = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/log.js\");\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexports.proxyPolicyName = \"proxyPolicy\";\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nexports.globalNoProxyList = [];\nlet noProxyListLoaded = false;\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap = new Map();\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n    const allProxy = getEnvironmentValue(ALL_PROXY);\n    const httpProxy = getEnvironmentValue(HTTP_PROXY);\n    return httpsProxy || allProxy || httpProxy;\n}\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(uri, noProxyList, bypassedMap) {\n    if (noProxyList.length === 0) {\n        return false;\n    }\n    const host = new URL(uri).hostname;\n    if (bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.has(host)) {\n        return bypassedMap.get(host);\n    }\n    let isBypassedFlag = false;\n    for (const pattern of noProxyList) {\n        if (pattern[0] === \".\") {\n            // This should match either domain it self or any subdomain or host\n            // .foo.com will match foo.com it self or *.foo.com\n            if (host.endsWith(pattern)) {\n                isBypassedFlag = true;\n            }\n            else {\n                if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n                    isBypassedFlag = true;\n                }\n            }\n        }\n        else {\n            if (host === pattern) {\n                isBypassedFlag = true;\n            }\n        }\n    }\n    bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.set(host, isBypassedFlag);\n    return isBypassedFlag;\n}\nfunction loadNoProxy() {\n    const noProxy = getEnvironmentValue(NO_PROXY);\n    noProxyListLoaded = true;\n    if (noProxy) {\n        return noProxy\n            .split(\",\")\n            .map((item) => item.trim())\n            .filter((item) => item.length);\n    }\n    return [];\n}\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nfunction getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    const parsedUrl = new URL(proxyUrl);\n    const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n    return {\n        host: schema + parsedUrl.hostname,\n        port: Number.parseInt(parsedUrl.port || \"80\"),\n        username: parsedUrl.username,\n        password: parsedUrl.password,\n    };\n}\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal() {\n    const envProxy = loadEnvironmentProxyValue();\n    return envProxy ? new URL(envProxy) : undefined;\n}\nfunction getUrlFromProxySettings(settings) {\n    let parsedProxyUrl;\n    try {\n        parsedProxyUrl = new URL(settings.host);\n    }\n    catch (_a) {\n        throw new Error(`Expecting a valid host string in proxy settings, but found \"${settings.host}\".`);\n    }\n    parsedProxyUrl.port = String(settings.port);\n    if (settings.username) {\n        parsedProxyUrl.username = settings.username;\n    }\n    if (settings.password) {\n        parsedProxyUrl.password = settings.password;\n    }\n    return parsedProxyUrl;\n}\nfunction setProxyAgentOnRequest(request, cachedAgents, proxyUrl) {\n    // Custom Agent should take precedence so if one is present\n    // we should skip to avoid overwriting it.\n    if (request.agent) {\n        return;\n    }\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n    if (request.tlsSettings) {\n        log_js_1.logger.warning(\"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\");\n    }\n    const headers = request.headers.toJSON();\n    if (isInsecure) {\n        if (!cachedAgents.httpProxyAgent) {\n            cachedAgents.httpProxyAgent = new http_proxy_agent_1.HttpProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpProxyAgent;\n    }\n    else {\n        if (!cachedAgents.httpsProxyAgent) {\n            cachedAgents.httpsProxyAgent = new https_proxy_agent_1.HttpsProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpsProxyAgent;\n    }\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nfunction proxyPolicy(proxySettings, options) {\n    if (!noProxyListLoaded) {\n        exports.globalNoProxyList.push(...loadNoProxy());\n    }\n    const defaultProxy = proxySettings\n        ? getUrlFromProxySettings(proxySettings)\n        : getDefaultProxySettingsInternal();\n    const cachedAgents = {};\n    return {\n        name: exports.proxyPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.proxySettings &&\n                defaultProxy &&\n                !isBypassed(request.url, (_a = options === null || options === void 0 ? void 0 : options.customNoProxyList) !== null && _a !== void 0 ? _a : exports.globalNoProxyList, (options === null || options === void 0 ? void 0 : options.customNoProxyList) ? undefined : globalBypassedMap)) {\n                setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n            }\n            else if (request.proxySettings) {\n                setProxyAgentOnRequest(request, cachedAgents, getUrlFromProxySettings(request.proxySettings));\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=proxyPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3Byb3h5UG9saWN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUI7QUFDbkQsbUJBQW1CO0FBQ25CLCtCQUErQjtBQUMvQixtQkFBbUI7QUFDbkIsNEJBQTRCLG1CQUFPLENBQUMsK0VBQW1CO0FBQ3ZELDJCQUEyQixtQkFBTyxDQUFDLDZFQUFrQjtBQUNyRCxpQkFBaUIsbUJBQU8sQ0FBQyxzRkFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUYsY0FBYztBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsU0FBUztBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0ZBQStGLFNBQVM7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHBvbGljaWVzXFxwcm94eVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nbG9iYWxOb1Byb3h5TGlzdCA9IGV4cG9ydHMucHJveHlQb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy5sb2FkTm9Qcm94eSA9IGxvYWROb1Byb3h5O1xuZXhwb3J0cy5nZXREZWZhdWx0UHJveHlTZXR0aW5ncyA9IGdldERlZmF1bHRQcm94eVNldHRpbmdzO1xuZXhwb3J0cy5wcm94eVBvbGljeSA9IHByb3h5UG9saWN5O1xuY29uc3QgaHR0cHNfcHJveHlfYWdlbnRfMSA9IHJlcXVpcmUoXCJodHRwcy1wcm94eS1hZ2VudFwiKTtcbmNvbnN0IGh0dHBfcHJveHlfYWdlbnRfMSA9IHJlcXVpcmUoXCJodHRwLXByb3h5LWFnZW50XCIpO1xuY29uc3QgbG9nX2pzXzEgPSByZXF1aXJlKFwiLi4vbG9nLmpzXCIpO1xuY29uc3QgSFRUUFNfUFJPWFkgPSBcIkhUVFBTX1BST1hZXCI7XG5jb25zdCBIVFRQX1BST1hZID0gXCJIVFRQX1BST1hZXCI7XG5jb25zdCBBTExfUFJPWFkgPSBcIkFMTF9QUk9YWVwiO1xuY29uc3QgTk9fUFJPWFkgPSBcIk5PX1BST1hZXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgcHJveHlQb2xpY3kuXG4gKi9cbmV4cG9ydHMucHJveHlQb2xpY3lOYW1lID0gXCJwcm94eVBvbGljeVwiO1xuLyoqXG4gKiBTdG9yZXMgdGhlIHBhdHRlcm5zIHNwZWNpZmllZCBpbiBOT19QUk9YWSBlbnZpcm9ubWVudCB2YXJpYWJsZS5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnRzLmdsb2JhbE5vUHJveHlMaXN0ID0gW107XG5sZXQgbm9Qcm94eUxpc3RMb2FkZWQgPSBmYWxzZTtcbi8qKiBBIGNhY2hlIG9mIHdoZXRoZXIgYSBob3N0IHNob3VsZCBieXBhc3MgdGhlIHByb3h5LiAqL1xuY29uc3QgZ2xvYmFsQnlwYXNzZWRNYXAgPSBuZXcgTWFwKCk7XG5mdW5jdGlvbiBnZXRFbnZpcm9ubWVudFZhbHVlKG5hbWUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnZbbmFtZV0pIHtcbiAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52W25hbWVdO1xuICAgIH1cbiAgICBlbHNlIGlmIChwcm9jZXNzLmVudltuYW1lLnRvTG93ZXJDYXNlKCldKSB7XG4gICAgICAgIHJldHVybiBwcm9jZXNzLmVudltuYW1lLnRvTG93ZXJDYXNlKCldO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gbG9hZEVudmlyb25tZW50UHJveHlWYWx1ZSgpIHtcbiAgICBpZiAoIXByb2Nlc3MpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgaHR0cHNQcm94eSA9IGdldEVudmlyb25tZW50VmFsdWUoSFRUUFNfUFJPWFkpO1xuICAgIGNvbnN0IGFsbFByb3h5ID0gZ2V0RW52aXJvbm1lbnRWYWx1ZShBTExfUFJPWFkpO1xuICAgIGNvbnN0IGh0dHBQcm94eSA9IGdldEVudmlyb25tZW50VmFsdWUoSFRUUF9QUk9YWSk7XG4gICAgcmV0dXJuIGh0dHBzUHJveHkgfHwgYWxsUHJveHkgfHwgaHR0cFByb3h5O1xufVxuLyoqXG4gKiBDaGVjayB3aGV0aGVyIHRoZSBob3N0IG9mIGEgZ2l2ZW4gYHVyaWAgbWF0Y2hlcyBhbnkgcGF0dGVybiBpbiB0aGUgbm8gcHJveHkgbGlzdC5cbiAqIElmIHRoZXJlJ3MgYSBtYXRjaCwgYW55IHJlcXVlc3Qgc2VudCB0byB0aGUgc2FtZSBob3N0IHNob3VsZG4ndCBoYXZlIHRoZSBwcm94eSBzZXR0aW5ncyBzZXQuXG4gKiBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGEgcG9ydCBvZiBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmUtc2RrLWZvci1uZXQvYmxvYi84Y2NhODExMzcxMTU5ZTUyNzE1OWM3ZWI2NTYwMjQ3Nzg5ODY4M2UyL3Nkay9jb3JlL0F6dXJlLkNvcmUvc3JjL1BpcGVsaW5lL0ludGVybmFsL0h0dHBFbnZpcm9ubWVudFByb3h5LmNzI0wyMTBcbiAqL1xuZnVuY3Rpb24gaXNCeXBhc3NlZCh1cmksIG5vUHJveHlMaXN0LCBieXBhc3NlZE1hcCkge1xuICAgIGlmIChub1Byb3h5TGlzdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBob3N0ID0gbmV3IFVSTCh1cmkpLmhvc3RuYW1lO1xuICAgIGlmIChieXBhc3NlZE1hcCA9PT0gbnVsbCB8fCBieXBhc3NlZE1hcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYnlwYXNzZWRNYXAuaGFzKGhvc3QpKSB7XG4gICAgICAgIHJldHVybiBieXBhc3NlZE1hcC5nZXQoaG9zdCk7XG4gICAgfVxuICAgIGxldCBpc0J5cGFzc2VkRmxhZyA9IGZhbHNlO1xuICAgIGZvciAoY29uc3QgcGF0dGVybiBvZiBub1Byb3h5TGlzdCkge1xuICAgICAgICBpZiAocGF0dGVyblswXSA9PT0gXCIuXCIpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIG1hdGNoIGVpdGhlciBkb21haW4gaXQgc2VsZiBvciBhbnkgc3ViZG9tYWluIG9yIGhvc3RcbiAgICAgICAgICAgIC8vIC5mb28uY29tIHdpbGwgbWF0Y2ggZm9vLmNvbSBpdCBzZWxmIG9yICouZm9vLmNvbVxuICAgICAgICAgICAgaWYgKGhvc3QuZW5kc1dpdGgocGF0dGVybikpIHtcbiAgICAgICAgICAgICAgICBpc0J5cGFzc2VkRmxhZyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoaG9zdC5sZW5ndGggPT09IHBhdHRlcm4ubGVuZ3RoIC0gMSAmJiBob3N0ID09PSBwYXR0ZXJuLnNsaWNlKDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzQnlwYXNzZWRGbGFnID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoaG9zdCA9PT0gcGF0dGVybikge1xuICAgICAgICAgICAgICAgIGlzQnlwYXNzZWRGbGFnID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBieXBhc3NlZE1hcCA9PT0gbnVsbCB8fCBieXBhc3NlZE1hcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYnlwYXNzZWRNYXAuc2V0KGhvc3QsIGlzQnlwYXNzZWRGbGFnKTtcbiAgICByZXR1cm4gaXNCeXBhc3NlZEZsYWc7XG59XG5mdW5jdGlvbiBsb2FkTm9Qcm94eSgpIHtcbiAgICBjb25zdCBub1Byb3h5ID0gZ2V0RW52aXJvbm1lbnRWYWx1ZShOT19QUk9YWSk7XG4gICAgbm9Qcm94eUxpc3RMb2FkZWQgPSB0cnVlO1xuICAgIGlmIChub1Byb3h5KSB7XG4gICAgICAgIHJldHVybiBub1Byb3h5XG4gICAgICAgICAgICAuc3BsaXQoXCIsXCIpXG4gICAgICAgICAgICAubWFwKChpdGVtKSA9PiBpdGVtLnRyaW0oKSlcbiAgICAgICAgICAgIC5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ubGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xufVxuLyoqXG4gKiBUaGlzIG1ldGhvZCBjb252ZXJ0cyBhIHByb3h5IHVybCBpbnRvIGBQcm94eVNldHRpbmdzYCBmb3IgdXNlIHdpdGggUHJveHlQb2xpY3kuXG4gKiBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgaXQgYXR0ZW1wdHMgdG8gcGFyc2UgYSBwcm94eSBVUkwgZnJvbSB0aGUgZW52aXJvbm1lbnRcbiAqIHZhcmlhYmxlcyBgSFRUUFNfUFJPWFlgIG9yIGBIVFRQX1BST1hZYC5cbiAqIEBwYXJhbSBwcm94eVVybCAtIFRoZSB1cmwgb2YgdGhlIHByb3h5IHRvIHVzZS4gTWF5IGNvbnRhaW4gYXV0aGVudGljYXRpb24gaW5mb3JtYXRpb24uXG4gKiBAZGVwcmVjYXRlZCAtIEludGVybmFsbHkgdGhpcyBtZXRob2QgaXMgbm8gbG9uZ2VyIG5lY2Vzc2FyeSB3aGVuIHNldHRpbmcgcHJveHkgaW5mb3JtYXRpb24uXG4gKi9cbmZ1bmN0aW9uIGdldERlZmF1bHRQcm94eVNldHRpbmdzKHByb3h5VXJsKSB7XG4gICAgaWYgKCFwcm94eVVybCkge1xuICAgICAgICBwcm94eVVybCA9IGxvYWRFbnZpcm9ubWVudFByb3h5VmFsdWUoKTtcbiAgICAgICAgaWYgKCFwcm94eVVybCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBwYXJzZWRVcmwgPSBuZXcgVVJMKHByb3h5VXJsKTtcbiAgICBjb25zdCBzY2hlbWEgPSBwYXJzZWRVcmwucHJvdG9jb2wgPyBwYXJzZWRVcmwucHJvdG9jb2wgKyBcIi8vXCIgOiBcIlwiO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhvc3Q6IHNjaGVtYSArIHBhcnNlZFVybC5ob3N0bmFtZSxcbiAgICAgICAgcG9ydDogTnVtYmVyLnBhcnNlSW50KHBhcnNlZFVybC5wb3J0IHx8IFwiODBcIiksXG4gICAgICAgIHVzZXJuYW1lOiBwYXJzZWRVcmwudXNlcm5hbWUsXG4gICAgICAgIHBhc3N3b3JkOiBwYXJzZWRVcmwucGFzc3dvcmQsXG4gICAgfTtcbn1cbi8qKlxuICogVGhpcyBtZXRob2QgYXR0ZW1wdHMgdG8gcGFyc2UgYSBwcm94eSBVUkwgZnJvbSB0aGUgZW52aXJvbm1lbnRcbiAqIHZhcmlhYmxlcyBgSFRUUFNfUFJPWFlgIG9yIGBIVFRQX1BST1hZYC5cbiAqL1xuZnVuY3Rpb24gZ2V0RGVmYXVsdFByb3h5U2V0dGluZ3NJbnRlcm5hbCgpIHtcbiAgICBjb25zdCBlbnZQcm94eSA9IGxvYWRFbnZpcm9ubWVudFByb3h5VmFsdWUoKTtcbiAgICByZXR1cm4gZW52UHJveHkgPyBuZXcgVVJMKGVudlByb3h5KSA6IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGdldFVybEZyb21Qcm94eVNldHRpbmdzKHNldHRpbmdzKSB7XG4gICAgbGV0IHBhcnNlZFByb3h5VXJsO1xuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlZFByb3h5VXJsID0gbmV3IFVSTChzZXR0aW5ncy5ob3N0KTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0aW5nIGEgdmFsaWQgaG9zdCBzdHJpbmcgaW4gcHJveHkgc2V0dGluZ3MsIGJ1dCBmb3VuZCBcIiR7c2V0dGluZ3MuaG9zdH1cIi5gKTtcbiAgICB9XG4gICAgcGFyc2VkUHJveHlVcmwucG9ydCA9IFN0cmluZyhzZXR0aW5ncy5wb3J0KTtcbiAgICBpZiAoc2V0dGluZ3MudXNlcm5hbWUpIHtcbiAgICAgICAgcGFyc2VkUHJveHlVcmwudXNlcm5hbWUgPSBzZXR0aW5ncy51c2VybmFtZTtcbiAgICB9XG4gICAgaWYgKHNldHRpbmdzLnBhc3N3b3JkKSB7XG4gICAgICAgIHBhcnNlZFByb3h5VXJsLnBhc3N3b3JkID0gc2V0dGluZ3MucGFzc3dvcmQ7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZWRQcm94eVVybDtcbn1cbmZ1bmN0aW9uIHNldFByb3h5QWdlbnRPblJlcXVlc3QocmVxdWVzdCwgY2FjaGVkQWdlbnRzLCBwcm94eVVybCkge1xuICAgIC8vIEN1c3RvbSBBZ2VudCBzaG91bGQgdGFrZSBwcmVjZWRlbmNlIHNvIGlmIG9uZSBpcyBwcmVzZW50XG4gICAgLy8gd2Ugc2hvdWxkIHNraXAgdG8gYXZvaWQgb3ZlcndyaXRpbmcgaXQuXG4gICAgaWYgKHJlcXVlc3QuYWdlbnQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICBjb25zdCBpc0luc2VjdXJlID0gdXJsLnByb3RvY29sICE9PSBcImh0dHBzOlwiO1xuICAgIGlmIChyZXF1ZXN0LnRsc1NldHRpbmdzKSB7XG4gICAgICAgIGxvZ19qc18xLmxvZ2dlci53YXJuaW5nKFwiVExTIHNldHRpbmdzIGFyZSBub3Qgc3VwcG9ydGVkIGluIGNvbWJpbmF0aW9uIHdpdGggY3VzdG9tIFByb3h5LCBjZXJ0aWZpY2F0ZXMgcHJvdmlkZWQgdG8gdGhlIGNsaWVudCB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICAgIH1cbiAgICBjb25zdCBoZWFkZXJzID0gcmVxdWVzdC5oZWFkZXJzLnRvSlNPTigpO1xuICAgIGlmIChpc0luc2VjdXJlKSB7XG4gICAgICAgIGlmICghY2FjaGVkQWdlbnRzLmh0dHBQcm94eUFnZW50KSB7XG4gICAgICAgICAgICBjYWNoZWRBZ2VudHMuaHR0cFByb3h5QWdlbnQgPSBuZXcgaHR0cF9wcm94eV9hZ2VudF8xLkh0dHBQcm94eUFnZW50KHByb3h5VXJsLCB7IGhlYWRlcnMgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdC5hZ2VudCA9IGNhY2hlZEFnZW50cy5odHRwUHJveHlBZ2VudDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmICghY2FjaGVkQWdlbnRzLmh0dHBzUHJveHlBZ2VudCkge1xuICAgICAgICAgICAgY2FjaGVkQWdlbnRzLmh0dHBzUHJveHlBZ2VudCA9IG5ldyBodHRwc19wcm94eV9hZ2VudF8xLkh0dHBzUHJveHlBZ2VudChwcm94eVVybCwgeyBoZWFkZXJzIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJlcXVlc3QuYWdlbnQgPSBjYWNoZWRBZ2VudHMuaHR0cHNQcm94eUFnZW50O1xuICAgIH1cbn1cbi8qKlxuICogQSBwb2xpY3kgdGhhdCBhbGxvd3Mgb25lIHRvIGFwcGx5IHByb3h5IHNldHRpbmdzIHRvIGFsbCByZXF1ZXN0cy5cbiAqIElmIG5vdCBwYXNzZWQgc3RhdGljIHNldHRpbmdzLCB0aGV5IHdpbGwgYmUgcmV0cmlldmVkIGZyb20gdGhlIEhUVFBTX1BST1hZXG4gKiBvciBIVFRQX1BST1hZIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqIEBwYXJhbSBwcm94eVNldHRpbmdzIC0gUHJveHlTZXR0aW5ncyB0byB1c2Ugb24gZWFjaCByZXF1ZXN0LlxuICogQHBhcmFtIG9wdGlvbnMgLSBhZGRpdGlvbmFsIHNldHRpbmdzLCBmb3IgZXhhbXBsZSwgY3VzdG9tIE5PX1BST1hZIHBhdHRlcm5zXG4gKi9cbmZ1bmN0aW9uIHByb3h5UG9saWN5KHByb3h5U2V0dGluZ3MsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW5vUHJveHlMaXN0TG9hZGVkKSB7XG4gICAgICAgIGV4cG9ydHMuZ2xvYmFsTm9Qcm94eUxpc3QucHVzaCguLi5sb2FkTm9Qcm94eSgpKTtcbiAgICB9XG4gICAgY29uc3QgZGVmYXVsdFByb3h5ID0gcHJveHlTZXR0aW5nc1xuICAgICAgICA/IGdldFVybEZyb21Qcm94eVNldHRpbmdzKHByb3h5U2V0dGluZ3MpXG4gICAgICAgIDogZ2V0RGVmYXVsdFByb3h5U2V0dGluZ3NJbnRlcm5hbCgpO1xuICAgIGNvbnN0IGNhY2hlZEFnZW50cyA9IHt9O1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMucHJveHlQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QucHJveHlTZXR0aW5ncyAmJlxuICAgICAgICAgICAgICAgIGRlZmF1bHRQcm94eSAmJlxuICAgICAgICAgICAgICAgICFpc0J5cGFzc2VkKHJlcXVlc3QudXJsLCAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY3VzdG9tTm9Qcm94eUxpc3QpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV4cG9ydHMuZ2xvYmFsTm9Qcm94eUxpc3QsIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY3VzdG9tTm9Qcm94eUxpc3QpID8gdW5kZWZpbmVkIDogZ2xvYmFsQnlwYXNzZWRNYXApKSB7XG4gICAgICAgICAgICAgICAgc2V0UHJveHlBZ2VudE9uUmVxdWVzdChyZXF1ZXN0LCBjYWNoZWRBZ2VudHMsIGRlZmF1bHRQcm94eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXF1ZXN0LnByb3h5U2V0dGluZ3MpIHtcbiAgICAgICAgICAgICAgICBzZXRQcm94eUFnZW50T25SZXF1ZXN0KHJlcXVlc3QsIGNhY2hlZEFnZW50cywgZ2V0VXJsRnJvbVByb3h5U2V0dGluZ3MocmVxdWVzdC5wcm94eVNldHRpbmdzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJveHlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/proxyPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/redirectPolicy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/redirectPolicy.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.redirectPolicyName = void 0;\nexports.redirectPolicy = redirectPolicy;\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexports.redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: exports.redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxZQUFZLGtCQUFrQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkJBQTJCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXHJlZGlyZWN0UG9saWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlZGlyZWN0UG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMucmVkaXJlY3RQb2xpY3kgPSByZWRpcmVjdFBvbGljeTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSByZWRpcmVjdFBvbGljeS5cbiAqL1xuZXhwb3J0cy5yZWRpcmVjdFBvbGljeU5hbWUgPSBcInJlZGlyZWN0UG9saWN5XCI7XG4vKipcbiAqIE1ldGhvZHMgdGhhdCBhcmUgYWxsb3dlZCB0byBmb2xsb3cgcmVkaXJlY3RzIDMwMSBhbmQgMzAyXG4gKi9cbmNvbnN0IGFsbG93ZWRSZWRpcmVjdCA9IFtcIkdFVFwiLCBcIkhFQURcIl07XG4vKipcbiAqIEEgcG9saWN5IHRvIGZvbGxvdyBMb2NhdGlvbiBoZWFkZXJzIGZyb20gdGhlIHNlcnZlciBpbiBvcmRlclxuICogdG8gc3VwcG9ydCBzZXJ2ZXItc2lkZSByZWRpcmVjdGlvbi5cbiAqIEluIHRoZSBicm93c2VyLCB0aGlzIHBvbGljeSBpcyBub3QgdXNlZC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb250cm9sIHBvbGljeSBiZWhhdmlvci5cbiAqL1xuZnVuY3Rpb24gcmVkaXJlY3RQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgeyBtYXhSZXRyaWVzID0gMjAgfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZXhwb3J0cy5yZWRpcmVjdFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVSZWRpcmVjdChuZXh0LCByZXNwb25zZSwgbWF4UmV0cmllcyk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZVJlZGlyZWN0KG5leHQsIHJlc3BvbnNlLCBtYXhSZXRyaWVzLCBjdXJyZW50UmV0cmllcyA9IDApIHtcbiAgICBjb25zdCB7IHJlcXVlc3QsIHN0YXR1cywgaGVhZGVycyB9ID0gcmVzcG9uc2U7XG4gICAgY29uc3QgbG9jYXRpb25IZWFkZXIgPSBoZWFkZXJzLmdldChcImxvY2F0aW9uXCIpO1xuICAgIGlmIChsb2NhdGlvbkhlYWRlciAmJlxuICAgICAgICAoc3RhdHVzID09PSAzMDAgfHxcbiAgICAgICAgICAgIChzdGF0dXMgPT09IDMwMSAmJiBhbGxvd2VkUmVkaXJlY3QuaW5jbHVkZXMocmVxdWVzdC5tZXRob2QpKSB8fFxuICAgICAgICAgICAgKHN0YXR1cyA9PT0gMzAyICYmIGFsbG93ZWRSZWRpcmVjdC5pbmNsdWRlcyhyZXF1ZXN0Lm1ldGhvZCkpIHx8XG4gICAgICAgICAgICAoc3RhdHVzID09PSAzMDMgJiYgcmVxdWVzdC5tZXRob2QgPT09IFwiUE9TVFwiKSB8fFxuICAgICAgICAgICAgc3RhdHVzID09PSAzMDcpICYmXG4gICAgICAgIGN1cnJlbnRSZXRyaWVzIDwgbWF4UmV0cmllcykge1xuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGxvY2F0aW9uSGVhZGVyLCByZXF1ZXN0LnVybCk7XG4gICAgICAgIHJlcXVlc3QudXJsID0gdXJsLnRvU3RyaW5nKCk7XG4gICAgICAgIC8vIFBPU1QgcmVxdWVzdCB3aXRoIFN0YXR1cyBjb2RlIDMwMyBzaG91bGQgYmUgY29udmVydGVkIGludG8gYVxuICAgICAgICAvLyByZWRpcmVjdGVkIEdFVCByZXF1ZXN0IGlmIHRoZSByZWRpcmVjdCB1cmwgaXMgcHJlc2VudCBpbiB0aGUgbG9jYXRpb24gaGVhZGVyXG4gICAgICAgIGlmIChzdGF0dXMgPT09IDMwMykge1xuICAgICAgICAgICAgcmVxdWVzdC5tZXRob2QgPSBcIkdFVFwiO1xuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLmRlbGV0ZShcIkNvbnRlbnQtTGVuZ3RoXCIpO1xuICAgICAgICAgICAgZGVsZXRlIHJlcXVlc3QuYm9keTtcbiAgICAgICAgfVxuICAgICAgICByZXF1ZXN0LmhlYWRlcnMuZGVsZXRlKFwiQXV0aG9yaXphdGlvblwiKTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuIGhhbmRsZVJlZGlyZWN0KG5leHQsIHJlcywgbWF4UmV0cmllcywgY3VycmVudFJldHJpZXMgKyAxKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3RQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/redirectPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryPolicy = retryPolicy;\nconst helpers_js_1 = __webpack_require__(/*! ../util/helpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/helpers.js\");\nconst AbortError_js_1 = __webpack_require__(/*! ../abort-controller/AbortError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js\");\nconst logger_js_1 = __webpack_require__(/*! ../logger/logger.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/logger/logger.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\nconst retryPolicyLogger = (0, logger_js_1.createClientLogger)(\"ts-http-runtime retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: constants_js_1.DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new AbortError_js_1.AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : constants_js_1.DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || logger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await (0, helpers_js_1.delay)(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/systemErrorRetryPolicy.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/systemErrorRetryPolicy.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.systemErrorRetryPolicyName = void 0;\nexports.systemErrorRetryPolicy = systemErrorRetryPolicy;\nconst exponentialRetryStrategy_js_1 = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js\");\nconst retryPolicy_js_1 = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nexports.systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nfunction systemErrorRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: exports.systemErrorRetryPolicyName,\n        sendRequest: (0, retryPolicy_js_1.retryPolicy)([\n            (0, exponentialRetryStrategy_js_1.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreHttpStatusCodes: true })),\n        ], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : constants_js_1.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3N5c3RlbUVycm9yUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQztBQUNsQyw4QkFBOEI7QUFDOUIsc0NBQXNDLG1CQUFPLENBQUMsZ0tBQWdEO0FBQzlGLHlCQUF5QixtQkFBTyxDQUFDLDhHQUFrQjtBQUNuRCx1QkFBdUIsbUJBQU8sQ0FBQyxrR0FBaUI7QUFDaEQ7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0dBQXNHLGNBQWMsNkJBQTZCO0FBQ2pKO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFxwb2xpY2llc1xcc3lzdGVtRXJyb3JSZXRyeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSA9IHZvaWQgMDtcbmV4cG9ydHMuc3lzdGVtRXJyb3JSZXRyeVBvbGljeSA9IHN5c3RlbUVycm9yUmV0cnlQb2xpY3k7XG5jb25zdCBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3lfanNfMSA9IHJlcXVpcmUoXCIuLi9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzXCIpO1xuY29uc3QgcmV0cnlQb2xpY3lfanNfMSA9IHJlcXVpcmUoXCIuL3JldHJ5UG9saWN5LmpzXCIpO1xuY29uc3QgY29uc3RhbnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzLmpzXCIpO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSB7QGxpbmsgc3lzdGVtRXJyb3JSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0cy5zeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSA9IFwic3lzdGVtRXJyb3JSZXRyeVBvbGljeVwiO1xuLyoqXG4gKiBBIHJldHJ5IHBvbGljeSB0aGF0IHNwZWNpZmljYWxseSBzZWVrcyB0byBoYW5kbGUgZXJyb3JzIGluIHRoZVxuICogdW5kZXJseWluZyB0cmFuc3BvcnQgbGF5ZXIgKGUuZy4gRE5TIGxvb2t1cCBmYWlsdXJlcykgcmF0aGVyIHRoYW5cbiAqIHJldHJ5YWJsZSBlcnJvciBjb2RlcyBmcm9tIHRoZSBzZXJ2ZXIgaXRzZWxmLlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY3VzdG9taXplIHRoZSBwb2xpY3kuXG4gKi9cbmZ1bmN0aW9uIHN5c3RlbUVycm9yUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMuc3lzdGVtRXJyb3JSZXRyeVBvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiAoMCwgcmV0cnlQb2xpY3lfanNfMS5yZXRyeVBvbGljeSkoW1xuICAgICAgICAgICAgKDAsIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneV9qc18xLmV4cG9uZW50aWFsUmV0cnlTdHJhdGVneSkoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgeyBpZ25vcmVIdHRwU3RhdHVzQ29kZXM6IHRydWUgfSkpLFxuICAgICAgICBdLCB7XG4gICAgICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvbnN0YW50c19qc18xLkRFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgICAgICB9KS5zZW5kUmVxdWVzdCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3lzdGVtRXJyb3JSZXRyeVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/systemErrorRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/throttlingRetryPolicy.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/throttlingRetryPolicy.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.throttlingRetryPolicyName = void 0;\nexports.throttlingRetryPolicy = throttlingRetryPolicy;\nconst throttlingRetryStrategy_js_1 = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js\");\nconst retryPolicy_js_1 = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/retryPolicy.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nexports.throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://learn.microsoft.com/azure/azure-resource-manager/resource-manager-request-limits,\n * https://learn.microsoft.com/azure/azure-subscription-service-limits and\n * https://learn.microsoft.com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nfunction throttlingRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: exports.throttlingRetryPolicyName,\n        sendRequest: (0, retryPolicy_js_1.retryPolicy)([(0, throttlingRetryStrategy_js_1.throttlingRetryStrategy)()], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : constants_js_1.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3Rocm90dGxpbmdSZXRyeVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLDZCQUE2QjtBQUM3QixxQ0FBcUMsbUJBQU8sQ0FBQyw4SkFBK0M7QUFDNUYseUJBQXlCLG1CQUFPLENBQUMsOEdBQWtCO0FBQ25ELHVCQUF1QixtQkFBTyxDQUFDLGtHQUFpQjtBQUNoRDtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXHRocm90dGxpbmdSZXRyeVBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50aHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy50aHJvdHRsaW5nUmV0cnlQb2xpY3kgPSB0aHJvdHRsaW5nUmV0cnlQb2xpY3k7XG5jb25zdCB0aHJvdHRsaW5nUmV0cnlTdHJhdGVneV9qc18xID0gcmVxdWlyZShcIi4uL3JldHJ5U3RyYXRlZ2llcy90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qc1wiKTtcbmNvbnN0IHJldHJ5UG9saWN5X2pzXzEgPSByZXF1aXJlKFwiLi9yZXRyeVBvbGljeS5qc1wiKTtcbmNvbnN0IGNvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50cy5qc1wiKTtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIHRocm90dGxpbmdSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0cy50aHJvdHRsaW5nUmV0cnlQb2xpY3lOYW1lID0gXCJ0aHJvdHRsaW5nUmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCByZXRyaWVzIHdoZW4gdGhlIHNlcnZlciBzZW5kcyBhIDQyOSByZXNwb25zZSB3aXRoIGEgUmV0cnktQWZ0ZXIgaGVhZGVyLlxuICpcbiAqIFRvIGxlYXJuIG1vcmUsIHBsZWFzZSByZWZlciB0b1xuICogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2F6dXJlL2F6dXJlLXJlc291cmNlLW1hbmFnZXIvcmVzb3VyY2UtbWFuYWdlci1yZXF1ZXN0LWxpbWl0cyxcbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9henVyZS9henVyZS1zdWJzY3JpcHRpb24tc2VydmljZS1saW1pdHMgYW5kXG4gKiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vYXp1cmUvdmlydHVhbC1tYWNoaW5lcy90cm91Ymxlc2hvb3RpbmcvdHJvdWJsZXNob290aW5nLXRocm90dGxpbmctZXJyb3JzXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIHRoYXQgY29uZmlndXJlIHJldHJ5IGxvZ2ljLlxuICovXG5mdW5jdGlvbiB0aHJvdHRsaW5nUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMudGhyb3R0bGluZ1JldHJ5UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6ICgwLCByZXRyeVBvbGljeV9qc18xLnJldHJ5UG9saWN5KShbKDAsIHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5X2pzXzEudGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kpKCldLCB7XG4gICAgICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvbnN0YW50c19qc18xLkRFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgICAgICB9KS5zZW5kUmVxdWVzdCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/throttlingRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/tlsPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/tlsPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.tlsPolicyName = void 0;\nexports.tlsPolicy = tlsPolicy;\n/**\n * Name of the TLS Policy\n */\nexports.tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nfunction tlsPolicy(tlsSettings) {\n    return {\n        name: exports.tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3Rsc1BvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXHRsc1BvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50bHNQb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy50bHNQb2xpY3kgPSB0bHNQb2xpY3k7XG4vKipcbiAqIE5hbWUgb2YgdGhlIFRMUyBQb2xpY3lcbiAqL1xuZXhwb3J0cy50bHNQb2xpY3lOYW1lID0gXCJ0bHNQb2xpY3lcIjtcbi8qKlxuICogR2V0cyBhIHBpcGVsaW5lIHBvbGljeSB0aGF0IGFkZHMgdGhlIGNsaWVudCBjZXJ0aWZpY2F0ZSB0byB0aGUgSHR0cENsaWVudCBhZ2VudCBmb3IgYXV0aGVudGljYXRpb24uXG4gKi9cbmZ1bmN0aW9uIHRsc1BvbGljeSh0bHNTZXR0aW5ncykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGV4cG9ydHMudGxzUG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IGFzeW5jIChyZXEsIG5leHQpID0+IHtcbiAgICAgICAgICAgIC8vIFVzZXJzIG1heSBkZWZpbmUgYSByZXF1ZXN0IHRsc1NldHRpbmdzLCBob25vciB0aG9zZSBvdmVyIHRoZSBjbGllbnQgbGV2ZWwgb25lXG4gICAgICAgICAgICBpZiAoIXJlcS50bHNTZXR0aW5ncykge1xuICAgICAgICAgICAgICAgIHJlcS50bHNTZXR0aW5ncyA9IHRsc1NldHRpbmdzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGxzUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/tlsPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/userAgentPolicy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/userAgentPolicy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.userAgentPolicyName = void 0;\nexports.userAgentPolicy = userAgentPolicy;\nconst userAgent_js_1 = __webpack_require__(/*! ../util/userAgent.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgent.js\");\nconst UserAgentHeaderName = (0, userAgent_js_1.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexports.userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0, userAgent_js_1.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: exports.userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3BvbGljaWVzL3VzZXJBZ2VudFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLHVCQUF1QjtBQUN2Qix1QkFBdUIsbUJBQU8sQ0FBQyw0R0FBc0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccG9saWNpZXNcXHVzZXJBZ2VudFBvbGljeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51c2VyQWdlbnRQb2xpY3lOYW1lID0gdm9pZCAwO1xuZXhwb3J0cy51c2VyQWdlbnRQb2xpY3kgPSB1c2VyQWdlbnRQb2xpY3k7XG5jb25zdCB1c2VyQWdlbnRfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL3VzZXJBZ2VudC5qc1wiKTtcbmNvbnN0IFVzZXJBZ2VudEhlYWRlck5hbWUgPSAoMCwgdXNlckFnZW50X2pzXzEuZ2V0VXNlckFnZW50SGVhZGVyTmFtZSkoKTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSB1c2VyQWdlbnRQb2xpY3kuXG4gKi9cbmV4cG9ydHMudXNlckFnZW50UG9saWN5TmFtZSA9IFwidXNlckFnZW50UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgc2V0cyB0aGUgVXNlci1BZ2VudCBoZWFkZXIgKG9yIGVxdWl2YWxlbnQpIHRvIHJlZmxlY3RcbiAqIHRoZSBsaWJyYXJ5IHZlcnNpb24uXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY3VzdG9taXplIHRoZSB1c2VyIGFnZW50IHZhbHVlLlxuICovXG5mdW5jdGlvbiB1c2VyQWdlbnRQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgdXNlckFnZW50VmFsdWUgPSAoMCwgdXNlckFnZW50X2pzXzEuZ2V0VXNlckFnZW50VmFsdWUpKG9wdGlvbnMudXNlckFnZW50UHJlZml4KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBleHBvcnRzLnVzZXJBZ2VudFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5oZWFkZXJzLmhhcyhVc2VyQWdlbnRIZWFkZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5zZXQoVXNlckFnZW50SGVhZGVyTmFtZSwgYXdhaXQgdXNlckFnZW50VmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJBZ2VudFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/policies/userAgentPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RestError = void 0;\nexports.isRestError = isRestError;\nconst error_js_1 = __webpack_require__(/*! ./util/error.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/error.js\");\nconst inspect_js_1 = __webpack_require__(/*! ./util/inspect.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/inspect.js\");\nconst sanitizer_js_1 = __webpack_require__(/*! ./util/sanitizer.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js\");\nconst errorSanitizer = new sanitizer_js_1.Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        // The request and response may contain sensitive information in the headers or body.\n        // To help prevent this sensitive information being accidentally logged, the request and response\n        // properties are marked as non-enumerable here. This prevents them showing up in the output of\n        // JSON.stringify and console.log.\n        Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n        Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n        // Logging method for util.inspect in Node\n        Object.defineProperty(this, inspect_js_1.custom, {\n            value: () => {\n                // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n                // response get sanitized.\n                return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(Object.assign(Object.assign({}, this), { request: this.request, response: this.response }))}`;\n            },\n            enumerable: false,\n        });\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n}\nexports.RestError = RestError;\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nfunction isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return (0, error_js_1.isError)(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3Jlc3RFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLG1CQUFtQjtBQUNuQixtQkFBbUIsbUJBQU8sQ0FBQyxtR0FBaUI7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsdUdBQW1CO0FBQ2hELHVCQUF1QixtQkFBTyxDQUFDLDJHQUFxQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsMkNBQTJDO0FBQzVGLGtEQUFrRCw0Q0FBNEM7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxjQUFjLEtBQUssc0RBQXNELFdBQVcsZ0RBQWdELEdBQUc7QUFDNUssYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccmVzdEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlc3RFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMuaXNSZXN0RXJyb3IgPSBpc1Jlc3RFcnJvcjtcbmNvbnN0IGVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi91dGlsL2Vycm9yLmpzXCIpO1xuY29uc3QgaW5zcGVjdF9qc18xID0gcmVxdWlyZShcIi4vdXRpbC9pbnNwZWN0LmpzXCIpO1xuY29uc3Qgc2FuaXRpemVyX2pzXzEgPSByZXF1aXJlKFwiLi91dGlsL3Nhbml0aXplci5qc1wiKTtcbmNvbnN0IGVycm9yU2FuaXRpemVyID0gbmV3IHNhbml0aXplcl9qc18xLlNhbml0aXplcigpO1xuLyoqXG4gKiBBIGN1c3RvbSBlcnJvciB0eXBlIGZvciBmYWlsZWQgcGlwZWxpbmUgcmVxdWVzdHMuXG4gKi9cbmNsYXNzIFJlc3RFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiUmVzdEVycm9yXCI7XG4gICAgICAgIHRoaXMuY29kZSA9IG9wdGlvbnMuY29kZTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gb3B0aW9ucy5zdGF0dXNDb2RlO1xuICAgICAgICAvLyBUaGUgcmVxdWVzdCBhbmQgcmVzcG9uc2UgbWF5IGNvbnRhaW4gc2Vuc2l0aXZlIGluZm9ybWF0aW9uIGluIHRoZSBoZWFkZXJzIG9yIGJvZHkuXG4gICAgICAgIC8vIFRvIGhlbHAgcHJldmVudCB0aGlzIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBiZWluZyBhY2NpZGVudGFsbHkgbG9nZ2VkLCB0aGUgcmVxdWVzdCBhbmQgcmVzcG9uc2VcbiAgICAgICAgLy8gcHJvcGVydGllcyBhcmUgbWFya2VkIGFzIG5vbi1lbnVtZXJhYmxlIGhlcmUuIFRoaXMgcHJldmVudHMgdGhlbSBzaG93aW5nIHVwIGluIHRoZSBvdXRwdXQgb2ZcbiAgICAgICAgLy8gSlNPTi5zdHJpbmdpZnkgYW5kIGNvbnNvbGUubG9nLlxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyZXF1ZXN0XCIsIHsgdmFsdWU6IG9wdGlvbnMucmVxdWVzdCwgZW51bWVyYWJsZTogZmFsc2UgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJlc3BvbnNlXCIsIHsgdmFsdWU6IG9wdGlvbnMucmVzcG9uc2UsIGVudW1lcmFibGU6IGZhbHNlIH0pO1xuICAgICAgICAvLyBMb2dnaW5nIG1ldGhvZCBmb3IgdXRpbC5pbnNwZWN0IGluIE5vZGVcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIGluc3BlY3RfanNfMS5jdXN0b20sIHtcbiAgICAgICAgICAgIHZhbHVlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGFuZCBhZGQgdGhlbSBiYWNrLiBUaGlzIGlzIE9LIHNpbmNlIGluIHRoaXMgb3V0cHV0IHRoZSByZXF1ZXN0IGFuZFxuICAgICAgICAgICAgICAgIC8vIHJlc3BvbnNlIGdldCBzYW5pdGl6ZWQuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGBSZXN0RXJyb3I6ICR7dGhpcy5tZXNzYWdlfSBcXG4gJHtlcnJvclNhbml0aXplci5zYW5pdGl6ZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMpLCB7IHJlcXVlc3Q6IHRoaXMucmVxdWVzdCwgcmVzcG9uc2U6IHRoaXMucmVzcG9uc2UgfSkpfWA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUmVzdEVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXN0RXJyb3IgPSBSZXN0RXJyb3I7XG4vKipcbiAqIFNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gbWFraW5nIHRoZSByZXF1ZXN0LlxuICogVGhpcyBtZWFucyB0aGUgYWN0dWFsIHJlcXVlc3QgZmFpbGVkIGZvciBzb21lIHJlYXNvbixcbiAqIHN1Y2ggYXMgYSBETlMgaXNzdWUgb3IgdGhlIGNvbm5lY3Rpb24gYmVpbmcgbG9zdC5cbiAqL1xuUmVzdEVycm9yLlJFUVVFU1RfU0VORF9FUlJPUiA9IFwiUkVRVUVTVF9TRU5EX0VSUk9SXCI7XG4vKipcbiAqIFRoaXMgbWVhbnMgdGhhdCBwYXJzaW5nIHRoZSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIgZmFpbGVkLlxuICogSXQgbWF5IGhhdmUgYmVlbiBtYWxmb3JtZWQuXG4gKi9cblJlc3RFcnJvci5QQVJTRV9FUlJPUiA9IFwiUEFSU0VfRVJST1JcIjtcbi8qKlxuICogVHlwZWd1YXJkIGZvciBSZXN0RXJyb3JcbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIGNhdWdodCBieSBhIGNhdGNoIGNsYXVzZS5cbiAqL1xuZnVuY3Rpb24gaXNSZXN0RXJyb3IoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgUmVzdEVycm9yKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGVycm9yX2pzXzEuaXNFcnJvcikoZSkgJiYgZS5uYW1lID09PSBcIlJlc3RFcnJvclwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/restError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialRetryStrategy = exponentialRetryStrategy;\nexports.isExponentialRetryResponse = isExponentialRetryResponse;\nexports.isSystemError = isSystemError;\nconst delay_js_1 = __webpack_require__(/*! ../util/delay.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/delay.js\");\nconst throttlingRetryStrategy_js_1 = __webpack_require__(/*! ./throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js\");\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nfunction exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && ((0, throttlingRetryStrategy_js_1.isThrottlingRetryResponse)(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            return (0, delay_js_1.calculateRetryDelay)(retryCount, {\n                retryDelayInMs: retryInterval,\n                maxRetryDelayInMs: maxRetryInterval,\n            });\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nfunction isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nfunction isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMscUJBQXFCO0FBQ3JCLG1CQUFtQixtQkFBTyxDQUFDLG9HQUFrQjtBQUM3QyxxQ0FBcUMsbUJBQU8sQ0FBQyw2SUFBOEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFDQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xccmV0cnlTdHJhdGVnaWVzXFxleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5ID0gZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5O1xuZXhwb3J0cy5pc0V4cG9uZW50aWFsUmV0cnlSZXNwb25zZSA9IGlzRXhwb25lbnRpYWxSZXRyeVJlc3BvbnNlO1xuZXhwb3J0cy5pc1N5c3RlbUVycm9yID0gaXNTeXN0ZW1FcnJvcjtcbmNvbnN0IGRlbGF5X2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9kZWxheS5qc1wiKTtcbmNvbnN0IHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5X2pzXzEgPSByZXF1aXJlKFwiLi90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qc1wiKTtcbi8vIGludGVydmFscyBhcmUgaW4gbWlsbGlzZWNvbmRzXG5jb25zdCBERUZBVUxUX0NMSUVOVF9SRVRSWV9JTlRFUlZBTCA9IDEwMDA7XG5jb25zdCBERUZBVUxUX0NMSUVOVF9NQVhfUkVUUllfSU5URVJWQUwgPSAxMDAwICogNjQ7XG4vKipcbiAqIEEgcmV0cnkgc3RyYXRlZ3kgdGhhdCByZXRyaWVzIHdpdGggYW4gZXhwb25lbnRpYWxseSBpbmNyZWFzaW5nIGRlbGF5IGluIHRoZXNlIHR3byBjYXNlczpcbiAqIC0gV2hlbiB0aGVyZSBhcmUgZXJyb3JzIGluIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKS5cbiAqIC0gT3Igb3RoZXJ3aXNlIGlmIHRoZSBvdXRnb2luZyByZXF1ZXN0IGZhaWxzICg0MDgsIGdyZWF0ZXIgb3IgZXF1YWwgdGhhbiA1MDAsIGV4Y2VwdCBmb3IgNTAxIGFuZCA1MDUpLlxuICovXG5mdW5jdGlvbiBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCByZXRyeUludGVydmFsID0gKF9hID0gb3B0aW9ucy5yZXRyeURlbGF5SW5NcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogREVGQVVMVF9DTElFTlRfUkVUUllfSU5URVJWQUw7XG4gICAgY29uc3QgbWF4UmV0cnlJbnRlcnZhbCA9IChfYiA9IG9wdGlvbnMubWF4UmV0cnlEZWxheUluTXMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IERFRkFVTFRfQ0xJRU5UX01BWF9SRVRSWV9JTlRFUlZBTDtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBcImV4cG9uZW50aWFsUmV0cnlTdHJhdGVneVwiLFxuICAgICAgICByZXRyeSh7IHJldHJ5Q291bnQsIHJlc3BvbnNlLCByZXNwb25zZUVycm9yIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoZWRTeXN0ZW1FcnJvciA9IGlzU3lzdGVtRXJyb3IocmVzcG9uc2VFcnJvcik7XG4gICAgICAgICAgICBjb25zdCBpZ25vcmVTeXN0ZW1FcnJvcnMgPSBtYXRjaGVkU3lzdGVtRXJyb3IgJiYgb3B0aW9ucy5pZ25vcmVTeXN0ZW1FcnJvcnM7XG4gICAgICAgICAgICBjb25zdCBpc0V4cG9uZW50aWFsID0gaXNFeHBvbmVudGlhbFJldHJ5UmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgICAgICAgY29uc3QgaWdub3JlRXhwb25lbnRpYWxSZXNwb25zZSA9IGlzRXhwb25lbnRpYWwgJiYgb3B0aW9ucy5pZ25vcmVIdHRwU3RhdHVzQ29kZXM7XG4gICAgICAgICAgICBjb25zdCB1bmtub3duUmVzcG9uc2UgPSByZXNwb25zZSAmJiAoKDAsIHRocm90dGxpbmdSZXRyeVN0cmF0ZWd5X2pzXzEuaXNUaHJvdHRsaW5nUmV0cnlSZXNwb25zZSkocmVzcG9uc2UpIHx8ICFpc0V4cG9uZW50aWFsKTtcbiAgICAgICAgICAgIGlmICh1bmtub3duUmVzcG9uc2UgfHwgaWdub3JlRXhwb25lbnRpYWxSZXNwb25zZSB8fCBpZ25vcmVTeXN0ZW1FcnJvcnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBza2lwU3RyYXRlZ3k6IHRydWUgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXNwb25zZUVycm9yICYmICFtYXRjaGVkU3lzdGVtRXJyb3IgJiYgIWlzRXhwb25lbnRpYWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvclRvVGhyb3c6IHJlc3BvbnNlRXJyb3IgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoMCwgZGVsYXlfanNfMS5jYWxjdWxhdGVSZXRyeURlbGF5KShyZXRyeUNvdW50LCB7XG4gICAgICAgICAgICAgICAgcmV0cnlEZWxheUluTXM6IHJldHJ5SW50ZXJ2YWwsXG4gICAgICAgICAgICAgICAgbWF4UmV0cnlEZWxheUluTXM6IG1heFJldHJ5SW50ZXJ2YWwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgcmV0cnkgcmVzcG9uc2UgaWYgaXQgaGFzIHN0YXR1cyBjb2RlczpcbiAqIC0gNDA4LCBvclxuICogLSBHcmVhdGVyIG9yIGVxdWFsIHRoYW4gNTAwLCBleGNlcHQgZm9yIDUwMSBhbmQgNTA1LlxuICovXG5mdW5jdGlvbiBpc0V4cG9uZW50aWFsUmV0cnlSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiBCb29sZWFuKHJlc3BvbnNlICYmXG4gICAgICAgIHJlc3BvbnNlLnN0YXR1cyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIChyZXNwb25zZS5zdGF0dXMgPj0gNTAwIHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA4KSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwMSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwNSk7XG59XG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhbiBlcnJvciBmcm9tIGEgcGlwZWxpbmUgcmVzcG9uc2Ugd2FzIHRyaWdnZXJlZCBpbiB0aGUgbmV0d29yayBsYXllci5cbiAqL1xuZnVuY3Rpb24gaXNTeXN0ZW1FcnJvcihlcnIpIHtcbiAgICBpZiAoIWVycikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiAoZXJyLmNvZGUgPT09IFwiRVRJTUVET1VUXCIgfHxcbiAgICAgICAgZXJyLmNvZGUgPT09IFwiRVNPQ0tFVFRJTUVET1VUXCIgfHxcbiAgICAgICAgZXJyLmNvZGUgPT09IFwiRUNPTk5SRUZVU0VEXCIgfHxcbiAgICAgICAgZXJyLmNvZGUgPT09IFwiRUNPTk5SRVNFVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVOT0VOVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVOT1RGT1VORFwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9uZW50aWFsUmV0cnlTdHJhdGVneS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/exponentialRetryStrategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isThrottlingRetryResponse = isThrottlingRetryResponse;\nexports.throttlingRetryStrategy = throttlingRetryStrategy;\nconst helpers_js_1 = __webpack_require__(/*! ../util/helpers.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/helpers.js\");\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = (0, helpers_js_1.parseHeaderValueAsNumber)(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nfunction isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nfunction throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3JldHJ5U3RyYXRlZ2llcy90aHJvdHRsaW5nUmV0cnlTdHJhdGVneS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLCtCQUErQjtBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyx3R0FBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVU7QUFDMUI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHJldHJ5U3RyYXRlZ2llc1xcdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNUaHJvdHRsaW5nUmV0cnlSZXNwb25zZSA9IGlzVGhyb3R0bGluZ1JldHJ5UmVzcG9uc2U7XG5leHBvcnRzLnRocm90dGxpbmdSZXRyeVN0cmF0ZWd5ID0gdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3k7XG5jb25zdCBoZWxwZXJzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9oZWxwZXJzLmpzXCIpO1xuLyoqXG4gKiBUaGUgaGVhZGVyIHRoYXQgY29tZXMgYmFjayBmcm9tIHNlcnZpY2VzIHJlcHJlc2VudGluZ1xuICogdGhlIGFtb3VudCBvZiB0aW1lIChtaW5pbXVtKSB0byB3YWl0IHRvIHJldHJ5IChpbiBzZWNvbmRzIG9yIHRpbWVzdGFtcCBhZnRlciB3aGljaCB3ZSBjYW4gcmV0cnkpLlxuICovXG5jb25zdCBSZXRyeUFmdGVySGVhZGVyID0gXCJSZXRyeS1BZnRlclwiO1xuLyoqXG4gKiBUaGUgaGVhZGVycyB0aGF0IGNvbWUgYmFjayBmcm9tIHNlcnZpY2VzIHJlcHJlc2VudGluZ1xuICogdGhlIGFtb3VudCBvZiB0aW1lIChtaW5pbXVtKSB0byB3YWl0IHRvIHJldHJ5LlxuICpcbiAqIFwicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgOiBtaWxsaXNlY29uZHNcbiAqIFwiUmV0cnktQWZ0ZXJcIiA6IHNlY29uZHMgb3IgdGltZXN0YW1wXG4gKi9cbmNvbnN0IEFsbFJldHJ5QWZ0ZXJIZWFkZXJzID0gW1wicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIsIFJldHJ5QWZ0ZXJIZWFkZXJdO1xuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgdGhyb3R0bGluZyByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgYSB0aHJvdHRsaW5nIHN0YXR1cyBjb2RlICg0Mjkgb3IgNTAzKSxcbiAqIGFzIGxvbmcgYXMgb25lIG9mIHRoZSBbIFwiUmV0cnktQWZ0ZXJcIiBvciBcInJldHJ5LWFmdGVyLW1zXCIgb3IgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgXSBoZWFkZXJzIGhhcyBhIHZhbGlkIHZhbHVlLlxuICpcbiAqIFJldHVybnMgdGhlIGByZXRyeUFmdGVySW5Nc2AgdmFsdWUgaWYgdGhlIHJlc3BvbnNlIGlzIGEgdGhyb3R0bGluZyByZXRyeSByZXNwb25zZS5cbiAqIElmIG5vdCB0aHJvdHRsaW5nIHJldHJ5IHJlc3BvbnNlLCByZXR1cm5zIGB1bmRlZmluZWRgLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBnZXRSZXRyeUFmdGVySW5NcyhyZXNwb25zZSkge1xuICAgIGlmICghKHJlc3BvbnNlICYmIFs0MjksIDUwM10uaW5jbHVkZXMocmVzcG9uc2Uuc3RhdHVzKSkpXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gSGVhZGVyczogXCJyZXRyeS1hZnRlci1tc1wiLCBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiwgXCJSZXRyeS1BZnRlclwiXG4gICAgICAgIGZvciAoY29uc3QgaGVhZGVyIG9mIEFsbFJldHJ5QWZ0ZXJIZWFkZXJzKSB7XG4gICAgICAgICAgICBjb25zdCByZXRyeUFmdGVyVmFsdWUgPSAoMCwgaGVscGVyc19qc18xLnBhcnNlSGVhZGVyVmFsdWVBc051bWJlcikocmVzcG9uc2UsIGhlYWRlcik7XG4gICAgICAgICAgICBpZiAocmV0cnlBZnRlclZhbHVlID09PSAwIHx8IHJldHJ5QWZ0ZXJWYWx1ZSkge1xuICAgICAgICAgICAgICAgIC8vIFwiUmV0cnktQWZ0ZXJcIiBoZWFkZXIgPT0+IHNlY29uZHNcbiAgICAgICAgICAgICAgICAvLyBcInJldHJ5LWFmdGVyLW1zXCIsIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIGhlYWRlcnMgPT0+IG1pbGxpLXNlY29uZHNcbiAgICAgICAgICAgICAgICBjb25zdCBtdWx0aXBseWluZ0ZhY3RvciA9IGhlYWRlciA9PT0gUmV0cnlBZnRlckhlYWRlciA/IDEwMDAgOiAxO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXRyeUFmdGVyVmFsdWUgKiBtdWx0aXBseWluZ0ZhY3RvcjsgLy8gaW4gbWlsbGktc2Vjb25kc1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFJldHJ5QWZ0ZXJIZWFkZXIgKFwiUmV0cnktQWZ0ZXJcIikgaGFzIGEgc3BlY2lhbCBjYXNlIHdoZXJlIGl0IG1pZ2h0IGJlIGZvcm1hdHRlZCBhcyBhIGRhdGUgaW5zdGVhZCBvZiBhIG51bWJlciBvZiBzZWNvbmRzXG4gICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJIZWFkZXIgPSByZXNwb25zZS5oZWFkZXJzLmdldChSZXRyeUFmdGVySGVhZGVyKTtcbiAgICAgICAgaWYgKCFyZXRyeUFmdGVySGVhZGVyKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBkYXRlID0gRGF0ZS5wYXJzZShyZXRyeUFmdGVySGVhZGVyKTtcbiAgICAgICAgY29uc3QgZGlmZiA9IGRhdGUgLSBEYXRlLm5vdygpO1xuICAgICAgICAvLyBuZWdhdGl2ZSBkaWZmIHdvdWxkIG1lYW4gYSBkYXRlIGluIHRoZSBwYXN0LCBzbyByZXRyeSBhc2FwIHdpdGggMCBtaWxsaXNlY29uZHNcbiAgICAgICAgcmV0dXJuIE51bWJlci5pc0Zpbml0ZShkaWZmKSA/IE1hdGgubWF4KDAsIGRpZmYpIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG4vKipcbiAqIEEgcmVzcG9uc2UgaXMgYSByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgYSB0aHJvdHRsaW5nIHN0YXR1cyBjb2RlICg0Mjkgb3IgNTAzKSxcbiAqIGFzIGxvbmcgYXMgb25lIG9mIHRoZSBbIFwiUmV0cnktQWZ0ZXJcIiBvciBcInJldHJ5LWFmdGVyLW1zXCIgb3IgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgXSBoZWFkZXJzIGhhcyBhIHZhbGlkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBpc1Rocm90dGxpbmdSZXRyeVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIE51bWJlci5pc0Zpbml0ZShnZXRSZXRyeUFmdGVySW5NcyhyZXNwb25zZSkpO1xufVxuZnVuY3Rpb24gdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogXCJ0aHJvdHRsaW5nUmV0cnlTdHJhdGVneVwiLFxuICAgICAgICByZXRyeSh7IHJlc3BvbnNlIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJJbk1zID0gZ2V0UmV0cnlBZnRlckluTXMocmVzcG9uc2UpO1xuICAgICAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUocmV0cnlBZnRlckluTXMpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgc2tpcFN0cmF0ZWd5OiB0cnVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHJ5QWZ0ZXJJbk1zLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/retryStrategies/throttlingRetryStrategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.uint8ArrayToString = uint8ArrayToString;\nexports.stringToUint8Array = stringToUint8Array;\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvYnl0ZXNFbmNvZGluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcYnl0ZXNFbmNvZGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51aW50OEFycmF5VG9TdHJpbmcgPSB1aW50OEFycmF5VG9TdHJpbmc7XG5leHBvcnRzLnN0cmluZ1RvVWludDhBcnJheSA9IHN0cmluZ1RvVWludDhBcnJheTtcbi8qKlxuICogVGhlIGhlbHBlciB0aGF0IHRyYW5zZm9ybXMgYnl0ZXMgd2l0aCBzcGVjaWZpYyBjaGFyYWN0ZXIgZW5jb2RpbmcgaW50byBzdHJpbmdcbiAqIEBwYXJhbSBieXRlcyAtIHRoZSB1aW50OGFycmF5IGJ5dGVzXG4gKiBAcGFyYW0gZm9ybWF0IC0gdGhlIGZvcm1hdCB3ZSB1c2UgdG8gZW5jb2RlIHRoZSBieXRlXG4gKiBAcmV0dXJucyBhIHN0cmluZyBvZiB0aGUgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gdWludDhBcnJheVRvU3RyaW5nKGJ5dGVzLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKGZvcm1hdCk7XG59XG4vKipcbiAqIFRoZSBoZWxwZXIgdGhhdCB0cmFuc2Zvcm1zIHN0cmluZyB0byBzcGVjaWZpYyBjaGFyYWN0ZXIgZW5jb2RlZCBieXRlcyBhcnJheS5cbiAqIEBwYXJhbSB2YWx1ZSAtIHRoZSBzdHJpbmcgdG8gYmUgY29udmVydGVkXG4gKiBAcGFyYW0gZm9ybWF0IC0gdGhlIGZvcm1hdCB3ZSB1c2UgdG8gZGVjb2RlIHRoZSB2YWx1ZVxuICogQHJldHVybnMgYSB1aW50OGFycmF5XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvVWludDhBcnJheSh2YWx1ZSwgZm9ybWF0KSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBmb3JtYXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXNFbmNvZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isReactNative = exports.isNodeRuntime = exports.isNodeLike = exports.isBun = exports.isDeno = exports.isWebWorker = exports.isBrowser = void 0;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexports.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexports.isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexports.isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexports.isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexports.isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexports.isNodeRuntime = exports.isNodeLike && !exports.isBun && !exports.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexports.isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvY2hlY2tFbnZpcm9ubWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxxQkFBcUIsR0FBRyxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsY0FBYyxHQUFHLG1CQUFtQixHQUFHLGlCQUFpQjtBQUM3STtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcY2hlY2tFbnZpcm9ubWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxudmFyIF9hLCBfYiwgX2MsIF9kO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlYWN0TmF0aXZlID0gZXhwb3J0cy5pc05vZGVSdW50aW1lID0gZXhwb3J0cy5pc05vZGVMaWtlID0gZXhwb3J0cy5pc0J1biA9IGV4cG9ydHMuaXNEZW5vID0gZXhwb3J0cy5pc1dlYldvcmtlciA9IGV4cG9ydHMuaXNCcm93c2VyID0gdm9pZCAwO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgQnJvd3Nlci5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhenVyZS9henVyZS1zZGsvdHMtbm8td2luZG93XG5leHBvcnRzLmlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIjtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgV2ViIFdvcmtlci5cbiAqL1xuZXhwb3J0cy5pc1dlYldvcmtlciA9IHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiICYmXG4gICAgdHlwZW9mIChzZWxmID09PSBudWxsIHx8IHNlbGYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlbGYuaW1wb3J0U2NyaXB0cykgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICgoKF9hID0gc2VsZi5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpID09PSBcIkRlZGljYXRlZFdvcmtlckdsb2JhbFNjb3BlXCIgfHxcbiAgICAgICAgKChfYiA9IHNlbGYuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5uYW1lKSA9PT0gXCJTZXJ2aWNlV29ya2VyR2xvYmFsU2NvcGVcIiB8fFxuICAgICAgICAoKF9jID0gc2VsZi5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLm5hbWUpID09PSBcIlNoYXJlZFdvcmtlckdsb2JhbFNjb3BlXCIpO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgRGVuby5cbiAqL1xuZXhwb3J0cy5pc0Rlbm8gPSB0eXBlb2YgRGVubyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBEZW5vLnZlcnNpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgRGVuby52ZXJzaW9uLmRlbm8gIT09IFwidW5kZWZpbmVkXCI7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBCdW4uc2guXG4gKi9cbmV4cG9ydHMuaXNCdW4gPSB0eXBlb2YgQnVuICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBCdW4udmVyc2lvbiAhPT0gXCJ1bmRlZmluZWRcIjtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgTm9kZS5qcyBjb21wYXRpYmxlIGVudmlyb25tZW50LlxuICovXG5leHBvcnRzLmlzTm9kZUxpa2UgPSB0eXBlb2YgZ2xvYmFsVGhpcy5wcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgQm9vbGVhbihnbG9iYWxUaGlzLnByb2Nlc3MudmVyc2lvbikgJiZcbiAgICBCb29sZWFuKChfZCA9IGdsb2JhbFRoaXMucHJvY2Vzcy52ZXJzaW9ucykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLm5vZGUpO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgTm9kZS5KUy5cbiAqL1xuZXhwb3J0cy5pc05vZGVSdW50aW1lID0gZXhwb3J0cy5pc05vZGVMaWtlICYmICFleHBvcnRzLmlzQnVuICYmICFleHBvcnRzLmlzRGVubztcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGluIFJlYWN0LU5hdGl2ZS5cbiAqL1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9ibG9iL21haW4vcGFja2FnZXMvcmVhY3QtbmF0aXZlL0xpYnJhcmllcy9Db3JlL3NldFVwTmF2aWdhdG9yLmpzXG5leHBvcnRzLmlzUmVhY3ROYXRpdmUgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiICYmIChuYXZpZ2F0b3IgPT09IG51bGwgfHwgbmF2aWdhdG9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuYXZpZ2F0b3IucHJvZHVjdCkgPT09IFwiUmVhY3ROYXRpdmVcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrRW52aXJvbm1lbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/concat.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/concat.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.concat = concat;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst typeGuards_js_1 = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js\");\nfunction streamAsyncIterator() {\n    return tslib_1.__asyncGenerator(this, arguments, function* streamAsyncIterator_1() {\n        const reader = this.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield tslib_1.__await(reader.read());\n                if (done) {\n                    return yield tslib_1.__await(void 0);\n                }\n                yield yield tslib_1.__await(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = streamAsyncIterator.bind(webStream);\n    }\n}\nfunction ensureNodeStream(stream) {\n    if (stream instanceof ReadableStream) {\n        makeAsyncIterable(stream);\n        return stream_1.Readable.fromWeb(stream);\n    }\n    else {\n        return stream;\n    }\n}\nfunction toStream(source) {\n    if (source instanceof Uint8Array) {\n        return stream_1.Readable.from(Buffer.from(source));\n    }\n    else if ((0, typeGuards_js_1.isBlob)(source)) {\n        return ensureNodeStream(source.stream());\n    }\n    else {\n        return ensureNodeStream(source);\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nasync function concat(sources) {\n    return function () {\n        const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n        return stream_1.Readable.from((function () {\n            return tslib_1.__asyncGenerator(this, arguments, function* () {\n                var _a, e_1, _b, _c;\n                for (const stream of streams) {\n                    try {\n                        for (var _d = true, stream_2 = (e_1 = void 0, tslib_1.__asyncValues(stream)), stream_2_1; stream_2_1 = yield tslib_1.__await(stream_2.next()), _a = stream_2_1.done, !_a; _d = true) {\n                            _c = stream_2_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            yield yield tslib_1.__await(chunk);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = stream_2.return)) yield tslib_1.__await(_b.call(stream_2));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            });\n        })());\n    };\n}\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvY29uY2F0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsd0JBQXdCLG1CQUFPLENBQUMsd0dBQWlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsY0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrSEFBa0gsZ0ZBQWdGO0FBQ2xNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxRQUFRO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcY29uY2F0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbmNhdCA9IGNvbmNhdDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJzdHJlYW1cIik7XG5jb25zdCB0eXBlR3VhcmRzX2pzXzEgPSByZXF1aXJlKFwiLi90eXBlR3VhcmRzLmpzXCIpO1xuZnVuY3Rpb24gc3RyZWFtQXN5bmNJdGVyYXRvcigpIHtcbiAgICByZXR1cm4gdHNsaWJfMS5fX2FzeW5jR2VuZXJhdG9yKHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24qIHN0cmVhbUFzeW5jSXRlcmF0b3JfMSgpIHtcbiAgICAgICAgY29uc3QgcmVhZGVyID0gdGhpcy5nZXRSZWFkZXIoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkb25lLCB2YWx1ZSB9ID0geWllbGQgdHNsaWJfMS5fX2F3YWl0KHJlYWRlci5yZWFkKCkpO1xuICAgICAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB5aWVsZCB0c2xpYl8xLl9fYXdhaXQodm9pZCAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgeWllbGQgeWllbGQgdHNsaWJfMS5fX2F3YWl0KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBtYWtlQXN5bmNJdGVyYWJsZSh3ZWJTdHJlYW0pIHtcbiAgICBpZiAoIXdlYlN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pIHtcbiAgICAgICAgd2ViU3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IHN0cmVhbUFzeW5jSXRlcmF0b3IuYmluZCh3ZWJTdHJlYW0pO1xuICAgIH1cbiAgICBpZiAoIXdlYlN0cmVhbS52YWx1ZXMpIHtcbiAgICAgICAgd2ViU3RyZWFtLnZhbHVlcyA9IHN0cmVhbUFzeW5jSXRlcmF0b3IuYmluZCh3ZWJTdHJlYW0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGVuc3VyZU5vZGVTdHJlYW0oc3RyZWFtKSB7XG4gICAgaWYgKHN0cmVhbSBpbnN0YW5jZW9mIFJlYWRhYmxlU3RyZWFtKSB7XG4gICAgICAgIG1ha2VBc3luY0l0ZXJhYmxlKHN0cmVhbSk7XG4gICAgICAgIHJldHVybiBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tV2ViKHN0cmVhbSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gc3RyZWFtO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHRvU3RyZWFtKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKEJ1ZmZlci5mcm9tKHNvdXJjZSkpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgdHlwZUd1YXJkc19qc18xLmlzQmxvYikoc291cmNlKSkge1xuICAgICAgICByZXR1cm4gZW5zdXJlTm9kZVN0cmVhbShzb3VyY2Uuc3RyZWFtKCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVuc3VyZU5vZGVTdHJlYW0oc291cmNlKTtcbiAgICB9XG59XG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gdGhhdCBjb25jYXRlbmF0ZXMgYSBzZXQgb2YgYmluYXJ5IGlucHV0cyBpbnRvIG9uZSBjb21iaW5lZCBvdXRwdXQuXG4gKlxuICogQHBhcmFtIHNvdXJjZXMgLSBhcnJheSBvZiBzb3VyY2VzIGZvciB0aGUgY29uY2F0ZW5hdGlvblxuICogQHJldHVybnMgLSBpbiBOb2RlLCBhICgoKSA9XFw+IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSkgd2hpY2gsIHdoZW4gcmVhZCwgcHJvZHVjZXMgYSBjb25jYXRlbmF0aW9uIG9mIGFsbCB0aGUgaW5wdXRzLlxuICogICAgICAgICAgIEluIGJyb3dzZXIsIHJldHVybnMgYSBgQmxvYmAgcmVwcmVzZW50aW5nIGFsbCB0aGUgY29uY2F0ZW5hdGVkIGlucHV0cy5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29uY2F0KHNvdXJjZXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBzdHJlYW1zID0gc291cmNlcy5tYXAoKHgpID0+ICh0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCgpIDogeCkpLm1hcCh0b1N0cmVhbSk7XG4gICAgICAgIHJldHVybiBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2FzeW5jR2VuZXJhdG9yKHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIGVfMSwgX2IsIF9jO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc3RyZWFtIG9mIHN0cmVhbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9kID0gdHJ1ZSwgc3RyZWFtXzIgPSAoZV8xID0gdm9pZCAwLCB0c2xpYl8xLl9fYXN5bmNWYWx1ZXMoc3RyZWFtKSksIHN0cmVhbV8yXzE7IHN0cmVhbV8yXzEgPSB5aWVsZCB0c2xpYl8xLl9fYXdhaXQoc3RyZWFtXzIubmV4dCgpKSwgX2EgPSBzdHJlYW1fMl8xLmRvbmUsICFfYTsgX2QgPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MgPSBzdHJlYW1fMl8xLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSBfYztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCB5aWVsZCB0c2xpYl8xLl9fYXdhaXQoY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgICAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIV9kICYmICFfYSAmJiAoX2IgPSBzdHJlYW1fMi5yZXR1cm4pKSB5aWVsZCB0c2xpYl8xLl9fYXdhaXQoX2IuY2FsbChzdHJlYW1fMikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKCkpO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25jYXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/concat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/delay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/delay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateRetryDelay = calculateRetryDelay;\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/random.js\");\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nfunction calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + (0, random_js_1.getRandomIntegerInclusive)(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvZGVsYXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixvQkFBb0IsbUJBQU8sQ0FBQyxnR0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHV0aWxcXGRlbGF5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbGN1bGF0ZVJldHJ5RGVsYXkgPSBjYWxjdWxhdGVSZXRyeURlbGF5O1xuY29uc3QgcmFuZG9tX2pzXzEgPSByZXF1aXJlKFwiLi9yYW5kb20uanNcIik7XG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGRlbGF5IGludGVydmFsIGZvciByZXRyeSBhdHRlbXB0cyB1c2luZyBleHBvbmVudGlhbCBkZWxheSB3aXRoIGppdHRlci5cbiAqIEBwYXJhbSByZXRyeUF0dGVtcHQgLSBUaGUgY3VycmVudCByZXRyeSBhdHRlbXB0IG51bWJlci5cbiAqIEBwYXJhbSBjb25maWcgLSBUaGUgZXhwb25lbnRpYWwgcmV0cnkgY29uZmlndXJhdGlvbi5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBjYWxjdWxhdGVkIHJldHJ5IGRlbGF5LlxuICovXG5mdW5jdGlvbiBjYWxjdWxhdGVSZXRyeURlbGF5KHJldHJ5QXR0ZW1wdCwgY29uZmlnKSB7XG4gICAgLy8gRXhwb25lbnRpYWxseSBpbmNyZWFzZSB0aGUgZGVsYXkgZWFjaCB0aW1lXG4gICAgY29uc3QgZXhwb25lbnRpYWxEZWxheSA9IGNvbmZpZy5yZXRyeURlbGF5SW5NcyAqIE1hdGgucG93KDIsIHJldHJ5QXR0ZW1wdCk7XG4gICAgLy8gRG9uJ3QgbGV0IHRoZSBkZWxheSBleGNlZWQgdGhlIG1heGltdW1cbiAgICBjb25zdCBjbGFtcGVkRGVsYXkgPSBNYXRoLm1pbihjb25maWcubWF4UmV0cnlEZWxheUluTXMsIGV4cG9uZW50aWFsRGVsYXkpO1xuICAgIC8vIEFsbG93IHRoZSBmaW5hbCB2YWx1ZSB0byBoYXZlIHNvbWUgXCJqaXR0ZXJcIiAod2l0aGluIDUwJSBvZiB0aGUgZGVsYXkgc2l6ZSkgc29cbiAgICAvLyB0aGF0IHJldHJpZXMgYWNyb3NzIG11bHRpcGxlIGNsaWVudHMgZG9uJ3Qgb2NjdXIgc2ltdWx0YW5lb3VzbHkuXG4gICAgY29uc3QgcmV0cnlBZnRlckluTXMgPSBjbGFtcGVkRGVsYXkgLyAyICsgKDAsIHJhbmRvbV9qc18xLmdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUpKDAsIGNsYW1wZWREZWxheSAvIDIpO1xuICAgIHJldHVybiB7IHJldHJ5QWZ0ZXJJbk1zIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxheS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/delay.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/error.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/error.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isError = isError;\nconst object_js_1 = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js\");\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    if ((0, object_js_1.isObject)(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixvQkFBb0IsbUJBQU8sQ0FBQyxnR0FBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7XG5jb25zdCBvYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL29iamVjdC5qc1wiKTtcbi8qKlxuICogVHlwZWd1YXJkIGZvciBhbiBlcnJvciBvYmplY3Qgc2hhcGUgKGhhcyBuYW1lIGFuZCBtZXNzYWdlKVxuICogQHBhcmFtIGUgLSBTb21ldGhpbmcgY2F1Z2h0IGJ5IGEgY2F0Y2ggY2xhdXNlLlxuICovXG5mdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgICBpZiAoKDAsIG9iamVjdF9qc18xLmlzT2JqZWN0KShlKSkge1xuICAgICAgICBjb25zdCBoYXNOYW1lID0gdHlwZW9mIGUubmFtZSA9PT0gXCJzdHJpbmdcIjtcbiAgICAgICAgY29uc3QgaGFzTWVzc2FnZSA9IHR5cGVvZiBlLm1lc3NhZ2UgPT09IFwic3RyaW5nXCI7XG4gICAgICAgIHJldHVybiBoYXNOYW1lICYmIGhhc01lc3NhZ2U7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/helpers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/helpers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.delay = delay;\nexports.parseHeaderValueAsNumber = parseHeaderValueAsNumber;\nconst AbortError_js_1 = __webpack_require__(/*! ../abort-controller/AbortError.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/abort-controller/AbortError.js\");\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new AbortError_js_1.AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nfunction parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGdDQUFnQztBQUNoQyx3QkFBd0IsbUJBQU8sQ0FBQyxzSUFBbUM7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFx1dGlsXFxoZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlbGF5ID0gZGVsYXk7XG5leHBvcnRzLnBhcnNlSGVhZGVyVmFsdWVBc051bWJlciA9IHBhcnNlSGVhZGVyVmFsdWVBc051bWJlcjtcbmNvbnN0IEFib3J0RXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuLi9hYm9ydC1jb250cm9sbGVyL0Fib3J0RXJyb3IuanNcIik7XG5jb25zdCBTdGFuZGFyZEFib3J0TWVzc2FnZSA9IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIjtcbi8qKlxuICogQSB3cmFwcGVyIGZvciBzZXRUaW1lb3V0IHRoYXQgcmVzb2x2ZXMgYSBwcm9taXNlIGFmdGVyIGRlbGF5SW5NcyBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0gZGVsYXlJbk1zIC0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gYmUgZGVsYXllZC5cbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSB0byBiZSByZXNvbHZlZCB3aXRoIGFmdGVyIGEgdGltZW91dCBvZiB0IG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIGRlbGF5IC0gY3VycmVudGx5IGFib3J0IG9wdGlvbnNcbiAqICAgICAgICAgICAgICAgICAgLSBhYm9ydFNpZ25hbCAtIFRoZSBhYm9ydFNpZ25hbCBhc3NvY2lhdGVkIHdpdGggY29udGFpbmluZyBvcGVyYXRpb24uXG4gKiAgICAgICAgICAgICAgICAgIC0gYWJvcnRFcnJvck1zZyAtIFRoZSBhYm9ydCBlcnJvciBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCBjb250YWluaW5nIG9wZXJhdGlvbi5cbiAqIEByZXR1cm5zIFJlc29sdmVkIHByb21pc2VcbiAqL1xuZnVuY3Rpb24gZGVsYXkoZGVsYXlJbk1zLCB2YWx1ZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGxldCB0aW1lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IG9uQWJvcnRlZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgY29uc3QgcmVqZWN0T25BYm9ydCA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEFib3J0RXJyb3JfanNfMS5BYm9ydEVycm9yKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRFcnJvck1zZykgPyBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRFcnJvck1zZyA6IFN0YW5kYXJkQWJvcnRNZXNzYWdlKSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlbW92ZUxpc3RlbmVycyA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSAmJiBvbkFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmFib3J0U2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBvbkFib3J0ZWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkgJiYgb3B0aW9ucy5hYm9ydFNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9XG4gICAgICAgIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICB9LCBkZWxheUluTXMpO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSB7XG4gICAgICAgICAgICBvcHRpb25zLmFib3J0U2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0ZWQpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICogQHJldHVybnMgdGhlIHBhcnNlZCB2YWx1ZSBvciB1bmRlZmluZWQgaWYgdGhlIHBhcnNlZCB2YWx1ZSBpcyBpbnZhbGlkLlxuICovXG5mdW5jdGlvbiBwYXJzZUhlYWRlclZhbHVlQXNOdW1iZXIocmVzcG9uc2UsIGhlYWRlck5hbWUpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KGhlYWRlck5hbWUpO1xuICAgIGlmICghdmFsdWUpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB2YWx1ZUFzTnVtID0gTnVtYmVyKHZhbHVlKTtcbiAgICBpZiAoTnVtYmVyLmlzTmFOKHZhbHVlQXNOdW0pKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIHZhbHVlQXNOdW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/inspect.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/inspect.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.custom = void 0;\nconst node_util_1 = __webpack_require__(/*! node:util */ \"node:util\");\nexports.custom = node_util_1.inspect.custom;\n//# sourceMappingURL=inspect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvaW5zcGVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcaW5zcGVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jdXN0b20gPSB2b2lkIDA7XG5jb25zdCBub2RlX3V0aWxfMSA9IHJlcXVpcmUoXCJub2RlOnV0aWxcIik7XG5leHBvcnRzLmN1c3RvbSA9IG5vZGVfdXRpbF8xLmluc3BlY3QuY3VzdG9tO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zcGVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/inspect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/internal.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/internal.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sanitizer = exports.uint8ArrayToString = exports.stringToUint8Array = exports.isWebWorker = exports.isReactNative = exports.isDeno = exports.isNodeRuntime = exports.isNodeLike = exports.isBun = exports.isBrowser = exports.randomUUID = exports.computeSha256Hmac = exports.computeSha256Hash = exports.isError = exports.isObject = exports.getRandomIntegerInclusive = exports.calculateRetryDelay = void 0;\nvar delay_js_1 = __webpack_require__(/*! ./delay.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/delay.js\");\nObject.defineProperty(exports, \"calculateRetryDelay\", ({ enumerable: true, get: function () { return delay_js_1.calculateRetryDelay; } }));\nvar random_js_1 = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/random.js\");\nObject.defineProperty(exports, \"getRandomIntegerInclusive\", ({ enumerable: true, get: function () { return random_js_1.getRandomIntegerInclusive; } }));\nvar object_js_1 = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js\");\nObject.defineProperty(exports, \"isObject\", ({ enumerable: true, get: function () { return object_js_1.isObject; } }));\nvar error_js_1 = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/error.js\");\nObject.defineProperty(exports, \"isError\", ({ enumerable: true, get: function () { return error_js_1.isError; } }));\nvar sha256_js_1 = __webpack_require__(/*! ./sha256.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sha256.js\");\nObject.defineProperty(exports, \"computeSha256Hash\", ({ enumerable: true, get: function () { return sha256_js_1.computeSha256Hash; } }));\nObject.defineProperty(exports, \"computeSha256Hmac\", ({ enumerable: true, get: function () { return sha256_js_1.computeSha256Hmac; } }));\nvar uuidUtils_js_1 = __webpack_require__(/*! ./uuidUtils.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js\");\nObject.defineProperty(exports, \"randomUUID\", ({ enumerable: true, get: function () { return uuidUtils_js_1.randomUUID; } }));\nvar checkEnvironment_js_1 = __webpack_require__(/*! ./checkEnvironment.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/checkEnvironment.js\");\nObject.defineProperty(exports, \"isBrowser\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isBrowser; } }));\nObject.defineProperty(exports, \"isBun\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isBun; } }));\nObject.defineProperty(exports, \"isNodeLike\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isNodeLike; } }));\nObject.defineProperty(exports, \"isNodeRuntime\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isNodeRuntime; } }));\nObject.defineProperty(exports, \"isDeno\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isDeno; } }));\nObject.defineProperty(exports, \"isReactNative\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isReactNative; } }));\nObject.defineProperty(exports, \"isWebWorker\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isWebWorker; } }));\nvar bytesEncoding_js_1 = __webpack_require__(/*! ./bytesEncoding.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/bytesEncoding.js\");\nObject.defineProperty(exports, \"stringToUint8Array\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.stringToUint8Array; } }));\nObject.defineProperty(exports, \"uint8ArrayToString\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.uint8ArrayToString; } }));\nvar sanitizer_js_1 = __webpack_require__(/*! ./sanitizer.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js\");\nObject.defineProperty(exports, \"Sanitizer\", ({ enumerable: true, get: function () { return sanitizer_js_1.Sanitizer; } }));\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvaW50ZXJuYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLDBCQUEwQixHQUFHLDBCQUEwQixHQUFHLG1CQUFtQixHQUFHLHFCQUFxQixHQUFHLGNBQWMsR0FBRyxxQkFBcUIsR0FBRyxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcsZUFBZSxHQUFHLGdCQUFnQixHQUFHLGlDQUFpQyxHQUFHLDJCQUEyQjtBQUMvWSxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBWTtBQUNyQyx1REFBc0QsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDeEksa0JBQWtCLG1CQUFPLENBQUMsZ0dBQWE7QUFDdkMsNkRBQTRELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQ3JKLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDLDRDQUEyQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUNuSCxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBWTtBQUNyQywyQ0FBMEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDaEgsa0JBQWtCLG1CQUFPLENBQUMsZ0dBQWE7QUFDdkMscURBQW9ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3JJLHFEQUFvRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNySSxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBZ0I7QUFDN0MsOENBQTZDLEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQzFILDRCQUE0QixtQkFBTyxDQUFDLG9IQUF1QjtBQUMzRCw2Q0FBNEMsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDL0gseUNBQXdDLEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3ZILDhDQUE2QyxFQUFFLHFDQUFxQyw0Q0FBNEMsRUFBQztBQUNqSSxpREFBZ0QsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDdkksMENBQXlDLEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ3pILGlEQUFnRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUN2SSwrQ0FBOEMsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDbkkseUJBQXlCLG1CQUFPLENBQUMsOEdBQW9CO0FBQ3JELHNEQUFxRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUM5SSxzREFBcUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDOUkscUJBQXFCLG1CQUFPLENBQUMsc0dBQWdCO0FBQzdDLDZDQUE0QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUN4SCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcaW50ZXJuYWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2FuaXRpemVyID0gZXhwb3J0cy51aW50OEFycmF5VG9TdHJpbmcgPSBleHBvcnRzLnN0cmluZ1RvVWludDhBcnJheSA9IGV4cG9ydHMuaXNXZWJXb3JrZXIgPSBleHBvcnRzLmlzUmVhY3ROYXRpdmUgPSBleHBvcnRzLmlzRGVubyA9IGV4cG9ydHMuaXNOb2RlUnVudGltZSA9IGV4cG9ydHMuaXNOb2RlTGlrZSA9IGV4cG9ydHMuaXNCdW4gPSBleHBvcnRzLmlzQnJvd3NlciA9IGV4cG9ydHMucmFuZG9tVVVJRCA9IGV4cG9ydHMuY29tcHV0ZVNoYTI1NkhtYWMgPSBleHBvcnRzLmNvbXB1dGVTaGEyNTZIYXNoID0gZXhwb3J0cy5pc0Vycm9yID0gZXhwb3J0cy5pc09iamVjdCA9IGV4cG9ydHMuZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZSA9IGV4cG9ydHMuY2FsY3VsYXRlUmV0cnlEZWxheSA9IHZvaWQgMDtcbnZhciBkZWxheV9qc18xID0gcmVxdWlyZShcIi4vZGVsYXkuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjYWxjdWxhdGVSZXRyeURlbGF5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkZWxheV9qc18xLmNhbGN1bGF0ZVJldHJ5RGVsYXk7IH0gfSk7XG52YXIgcmFuZG9tX2pzXzEgPSByZXF1aXJlKFwiLi9yYW5kb20uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByYW5kb21fanNfMS5nZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlOyB9IH0pO1xudmFyIG9iamVjdF9qc18xID0gcmVxdWlyZShcIi4vb2JqZWN0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG9iamVjdF9qc18xLmlzT2JqZWN0OyB9IH0pO1xudmFyIGVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi9lcnJvci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yX2pzXzEuaXNFcnJvcjsgfSB9KTtcbnZhciBzaGEyNTZfanNfMSA9IHJlcXVpcmUoXCIuL3NoYTI1Ni5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbXB1dGVTaGEyNTZIYXNoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaGEyNTZfanNfMS5jb21wdXRlU2hhMjU2SGFzaDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbXB1dGVTaGEyNTZIbWFjXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaGEyNTZfanNfMS5jb21wdXRlU2hhMjU2SG1hYzsgfSB9KTtcbnZhciB1dWlkVXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V1aWRVdGlscy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInJhbmRvbVVVSURcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV1aWRVdGlsc19qc18xLnJhbmRvbVVVSUQ7IH0gfSk7XG52YXIgY2hlY2tFbnZpcm9ubWVudF9qc18xID0gcmVxdWlyZShcIi4vY2hlY2tFbnZpcm9ubWVudC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQnJvd3NlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2hlY2tFbnZpcm9ubWVudF9qc18xLmlzQnJvd3NlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQnVuXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjaGVja0Vudmlyb25tZW50X2pzXzEuaXNCdW47IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc05vZGVMaWtlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjaGVja0Vudmlyb25tZW50X2pzXzEuaXNOb2RlTGlrZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTm9kZVJ1bnRpbWVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNoZWNrRW52aXJvbm1lbnRfanNfMS5pc05vZGVSdW50aW1lOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNEZW5vXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjaGVja0Vudmlyb25tZW50X2pzXzEuaXNEZW5vOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNSZWFjdE5hdGl2ZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2hlY2tFbnZpcm9ubWVudF9qc18xLmlzUmVhY3ROYXRpdmU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1dlYldvcmtlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2hlY2tFbnZpcm9ubWVudF9qc18xLmlzV2ViV29ya2VyOyB9IH0pO1xudmFyIGJ5dGVzRW5jb2RpbmdfanNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzRW5jb2RpbmcuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzdHJpbmdUb1VpbnQ4QXJyYXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ5dGVzRW5jb2RpbmdfanNfMS5zdHJpbmdUb1VpbnQ4QXJyYXk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ1aW50OEFycmF5VG9TdHJpbmdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ5dGVzRW5jb2RpbmdfanNfMS51aW50OEFycmF5VG9TdHJpbmc7IH0gfSk7XG52YXIgc2FuaXRpemVyX2pzXzEgPSByZXF1aXJlKFwiLi9zYW5pdGl6ZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTYW5pdGl6ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNhbml0aXplcl9qc18xLlNhbml0aXplcjsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/internal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isObject = isObject;\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvb2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFx1dGlsXFxvYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcbi8qKlxuICogSGVscGVyIHRvIGRldGVybWluZSB3aGVuIGFuIGlucHV0IGlzIGEgZ2VuZXJpYyBKUyBvYmplY3QuXG4gKiBAcmV0dXJucyB0cnVlIHdoZW4gaW5wdXQgaXMgYW4gb2JqZWN0IHR5cGUgdGhhdCBpcyBub3QgbnVsbCwgQXJyYXksIFJlZ0V4cCwgb3IgRGF0ZS5cbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBpbnB1dCAhPT0gbnVsbCAmJlxuICAgICAgICAhQXJyYXkuaXNBcnJheShpbnB1dCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIFJlZ0V4cCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIERhdGUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/random.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/random.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRandomIntegerInclusive = getRandomIntegerInclusive;\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHV0aWxcXHJhbmRvbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlID0gZ2V0UmFuZG9tSW50ZWdlckluY2x1c2l2ZTtcbi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBpbnRlZ2VyIHZhbHVlIGJldHdlZW4gYSBsb3dlciBhbmQgdXBwZXIgYm91bmQsXG4gKiBpbmNsdXNpdmUgb2YgYm90aCBib3VuZHMuXG4gKiBOb3RlIHRoYXQgdGhpcyB1c2VzIE1hdGgucmFuZG9tIGFuZCBpc24ndCBzZWN1cmUuIElmIHlvdSBuZWVkIHRvIHVzZVxuICogdGhpcyBmb3IgYW55IGtpbmQgb2Ygc2VjdXJpdHkgcHVycG9zZSwgZmluZCBhIGJldHRlciBzb3VyY2Ugb2YgcmFuZG9tLlxuICogQHBhcmFtIG1pbiAtIFRoZSBzbWFsbGVzdCBpbnRlZ2VyIHZhbHVlIGFsbG93ZWQuXG4gKiBAcGFyYW0gbWF4IC0gVGhlIGxhcmdlc3QgaW50ZWdlciB2YWx1ZSBhbGxvd2VkLlxuICovXG5mdW5jdGlvbiBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlKG1pbiwgbWF4KSB7XG4gICAgLy8gTWFrZSBzdXJlIGlucHV0cyBhcmUgaW50ZWdlcnMuXG4gICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgbWF4ID0gTWF0aC5mbG9vcihtYXgpO1xuICAgIC8vIFBpY2sgYSByYW5kb20gb2Zmc2V0IGZyb20gemVybyB0byB0aGUgc2l6ZSBvZiB0aGUgcmFuZ2UuXG4gICAgLy8gU2luY2UgTWF0aC5yYW5kb20oKSBjYW4gbmV2ZXIgcmV0dXJuIDEsIHdlIGhhdmUgdG8gbWFrZSB0aGUgcmFuZ2Ugb25lIGxhcmdlclxuICAgIC8vIGluIG9yZGVyIHRvIGJlIGluY2x1c2l2ZSBvZiB0aGUgbWF4aW11bSB2YWx1ZSBhZnRlciB3ZSB0YWtlIHRoZSBmbG9vci5cbiAgICBjb25zdCBvZmZzZXQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpO1xuICAgIHJldHVybiBvZmZzZXQgKyBtaW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yYW5kb20uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sanitizer = void 0;\nconst object_js_1 = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/object.js\");\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * A utility class to sanitize objects for logging.\n */\nclass Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    /**\n     * Sanitizes an object for logging.\n     * @param obj - The object to sanitize\n     * @returns - The sanitized object as a string\n     */\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0, object_js_1.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    /**\n     * Sanitizes a URL for logging.\n     * @param value - The URL to sanitize\n     * @returns - The sanitized URL as a string\n     */\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\nexports.Sanitizer = Sanitizer;\n//# sourceMappingURL=sanitizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sanitizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sha256.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sha256.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.computeSha256Hmac = computeSha256Hmac;\nexports.computeSha256Hash = computeSha256Hash;\nconst node_crypto_1 = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nasync function computeSha256Hmac(key, stringToSign, encoding) {\n    const decodedKey = Buffer.from(key, \"base64\");\n    return (0, node_crypto_1.createHmac)(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nasync function computeSha256Hash(content, encoding) {\n    return (0, node_crypto_1.createHash)(\"sha256\").update(content).digest(encoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvc2hhMjU2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIseUJBQXlCO0FBQ3pCLHNCQUFzQixtQkFBTyxDQUFDLGdDQUFhO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhbGVudGluYVxcT25lRHJpdmVcXERlc2t0b3BcXEthdGEgR2l0XFxLYXRhLUZsdWpvR2VuZXJpY29kZUFwcm9iYWNpb25cXG5vZGVfbW9kdWxlc1xcQHR5cGVzcGVjXFx0cy1odHRwLXJ1bnRpbWVcXGRpc3RcXGNvbW1vbmpzXFx1dGlsXFxzaGEyNTYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29tcHV0ZVNoYTI1NkhtYWMgPSBjb21wdXRlU2hhMjU2SG1hYztcbmV4cG9ydHMuY29tcHV0ZVNoYTI1Nkhhc2ggPSBjb21wdXRlU2hhMjU2SGFzaDtcbmNvbnN0IG5vZGVfY3J5cHRvXzEgPSByZXF1aXJlKFwibm9kZTpjcnlwdG9cIik7XG4vKipcbiAqIEdlbmVyYXRlcyBhIFNIQS0yNTYgSE1BQyBzaWduYXR1cmUuXG4gKiBAcGFyYW0ga2V5IC0gVGhlIEhNQUMga2V5IHJlcHJlc2VudGVkIGFzIGEgYmFzZTY0IHN0cmluZywgdXNlZCB0byBnZW5lcmF0ZSB0aGUgY3J5cHRvZ3JhcGhpYyBITUFDIGhhc2guXG4gKiBAcGFyYW0gc3RyaW5nVG9TaWduIC0gVGhlIGRhdGEgdG8gYmUgc2lnbmVkLlxuICogQHBhcmFtIGVuY29kaW5nIC0gVGhlIHRleHR1YWwgZW5jb2RpbmcgdG8gdXNlIGZvciB0aGUgcmV0dXJuZWQgSE1BQyBkaWdlc3QuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNvbXB1dGVTaGEyNTZIbWFjKGtleSwgc3RyaW5nVG9TaWduLCBlbmNvZGluZykge1xuICAgIGNvbnN0IGRlY29kZWRLZXkgPSBCdWZmZXIuZnJvbShrZXksIFwiYmFzZTY0XCIpO1xuICAgIHJldHVybiAoMCwgbm9kZV9jcnlwdG9fMS5jcmVhdGVIbWFjKShcInNoYTI1NlwiLCBkZWNvZGVkS2V5KS51cGRhdGUoc3RyaW5nVG9TaWduKS5kaWdlc3QoZW5jb2RpbmcpO1xufVxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBTSEEtMjU2IGhhc2guXG4gKiBAcGFyYW0gY29udGVudCAtIFRoZSBkYXRhIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBoYXNoLlxuICogQHBhcmFtIGVuY29kaW5nIC0gVGhlIHRleHR1YWwgZW5jb2RpbmcgdG8gdXNlIGZvciB0aGUgcmV0dXJuZWQgaGFzaC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVNoYTI1Nkhhc2goY29udGVudCwgZW5jb2RpbmcpIHtcbiAgICByZXR1cm4gKDAsIG5vZGVfY3J5cHRvXzEuY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGNvbnRlbnQpLmRpZ2VzdChlbmNvZGluZyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEyNTYuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/sha256.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isNodeReadableStream = isNodeReadableStream;\nexports.isWebReadableStream = isWebReadableStream;\nexports.isBinaryBody = isBinaryBody;\nexports.isReadableStream = isReadableStream;\nexports.isBlob = isBlob;\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nfunction isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nfunction isBinaryBody(body) {\n    return (body !== undefined &&\n        (body instanceof Uint8Array ||\n            isReadableStream(body) ||\n            typeof body === \"function\" ||\n            body instanceof Blob));\n}\nfunction isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nfunction isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvdHlwZUd1YXJkcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLDJCQUEyQjtBQUMzQixvQkFBb0I7QUFDcEIsd0JBQXdCO0FBQ3hCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcdHlwZUd1YXJkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc05vZGVSZWFkYWJsZVN0cmVhbSA9IGlzTm9kZVJlYWRhYmxlU3RyZWFtO1xuZXhwb3J0cy5pc1dlYlJlYWRhYmxlU3RyZWFtID0gaXNXZWJSZWFkYWJsZVN0cmVhbTtcbmV4cG9ydHMuaXNCaW5hcnlCb2R5ID0gaXNCaW5hcnlCb2R5O1xuZXhwb3J0cy5pc1JlYWRhYmxlU3RyZWFtID0gaXNSZWFkYWJsZVN0cmVhbTtcbmV4cG9ydHMuaXNCbG9iID0gaXNCbG9iO1xuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGVTdHJlYW0oeCkge1xuICAgIHJldHVybiBCb29sZWFuKHggJiYgdHlwZW9mIHhbXCJwaXBlXCJdID09PSBcImZ1bmN0aW9uXCIpO1xufVxuZnVuY3Rpb24gaXNXZWJSZWFkYWJsZVN0cmVhbSh4KSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oeCAmJlxuICAgICAgICB0eXBlb2YgeC5nZXRSZWFkZXIgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgeC50ZWUgPT09IFwiZnVuY3Rpb25cIik7XG59XG5mdW5jdGlvbiBpc0JpbmFyeUJvZHkoYm9keSkge1xuICAgIHJldHVybiAoYm9keSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIChib2R5IGluc3RhbmNlb2YgVWludDhBcnJheSB8fFxuICAgICAgICAgICAgaXNSZWFkYWJsZVN0cmVhbShib2R5KSB8fFxuICAgICAgICAgICAgdHlwZW9mIGJvZHkgPT09IFwiZnVuY3Rpb25cIiB8fFxuICAgICAgICAgICAgYm9keSBpbnN0YW5jZW9mIEJsb2IpKTtcbn1cbmZ1bmN0aW9uIGlzUmVhZGFibGVTdHJlYW0oeCkge1xuICAgIHJldHVybiBpc05vZGVSZWFkYWJsZVN0cmVhbSh4KSB8fCBpc1dlYlJlYWRhYmxlU3RyZWFtKHgpO1xufVxuZnVuY3Rpb24gaXNCbG9iKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHguc3RyZWFtID09PSBcImZ1bmN0aW9uXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlR3VhcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgent.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgent.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getUserAgentHeaderName = getUserAgentHeaderName;\nexports.getUserAgentValue = getUserAgentValue;\nconst userAgentPlatform_js_1 = __webpack_require__(/*! ./userAgentPlatform.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgentPlatform.js\");\nconst constants_js_1 = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/constants.js\");\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0, userAgentPlatform_js_1.getHeaderName)();\n}\n/**\n * @internal\n */\nasync function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"ts-http-runtime\", constants_js_1.SDK_VERSION);\n    await (0, userAgentPlatform_js_1.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvdXNlckFnZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIseUJBQXlCO0FBQ3pCLCtCQUErQixtQkFBTyxDQUFDLHNIQUF3QjtBQUMvRCx1QkFBdUIsbUJBQU8sQ0FBQyxrR0FBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLElBQUksR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxRQUFRLEVBQUUsYUFBYTtBQUM5RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHV0aWxcXHVzZXJBZ2VudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRVc2VyQWdlbnRIZWFkZXJOYW1lID0gZ2V0VXNlckFnZW50SGVhZGVyTmFtZTtcbmV4cG9ydHMuZ2V0VXNlckFnZW50VmFsdWUgPSBnZXRVc2VyQWdlbnRWYWx1ZTtcbmNvbnN0IHVzZXJBZ2VudFBsYXRmb3JtX2pzXzEgPSByZXF1aXJlKFwiLi91c2VyQWdlbnRQbGF0Zm9ybS5qc1wiKTtcbmNvbnN0IGNvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50cy5qc1wiKTtcbmZ1bmN0aW9uIGdldFVzZXJBZ2VudFN0cmluZyh0ZWxlbWV0cnlJbmZvKSB7XG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0ZWxlbWV0cnlJbmZvKSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gdmFsdWUgPyBgJHtrZXl9LyR7dmFsdWV9YCA6IGtleTtcbiAgICAgICAgcGFydHMucHVzaCh0b2tlbik7XG4gICAgfVxuICAgIHJldHVybiBwYXJ0cy5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIGdldFVzZXJBZ2VudEhlYWRlck5hbWUoKSB7XG4gICAgcmV0dXJuICgwLCB1c2VyQWdlbnRQbGF0Zm9ybV9qc18xLmdldEhlYWRlck5hbWUpKCk7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5hc3luYyBmdW5jdGlvbiBnZXRVc2VyQWdlbnRWYWx1ZShwcmVmaXgpIHtcbiAgICBjb25zdCBydW50aW1lSW5mbyA9IG5ldyBNYXAoKTtcbiAgICBydW50aW1lSW5mby5zZXQoXCJ0cy1odHRwLXJ1bnRpbWVcIiwgY29uc3RhbnRzX2pzXzEuU0RLX1ZFUlNJT04pO1xuICAgIGF3YWl0ICgwLCB1c2VyQWdlbnRQbGF0Zm9ybV9qc18xLnNldFBsYXRmb3JtU3BlY2lmaWNEYXRhKShydW50aW1lSW5mbyk7XG4gICAgY29uc3QgZGVmYXVsdEFnZW50ID0gZ2V0VXNlckFnZW50U3RyaW5nKHJ1bnRpbWVJbmZvKTtcbiAgICBjb25zdCB1c2VyQWdlbnRWYWx1ZSA9IHByZWZpeCA/IGAke3ByZWZpeH0gJHtkZWZhdWx0QWdlbnR9YCA6IGRlZmF1bHRBZ2VudDtcbiAgICByZXR1cm4gdXNlckFnZW50VmFsdWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VyQWdlbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgentPlatform.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgentPlatform.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeaderName = getHeaderName;\nexports.setPlatformSpecificData = setPlatformSpecificData;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst os = tslib_1.__importStar(__webpack_require__(/*! node:os */ \"node:os\"));\nconst process = tslib_1.__importStar(__webpack_require__(/*! node:process */ \"node:process\"));\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nasync function setPlatformSpecificData(map) {\n    if (process && process.versions) {\n        const versions = process.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvdXNlckFnZW50UGxhdGZvcm0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQiwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsZ0NBQWdDLG1CQUFPLENBQUMsd0JBQVM7QUFDakQscUNBQXFDLG1CQUFPLENBQUMsa0NBQWM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVSxHQUFHLFVBQVUsR0FBRyxhQUFhO0FBQzdEO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFsZW50aW5hXFxPbmVEcml2ZVxcRGVza3RvcFxcS2F0YSBHaXRcXEthdGEtRmx1am9HZW5lcmljb2RlQXByb2JhY2lvblxcbm9kZV9tb2R1bGVzXFxAdHlwZXNwZWNcXHRzLWh0dHAtcnVudGltZVxcZGlzdFxcY29tbW9uanNcXHV0aWxcXHVzZXJBZ2VudFBsYXRmb3JtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEhlYWRlck5hbWUgPSBnZXRIZWFkZXJOYW1lO1xuZXhwb3J0cy5zZXRQbGF0Zm9ybVNwZWNpZmljRGF0YSA9IHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IG9zID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIm5vZGU6b3NcIikpO1xuY29uc3QgcHJvY2VzcyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJub2RlOnByb2Nlc3NcIikpO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gZ2V0SGVhZGVyTmFtZSgpIHtcbiAgICByZXR1cm4gXCJVc2VyLUFnZW50XCI7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5hc3luYyBmdW5jdGlvbiBzZXRQbGF0Zm9ybVNwZWNpZmljRGF0YShtYXApIHtcbiAgICBpZiAocHJvY2VzcyAmJiBwcm9jZXNzLnZlcnNpb25zKSB7XG4gICAgICAgIGNvbnN0IHZlcnNpb25zID0gcHJvY2Vzcy52ZXJzaW9ucztcbiAgICAgICAgaWYgKHZlcnNpb25zLmJ1bikge1xuICAgICAgICAgICAgbWFwLnNldChcIkJ1blwiLCB2ZXJzaW9ucy5idW4pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZlcnNpb25zLmRlbm8pIHtcbiAgICAgICAgICAgIG1hcC5zZXQoXCJEZW5vXCIsIHZlcnNpb25zLmRlbm8pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZlcnNpb25zLm5vZGUpIHtcbiAgICAgICAgICAgIG1hcC5zZXQoXCJOb2RlXCIsIHZlcnNpb25zLm5vZGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1hcC5zZXQoXCJPU1wiLCBgKCR7b3MuYXJjaCgpfS0ke29zLnR5cGUoKX0tJHtvcy5yZWxlYXNlKCl9KWApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlckFnZW50UGxhdGZvcm0uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/userAgentPlatform.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomUUID = randomUUID;\nconst node_crypto_1 = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : node_crypto_1.randomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHR5cGVzcGVjL3RzLWh0dHAtcnVudGltZS9kaXN0L2NvbW1vbmpzL3V0aWwvdXVpZFV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixzQkFBc0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWxlbnRpbmFcXE9uZURyaXZlXFxEZXNrdG9wXFxLYXRhIEdpdFxcS2F0YS1GbHVqb0dlbmVyaWNvZGVBcHJvYmFjaW9uXFxub2RlX21vZHVsZXNcXEB0eXBlc3BlY1xcdHMtaHR0cC1ydW50aW1lXFxkaXN0XFxjb21tb25qc1xcdXRpbFxcdXVpZFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG52YXIgX2E7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJhbmRvbVVVSUQgPSByYW5kb21VVUlEO1xuY29uc3Qgbm9kZV9jcnlwdG9fMSA9IHJlcXVpcmUoXCJub2RlOmNyeXB0b1wiKTtcbi8vIE5PVEU6IFRoaXMgaXMgYSB3b3JrYXJvdW5kIHVudGlsIHdlIGNhbiB1c2UgYGdsb2JhbFRoaXMuY3J5cHRvLnJhbmRvbVVVSURgIGluIE5vZGUuanMgMTkrLlxuY29uc3QgdXVpZEZ1bmN0aW9uID0gdHlwZW9mICgoX2EgPSBnbG9iYWxUaGlzID09PSBudWxsIHx8IGdsb2JhbFRoaXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGdsb2JhbFRoaXMuY3J5cHRvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmFuZG9tVVVJRCkgPT09IFwiZnVuY3Rpb25cIlxuICAgID8gZ2xvYmFsVGhpcy5jcnlwdG8ucmFuZG9tVVVJRC5iaW5kKGdsb2JhbFRoaXMuY3J5cHRvKVxuICAgIDogbm9kZV9jcnlwdG9fMS5yYW5kb21VVUlEO1xuLyoqXG4gKiBHZW5lcmF0ZWQgVW5pdmVyc2FsbHkgVW5pcXVlIElkZW50aWZpZXJcbiAqXG4gKiBAcmV0dXJucyBSRkM0MTIyIHY0IFVVSUQuXG4gKi9cbmZ1bmN0aW9uIHJhbmRvbVVVSUQoKSB7XG4gICAgcmV0dXJuIHV1aWRGdW5jdGlvbigpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXVpZFV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@typespec/ts-http-runtime/dist/commonjs/util/uuidUtils.js\n");

/***/ })

};
;